<!DOCTYPE html>
<html lang="tr-TR" prefix="og: http://ogp.me/ns#">

<head>
  <% include ./_partial/head %>
</head>

<body>
  <% include ./_partial/header %>


    <div class="page-title">
      <div class="container d-lg-flex justify-content-between py-2 py-lg-3">
        <div class="order-lg-2 mb-3 mb-lg-0 pt-lg-2">
          <nav aria-label="breadcrumb" class="d-none d-lg-block">
            <ol class="breadcrumb breadcrumb-dark flex-lg-nowrap justify-content-center justify-content-lg-star">
              <li class="breadcrumb-item"><a class="text-nowrap" href="/"><i class="czi-home"></i></a></li>
              <li class="breadcrumb-item text-nowrap"><a href="/kasap-urunleri">Ürünler</a>
              </li>
            </ol>
          </nav>
        </div>
        <div class="order-lg-1 pr-lg-4 text-center text-lg-left">
          <h1 class="h3">
            <%=butcher.name%>
          </h1>
          <h2 class="h2 lead">
            Ne kadar çok ürün o kadar çok sipariş
          </h2>
        </div>
      </div>
    </div>


    <div id="priceapp" v-cloak class="container">
      <div class="bg-secondary p-3 mb-3">
        <p>
          Faydalı olacağını düşündüğümüz bir kaç not:
        </p>
        <ul class="list">
          <li>
            <strong>Satışı biz değil siz</strong> yapmaktasınız. <strong>Tezgah fiyatlarınızı birebir</strong> verin.
          </li>
          <li>
            <strong>Tezgâh ve KasaptanAl fiyatlarının farklı olması</strong> durumunda KasaptanAl hiçbir uyarıya gerek
            duymadan <strong>üyelik iptal hakkını</strong> saklı tutar.
          </li>
          <li>
            Internet ortamında <strong>firesiz satış yapıyoruz</strong>. Sadece firesi olabilecek kemikli ürünlerde fire
            farkı ekleyin.
          </li>
          <li>
            <strong>Tavuk gibi fiyatı günlük değişen ürünlerde</strong> 1-2 TL fiyat farkı ekleyebilirsiniz.
          </li>
          <li>
            Aynı gün elinizde olmasa bile <strong>ertesi gün temin edebileceğiniz her ürüne</strong> fiyat verin.
          </li>
          <li>
            <strong>Aşırı yüksek fiyat vermeniz</strong> sıralamada arkalarda olmanıza yol açmaktadır.
          </li>
          <li>
            Fiyat düzenlemesi yaptıktan sonra <strong><a target="_blank" href="/<%=butcher.slug%>">burayı</a></strong>
            kullanarak kasap profilinizi <strong>açıp lütfen kontrol edin</strong>.
          </li>
          <li>
            Fiyat giriş ve düzenleme bittikten sonra gerekli kontroller için <strong>bizi haberdar ediniz</strong>
          </li>
        </ul>
        <button v-if="!canGo" @click="canGo=1" class="btn-info btn mr-1">Okudum Devam</button>
        <a v-if="canGo" target="_blank" class="btn btn-dark" href="/<%=butcher.slug%>">Profilinizi Görüntüleyin</a>
      </div>

      <div v-show="canGo">
        <div v-if="!list || list.length == 0">
          Yüklüyorum ...
        </div>
        <div v-if="list">
          <div class="border bg-secondary p-3" v-if="list.length - completed > 0">
            {{completed}} üründe fiyatınız var, kalan <strong>{{list.length - completed}}</strong> üründe fiyatınız
            gözükmüyor. Aynı gün temin edemeseniz bile temin edebildiğiniz her ürüne fiyat veriniz.
          </div>
          <div class="progress rounded-0 mb-2">
            <div class="progress-bar bg-info" role="progressbar" :style="{'width': completedPerc + '%'}"
              :aria-valuenow="completed" aria-valuemin="0" :aria-valuemax="list.length">{{completed}}/{{list.length}}
            </div>
          </div>
        </div>






        <table v-if="list && list.length > 0" class="table table-sm">
          <thead class="thead-dark">
            <th scope="col">Resim</th>
            <th scope="col">Ürün</th>
            <th class="text-right" scope="col">Fiyat</th>

          </thead>
          <tbody>


            <tr :id="p.slug + 'row'" v-bind:class="{'border border-primary': !hasPrice(p)}" v-for="(p, index) in list">




              <td style="width: 3rem;">


                <a class="d-block" target="_blank" :href="'/' + p.slug">
                  <img style="width: 3rem;" width="500" height="500" :src="p.thumbnail" class="lazyload">
                </a>
                <span class="text-muted font-size-xs">{{p.id}}</span>
              </td>
              <td>
                <!-- <div class="bg-secondary p-2 border mb-2" v-if="lastCat != p.category.id">
                  <h4 class="h5 mb-0">
                   {{p.category.title}}
                   <span class="d-none">{{ lastCat = p.category.id}}</span>
                  </h4>
                </div> -->

                <p class="mb-1">
                  <a class="text-dark d-block" target="_blank" :href="'/' + p.slug">
                    {{p.name}}
                  </a>
                  <span class="d-none text-muted font-size-sm">{{p.butcherProductNote}}</span>
                </p>
                <p class="font-size-sm text-success" v-if="p.note">
                  <span>
                    {{p.note}}
                  </span>
                </p>
                <ul v-if="p.enabled" class="list-unstyled mb-3">
                  <li v-for="(u, i) in p.units" class="badge badge-secondary mr-2 p-2 " v-if="u.enabled">
                    <money-view :unit="u.title || u.unit" :money="u.price">
                    </money-view>
                    <span v-if="u.unit != 'kg'"> ({{u.kgRatio}}KG)</span>
                  </li>

                </ul>

              </td>

              <td class="text-right">
                <button v-on:click="openDialog(p, index)"
                  v-bind:class="{'btn-warning': hasPrice(p) && !p.enabled ,'btn-success': hasPrice(p) && p.enabled, 'btn-secondary': !hasPrice(p) }"
                  class="btn btn-sm">
                  <span>{{hasPrice(p) ? 'Fiyat Düzenle':'Fiyat Ver'}}</span>
                </button>
              </td>

            </tr>
          </tbody>
        </table>
      </div>

      <div class="modal modal-fullscreen-sm" id="pricemodal" tabindex="-1" role="dialog" data-keyboard="false"
        aria-hidden="true">
        <div class="modal-dialog " role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">{{edit && edit.name}}</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body p-0">
              <div class=" p-2 border-bottom bg-dark text-light" v-if="edit && edit.butcherProductNote"
                class="text-muted">
                {{edit && edit.butcherProductNote }}
              </div>

              <div class="p-2">

                <div class="form-group mb-0">
                  <label><strong>Bize iletmek istediğiniz</strong> notunuz varsa alalım</label>
                  <textarea rows="4" class="form-control font-size-sm" v-model="edit && edit.note"
                    :placeholder="false ? edit.butcherProductNote: 'Paketli, şoklu olduğu, özel olarak yaptırıldığı gibi ürününüze özel yazmamızı istediğiniz not varsa belirtin.'"></textarea>
                  <small class=" form-text text-muted"></small>
                </div>

                <div v-if="edit">
                  <ul class="nav nav-tabs mb-0">
                    <li v-for="(u, i) in edit.units" class="nav-item">
                      <a @click="editUnitVal=u" :class="{'active': editUnit == u}" class="nav-link">{{u.title}}</a>
                    </li>
                  </ul>
                  <div class="mb-3" v-if="editUnit">
                    <div v-if="editUnit.butcherNote" class="mb-3 p-2 bg-secondary font-size-sm">
                      {{editUnit.butcherNote}}
                    </div>
                    <div class="mb-3 custom-control custom-checkbox">
                      <input :disabled="editUnit.butcherUnitSelection == 'forced'" :id="editUnit.unit + 'enabled'" type="checkbox" v-model="editUnit.enabled"
                        class="custom-control-input">
                      <label v-if="editUnit.unit != 'kg'" :for="editUnit.unit + 'enabled'" class="custom-control-label">{{editUnit.title}} olarak
                        satışınız varsa işaretleyin {{editUnit.butcherUnitSelection == 'forced' ? '[Zorunlu]':''}}</label>
                        <label v-else :for="editUnit.unit + 'enabled'" class="custom-control-label">{{editUnit.title}} satış fiyatınız</label>
                    </div>
                  


                    <div v-if="editUnit.enabled">

                      <div v-if="(editUnit.unit != 'kg') && (findUnit('kg', true) && canEdit(editUnit, 'weight'))"
                        class="custom-control custom-checkbox mb-1">
                        <input required :id="editUnit.unit + 'customWeightcb'" v-model="editUnit.customWeight"
                          type="checkbox" class="custom-control-input">
                        <label :for="editUnit.unit + 'customWeightcb'" class="custom-control-label">1 {{editUnit.title}} <strong>
                          {{editUnit.kgRatio}} KG</strong> olarak tanımlı. Ağırlığı size özel değiştirmek isterseniz işaretleyin.</label>
                      </div>

                      <div class="mb-3" v-if="editUnit.customWeight && canEdit(editUnit,'weight') && (editUnit.unit != 'kg') && (findUnit('kg'))">
                        <label for="">1 {{editUnit.title}} <strong>sizde</strong> ortalama kaç KG ?</label>
                        <input  v-model="editUnit.kgRatio" type="number" class="form-control price-control">
                      </div>

                      <div  v-if="(editUnit.unit != 'kg') && (findUnit('kg', true) && canEdit(editUnit,'price'))"
                        class="custom-control custom-checkbox mb-1">
                        <input required :id="editUnit.unit + 'salemanualcb'" v-model="editUnit.customPrice"
                          type="checkbox" class="custom-control-input">
                        <label :for="editUnit.unit + 'salemanualcb'" class="custom-control-label">{{editUnit.title}}
                          fiyatı KG'a göre otomatik hesaplanır. Ayrı fiyat vermek için işaretleyin.</label>
                      </div>



                      <div class="form-group" v-if="canEdit(editUnit,'price') && (editUnit.unit == 'kg') || editUnit.customPrice || !findUnit('kg')">
                        <div class="d-block"><strong style="text-transform: uppercase;">{{editUnit.title}}</strong>
                          satış fiyatınız</div>
                        <input required v-model="editUnit.price" type="text" class="form-control price-control"
                          placeholder="tezgah satış fiyatınız">
                      </div>





                    </div>
                  </div>

                </div>


                <div class="d-flex justify-content-between">
                  <button v-on:click="saveDialog(edit, true)" class="btn btn-sm btn-primary">Kaydet</button>

                  <button v-if="edit && hasPrice(list[editIndex])" v-on:click="toogleEnabled(edit)"
                    :class="{'btn-warning': list[editIndex].enabled, 'btn-success': !list[editIndex].enabled}"
                    class="btn btn-sm">
                    <span v-if="list[editIndex].enabled">Satıştan Kaldır</span>
                    <span v-else>Satışa Al</span>
                  </button>
                  <a v-if="edit" class="btn btn-sm btn-primary" target="_blank" :href="'/' + edit.slug">Ürünü Gör</a>
                </div>

              </div>

            </div>

          </div>
        </div>
      </div>

    </div>


    <% include ./_partial/footer %>
      <% include ./_partial/scripts %>


        <script>

          $(document).ready(function () {
            $('#price-edit').maskMoney();
          })

          window.priceApp = new Vue({
            el: '#priceapp',

            mounted: function () {
              var self = this;

              App.Backend.get('product/<%=butcher.slug%>/prePrices').then(function (result) {
                self.list = result.data;
              })
            },

            data: function () {
              return {
                list: [],
                edit: null,
                editUnitVal: null,
                editIndex: -1,
                completedPerc: 0,
                canGo: 0,
                lastCat: 0,
                renderComponent: true,
              }
            },

            computed: {


              editUnit: function () {
                if (!this.edit) return null;
                return this.editUnitVal || (this.editUnitVal = this.edit.units[0]);
              },



              completed: function () {
                var self = this;
                let result = this.list.filter(function (p) {
                  return self.hasPrice(p) && p.enabled
                }).length;
                this.completedPerc = Math.floor(this.list.length > 0 ? (result / this.list.length) * 100 : 0)
                return result;
              }
            },

            methods: {

              canEdit(unit, prop) {
                if (prop == 'price' && unit.unit == 'kg') return true;
                if (unit.butcherUnitEdit == 'none') return false;
                if (unit.butcherUnitEdit == 'all') return true;
                return unit.butcherUnitEdit == prop;
              },

              forceRerender() {
                this.renderComponent = false;

                this.$nextTick(() => {
                  this.renderComponent = true;
                });
              },

              priceView: function (units) {
                var best = units.find(function (u) {
                  if (u.unit == 'kg' && u.enabled) return u;
                });
                if (best) return best;
                best = units.find(function (u) {
                  if (u.enabled) return u;
                });
                if (!best) {
                  return {
                    title: 'Fiyat Verin',
                    price: 0
                  }
                } else return best;
              },

              hasPrice: function (item, forceEnabled) {
                var res = false;
                for (var i = 0; i < item.units.length; i++) {
                  if (item.units[i].price > 0) {
                    if (forceEnabled) return item.units[i].enabled;
                    return true;
                  }
                }
                return false;
              },

              findUnit: function (unit, enabled) {
                if (!this.edit || !this.editUnitVal) return false;
                var f = this.edit.units.find(function (u) {
                  return u.unit == unit
                });
                return f && (enabled ? (f.enabled ? f : null) : f);
              },

              toogleEnabled(p) {
                p.enabled = !p.enabled;
                this.saveDialog(p, false);
              },

              saveDialog(p, doEnable) {

                var valid = true;

                p.units.forEach(function (u) {
                  if (u.unit == 'kg' && u.enabled && !u.price) {
                    u.enabled = false
                  }
                  if (u.unit != 'kg' && !(u.kgRatio) && !(u.price)) {
                    u.enabled = false;
                  }
                });

                var self = this;

                App.Backend.post('product/<%=butcher.slug%>/prePrices', {
                  id: p.id,
                  units: p.units.map(function (u) {
                    return {
                      unit: u.unit,
                      enabled: u.enabled,
                      customPrice: u.customPrice,
                      price: parseFloat(u.price),
                      customWeight: u.customWeight,
                      kgRatio: u.kgRatio ? parseFloat(u.kgRatio): 0
                    }
                  }),
                  note: p.note,
                  enabled: (p.enabled || doEnable)
                }).then(function (result) {
                  var i = 0;
                  var f = self.list.find(function (l) {
                    return l.id == p.id
                    i++
                  })

                  Object.assign(f, result);
                  self.forceRerender()
                  $('#pricemodal').modal('hide');
                  $('#' + p.slug + 'row').fadeOut(500).fadeIn(500);

                }).catch(function (err) {
                  App.HandleError(err)
                });

              },

              openDialog(p, index) {
                this.edit = JSON.parse(JSON.stringify(p));
                // this.edit.units.forEach(function (u) {
                //   if (u.butcherUnitSelection == 'selected' || u.butcherUnitSelection == 'forced') {
                //     u.enabled = true
                //   }
                // });                
                this.editIndex = index;
                this.editUnitVal = null;
                $('#pricemodal').modal('show');
              }
            }
          })
        </script>

</body>

</html>