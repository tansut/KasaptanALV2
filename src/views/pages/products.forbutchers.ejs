<!DOCTYPE html>
<html lang="tr-TR" prefix="og: http://ogp.me/ns#">

<head>
  <% include ./_partial/head %>
</head>

<body>
  <% include ./_partial/header %>


    <div class="page-title">
      <div class="container d-lg-flex justify-content-between py-2 py-lg-3">
        <div class="order-lg-2 mb-3 mb-lg-0 pt-lg-2">
          <nav aria-label="breadcrumb" class="d-none d-lg-block">
            <ol class="breadcrumb breadcrumb-dark flex-lg-nowrap justify-content-center justify-content-lg-star">
              <li class="breadcrumb-item"><a class="text-nowrap" href="/"><i class="czi-home"></i></a></li>
              <li class="breadcrumb-item text-nowrap"><a href="/kasap-urunleri">Ürünler</a>
              </li>
            </ol>
          </nav>
        </div>
        <div class="order-lg-1 pr-lg-4 text-center text-lg-left">
          <h1 class="h3">
            <%=butcher.name%>
          </h1>
          <h2 class="h2 lead">
            Ne kadar çok ürün o kadar çok sipariş
          </h2>
        </div>
      </div>
    </div>


    <div id="priceapp" v-cloak class="container">
      <div class="bg-secondary p-3 mb-3">
        <p>
          Faydalı olacağını düşündüğümüz bir kaç not:
        </p>
        <ul class="list">
          <li>
            <strong>Satışı biz değil siz</strong> yapmaktasınız. <strong>Tezgah fiyatlarınızı birebir</strong> verin.
          </li>
          <li>
            <strong>Tezgâh ve KasaptanAl fiyatlarının farklı olması</strong> durumunda KasaptanAl hiçbir uyarıya gerek
            duymadan <strong>üyelik iptal hakkını</strong> saklı tutar.
          </li>
          <li>
            Internet ortamında <strong>firesiz satış yapıyoruz</strong>. Sadece firesi olabilecek kemikli ürünlerde fire
            farkı ekleyin.
          </li>
          <li>
            <strong>Tavuk gibi fiyatı günlük değişen ürünlerde</strong> 1-2 TL fiyat farkı ekleyebilirsiniz.
          </li>
          <li>
            Aynı gün elinizde olmasa bile <strong>ertesi gün temin edebileceğiniz her ürüne</strong> not bölümünde
            belirterek fiyat verin.
          </li>
          <li>
            <strong>Aşırı yüksek fiyat vermeniz</strong> sıralamada arkalarda olmanıza yol açmaktadır.
          </li>
          <li>
            Fiyat düzenlemesi yaptıktan sonra <strong><a target="_blank" href="/<%=butcher.slug%>">burayı</a></strong>
            kullanarak kasap profilinizi <strong>açıp lütfen kontrol edin</strong>.
          </li>
          <li>
            Fiyat giriş ve düzenleme bittikten sonra gerekli kontroller için <strong>bizi haberdar ediniz</strong>
          </li>
          <li>
            <strong>Ondalık işareti</strong> olarak virgül yerine . (nokta) kullanın. Örneğin 1250.54 gibi.

          </li>
        </ul>
        <button v-if="!canGo" @click="canGo=1" class="btn-info btn mr-1">Okudum Devam</button>
        <a v-if="canGo" target="_blank" class="btn btn-dark" href="/<%=butcher.slug%>">Profilinizi Görüntüleyin</a>
      </div>

      <div v-show="canGo">
        <div v-if="!list || list.length == 0">
          Yüklüyorum ...
        </div>
        <div v-if="list">
          <div class="border bg-secondary p-3" v-if="list.length - completed > 0">
            {{completed}} üründe fiyatınız var, kalan <strong>{{list.length - completed}}</strong> üründe fiyatınız
            gözükmüyor. Aynı gün temin edemeseniz bile temin edebildiğiniz her ürüne fiyat veriniz.
          </div>
          <div class="progress rounded-0 mb-2">
            <div class="progress-bar bg-info" role="progressbar" :style="{'width': completedPerc + '%'}"
              :aria-valuenow="completed" aria-valuemin="0" :aria-valuemax="list.length">{{completed}}/{{list.length}}
            </div>
          </div>
        </div>



        <div>
          <div class="form-row">
            <div class="form-group col-md-6">
              <select class="form-control" v-model="filter">
                <option selected="true" :value="null">Tüm Ürünlerim</option>
                <option :selected="this.filter == c" v-for="(c,i) in filters" :value="c">{{c.name}}</option>
              </select>
  
            </div>
            <div class="form-group col-md-6">
              <input class="form-control" :placeholder="this.filter ? this.filter.name + ' içinde ara': 'Tüm ürünlerde arayın'" type="search" v-model="searchString">
            </div>
          </div>

        </div>


        <table v-if="list && list.length > 0" class="table table-sm">
          <thead class="thead-dark">
            <th scope="col">Resim</th>
            <th scope="col">Ürün</th>
            <th class="text-right" scope="col">Fiyat</th>

          </thead>
          <tbody>


            <tr :id="p.slug + 'row'" v-bind:class="{'border border-primary': !hasPrice(p)}" v-for="(p, index) in filteredList()">




              <td style="width: 3rem;">


                <a class="d-block" target="_blank" :href="'/' + p.slug">
                  <img style="width: 3rem;" width="500" height="500" :src="p.thumbnail" class="lazyload">
                </a>
                <span class="text-muted font-size-xs">{{p.id}}</span>
              </td>
              <td>
                <!-- <div class="bg-secondary p-2 border mb-2" v-if="lastCat != p.category.id">
                  <h4 class="h5 mb-0">
                   {{p.category.title}}
                   <span class="d-none">{{ lastCat = p.category.id}}</span>
                  </h4>
                </div> -->

                <p class="mb-1">
                  <a class="text-dark d-block" target="_blank" :href="'/' + p.slug">
                    {{p.name}}
                  </a>
                  <span class="d-none text-muted font-size-sm">{{p.butcherProductNote}}</span>
                </p>
                <p class="font-size-sm text-success" v-if="p.note">
                  <span>
                    {{p.note}}
                  </span>
                </p>
                <ul v-if="p.enabled" class="list-unstyled mb-3">
                  <li v-for="(u, i) in p.units" class="badge badge-secondary mr-2 p-2 " v-if="u.enabled && u.id">
                    <money-view :unit="u.title || u.unit" :money="u.price">
                    </money-view>
                    <span v-if="u.unit != 'kg' && u.kgRatio"> ({{u.kgRatio}} {{p.kgTitle}})</span>
                  </li>

                </ul>

              </td>

              <td class="text-right">
                <button v-on:click="openDialog(p, index)"
                  v-bind:class="{'btn-warning': hasPrice(p) && !p.enabled ,'btn-info': hasPrice(p) && p.enabled, 'btn-secondary': !hasPrice(p) }"
                  class="btn btn-sm btn-block">
                  <span>{{hasPrice(p) ? 'Fiyat Düzenle':'Fiyat Ver'}}</span>
                </button>
                <button v-if="hasPrice(p) && p.enabled" v-on:click="openCampaign(p, index)"
                  v-bind:class="{'btn-secondary': !hasCampaign(p) ,'btn-secondary border border-success': hasCampaign(p) }"
                  class="btn btn-sm btn-block">
                  <i v-if="!hasCampaign(p)" class="czi-icon czi-loudspeaker mr-1"></i>
                  <i v-else class="czi-icon czi-thumb-up mr-1"></i>

                  <span>{{hasCampaign(p) ? 'Aktif - %' + (p.priceDiscount).toString() :'Kampanya Yap'}}</span>
                </button>

              </td>

            </tr>
          </tbody>
        </table>
      </div>



      <div class="modal modal-fullscreen-sm" id="campaignmodal" tabindex="-1" role="dialog" data-keyboard="false"
        aria-hidden="true">
        <div class="modal-dialog " role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">{{edit && edit.name}}</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body p-3">
              <form v-if="edit" @submit="checkCampaignForm" method="post">
                <div class="bg-secondary p-3 border font-size-sm">
                  <h5 class="h6">KasaptanAl ile öne çıkın</h5>
                  <p>
                    Basit bir indirim ile yeni müşteriler kazanın.
                  </p>
                  <p>
                    Kapmpanyalı ürününüz KasaptanAl'da <strong>indirim işaretiyle</strong> görünsün, KasaptanAl
                    profilinizde <strong>kampanyalı ürünler</strong> bölümü hemen açılsın.
                  </p>
                </div>
                <p class="text-primary" v-if="errors.length">
                  <b>Lütfen aşağıdaki hataları düzeltin:</b>
                <ul>
                  <li v-for="error in errors">{{ error }}</li>
                </ul>
                </p>

                <div>

                  <div class="form-group ">
                    <label for="inputState">Kampanya durumu</label>
                    <select v-model="edit.discountType" required class="form-control">
                      <option disabled value="">Lütfen seçim yapın</option>
                      <option value="none" :selected="edit.discountType == 'none'">Kampanya Kapalı</option>
                      <option value="discountAsPercent" :selected="edit.discountType == 'discountAsPercent'">Kampanya
                        Aktif</option>

                    </select>
                  </div>

                  <div class="form-group">
                    <label>İndirim yüzdesi belirleyin</label>
                    <input v-model="edit.priceDiscount" min="2" max="25" required type="number" class="form-control"
                      placeholder="yüzde kaç indirim yapmak istersiniz">
                    <small></small>
                  </div>

                </div>

                <button class="btn btn-primary">Değişiklikleri Kaydet</button>
              </form>
            </div>
          </div>
        </div>
      </div>

      <div class="modal modal-fullscreen-sm" id="pricemodal" tabindex="-1" role="dialog" data-keyboard="false"
        aria-hidden="true">
        <div class="modal-dialog " role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">{{edit && edit.name}}</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body p-0">
              <div v-html="edit.butcherProductNote" class="font-size-sm px-2 pt-2 border-bottom bg-secondary  text-dark"
                v-if="edit && edit.butcherProductNote" class="text-muted">

              </div>
              <div class="font-size-sm p-2" v-if="edit && edit.offerableBy != 'butcher'">
                <span><strong>Not:</strong> Bu ürünün satışı ürün yönetici onayı gerektirmekte. Eğer satıyorsanız lütfen
                  fiyat verip kaydedin, kontrol ardından satışa alacağız.</span>
              </div>

              <div class="p-2">

                <div class="form-group mb-0">
                  <label class="d-none"><strong>Bize iletmek istediğiniz</strong> notunuz varsa alalım</label>
                  <textarea rows="3" class="form-control font-size-sm" v-model="edit && edit.note"
                    :placeholder="false ? edit.butcherProductNote: 'Paketli, şoklu olduğu, özel olarak yaptırıldığı gibi ürününüze özel yazmamızı istediğiniz not varsa belirtin.'"></textarea>
                  <small class=" form-text text-muted"></small>
                </div>

                <div v-if="edit">
                  <ul class="nav nav-tabs  mb-3">
                    <li v-for="(u, i) in edit.units" class="nav-item font-size-sm">
                      <a @click="editUnitVal=u; editUnitIndex=i" :class="{'active': editUnit == u}"
                        class="nav-link">{{u.id == 0 ? 'Birim': u.title}}</a>
                    </li>
                  </ul>
                  <div v-if="editUnit">
                    <div v-html="editUnit.butcherNote" v-if="editUnit.butcherNote"
                      class="mb-3 mt-n3 p-2 bg-secondary font-size-sm">

                    </div>
                    <div v-if="editUnit.id" class="mb-3 custom-control custom-checkbox">
                      <input :disabled="editUnit.butcherUnitSelection == 'forced'" :id="editUnit.unit + 'enabled'"
                        type="checkbox" v-model="editUnit.enabled" class="custom-control-input">
                      <label v-if="editUnit.id" :for="editUnit.unit + 'enabled'"
                        class="custom-control-label">Müşterinize {{editUnit.title}} ile
                        satış yapmak için işaretleyin. {{editUnit.butcherUnitSelection == 'forced' ?
                        '[Zorunlu]':''}}</label>
                      <label v-else :for="editUnit.unit + 'enabled'" class="custom-control-label">{{editUnit.title}}
                        satış fiyatınız:</label>
                    </div>



                    <div v-if="editUnit.enabled">

                      <div v-if="(editUnit.id) && (editUnit.unit != 'kg') && (canEdit(editUnit, 'weight'))"
                        class="custom-control custom-checkbox mb-1">
                        <input required :id="editUnit.unit + 'customWeightcb'" v-model="editUnit.customWeight"
                          type="checkbox" class="custom-control-input">
                        <label :for="editUnit.unit + 'customWeightcb'" class="custom-control-label">1 {{editUnit.title}}
                          sistemde ortalama <strong>
                            {{editOrj.units[editUnitIndex].kgRatio}} {{edit.kgTitle}}</strong> içerecek şekilde tanımlı.
                          Size özel değiştirmek isterseniz işaretleyin.</label>
                        <!-- <label :for="editUnit.unit + 'customWeightcb'" class="custom-control-label" v-else>
                          {{editUnit.title}} miktarını size özel değiştirmek isterseniz işaretleyin.
                        </label> -->
                      </div>
                      <div class="font-size-sm text-muted" v-else>
                        <p v-if="(editUnit.id) && (editUnit.kgRatio != 1 && editUnit.kgRatio != 0)">
                          1 {{editUnit.title}} ortalama <strong>{{editOrj.units[editUnitIndex].kgRatio}}
                            {{edit.kgTitle}}</strong> içerecek şekilde tanımlıdır.</span>
                        </p>
                      </div>

                      <div class="mb-3"
                        v-if="editUnit.customWeight && canEdit(editUnit,'weight', true) && (editUnit.unit != 'kg')">
                        <label for="">1 {{editUnit.title}} <strong>sizde</strong> ortalama kaç {{edit.kgTitle}}
                          ?</label>
                        <input v-model="editUnit.kgRatio" type="number" class="form-control price-control">
                      </div>

                      <div v-if=" (editUnit.id) && (editUnit.unit != 'kg') && (canEdit(editUnit,'price'))"
                        class="custom-control custom-checkbox mb-1">
                        <input required :id="editUnit.unit + 'salemanualcb'" v-model="editUnit.customPrice"
                          type="checkbox" class="custom-control-input">
                        <label :for="editUnit.unit + 'salemanualcb'" class="custom-control-label">{{editUnit.title}}
                          fiyatı <strong>{{editOrj.units[editUnitIndex].kgRatio}} x {{edit.kgTitle}} fiyatı</strong>
                          olacak şekilde otomatik hesaplanır. <strong>Ayrı fiyat vermek</strong> için
                          işaretleyin.</label>
                      </div>



                      <div class="form-group" v-if="canEdit(editUnit,'price', true)">
                        <div class="d-block"><strong style="text-transform: uppercase;">{{editUnit.title}}</strong>
                          satış fiyatınız</div>
                        <input required v-model="editUnit.price" type="number" class="form-control price-control"
                          placeholder="tezgah satış fiyatınız">
                      </div>





                    </div>
                  </div>

                </div>


                <div class="d-flex justify-content-between">
                  <button v-on:click="saveDialog(edit, true)" class="btn btn-sm btn-primary">Kaydet</button>

                  <button v-if="edit && hasPrice(editOrj)" v-on:click="toogleEnabled(edit)"
                    :class="{'btn-warning': editOrj.enabled, 'btn-success': !editOrj.enabled}"
                    class="btn btn-sm">
                    <span v-if="editOrj.enabled">Satıştan Kaldır</span>
                    <span v-else>Satışa Al</span>
                  </button>
                  <a v-if="edit" class="btn btn-sm btn-primary" target="_blank" :href="'/' + edit.slug">Ürünü Gör</a>
                </div>

              </div>

            </div>

          </div>
        </div>
      </div>

    </div>


    <% include ./_partial/footer %>
      <% include ./_partial/scripts %>


        <script>

          $(document).ready(function () {
            $('#price-edit').maskMoney();
          })

          window.priceApp = new Vue({
            el: '#priceapp',

            mounted: function () {
              var self = this;

              App.Backend.get('category/list').then(function (results) {
                this.categories = results.data;
                this.filters = [];
                this.filters.push({
                  id: -1,
                  name: 'Hiç Fiyat Vermediklerim',
                  type: 'noprice'
                });
                this.filters.push({
                  id: -2,
                  name: 'Satışını Durdurduklarım',
                  type: 'stopped'
                });
                this.filters.push({
                  id: -3,
                  name: 'Kampanyada Olanlar',
                  type: 'campaign'
                });
                this.categories.forEach(function (c) {
                  this.filters.push({
                    id: c.id,
                    name: c.name,
                    type: 'category'
                  })
                }.bind(this))
              }.bind(this)).catch(App.HandleError.bind(App))

              App.Backend.get('product/<%=butcher.slug%>/prePrices').then(function (result) {
                self.list = result.data;
                var urlParams = new URLSearchParams(window.location.search);

                if (urlParams.has('productid')) {
                  let index = 0, pid = parseInt(urlParams.get('productid'));
                  let p = self.list.find(function (item) {
                    if (item.id == pid) {
                      return item;
                    } else index++
                  })
                  self.canGo = 1;
                  self.openDialog(p, index)
                }
              }).catch(App.HandleError.bind(App))


            },

            data: function () {
              return {
                errors: [],
                list: [],
                edit: null,
                editOrj: null,
                editUnitIndex: 0,
                editUnitVal: null,
                //editIndex: -1,
                completedPerc: 0,
                canGo: 1,
                lastCat: 0,
                renderComponent: true,
                categories: [],
                filters: [],
                filter: null,
                searchString:''
              }
            },

            computed: {


              editUnit: function () {
                if (!this.edit) return null;
                return this.editUnitVal || (this.editUnitVal = this.edit.units[0]);
              },



              completed: function () {
                var self = this;
                let result = this.list.filter(function (p) {
                  return self.hasPrice(p) && p.enabled
                }).length;
                this.completedPerc = Math.floor(this.list.length > 0 ? (result / this.list.length) * 100 : 0)
                return result;
              }
            },

            methods: {


              filteredList() {
                var result = this.list;
                var f1 = function(item) {
                  if (!this.searchString) return true;
                  var parts = this.searchString.split(' ');
                  var result = true;
                  for (var i = 0; i < parts.length; i++) {
                    let p = parts[i].trim().toLocaleUpperCase();
                    if (p) {
                      result = result && (item.name.toLocaleUpperCase().indexOf(p) != -1);
                      if (!result) return false;
                    }
                  }
                  return result;
                }
                var filterFuncs = {
                  'stopped': function (item) {
                    return !item.enabled && this.hasPrice(item) && f1.apply(this, [item])
                  },
                  'noprice': function (item) {
                    return !this.hasPrice(item) && f1.apply(this, [item])
                  },
                  'category': function (item) {
                    return item.category.id == this.filter.id && f1.apply(this, [item])
                  },
                  'campaign': function (item) {
                    return this.hasCampaign(item) && f1.apply(this, [item])
                  },
                }

                var f = !this.filter ? f1: filterFuncs[this.filter.type];
                return this.list.filter(f.bind(this));
                
              },



              checkCampaignForm: function (e) {
                this.errors = [];

                e.preventDefault();
                var self = this;
                App.Backend.post('product/<%=butcher.slug%>/campaign', {
                  id: this.edit.id,
                  discountType: this.edit.discountType,
                  priceDiscount: this.edit.priceDiscount
                }, null, true).then(function (result) {
                  self.updateItem(self.edit, result);
                  $('#campaignmodal').modal('hide');
                }).catch(function (err) {
                  App.HandleError(err)
                })
              },

              openCampaign(p, index) {
                this.editOrj = p;
                this.edit = JSON.parse(JSON.stringify(p));
                
                this.editUnitVal = null;
                this.edit.discountType = 'discountAsPercent';
                this.edit.priceDiscount = this.edit.priceDiscount || 4;
                $('#campaignmodal').modal('show');
              },

              hasCampaign(p) {
                if (this.hasPrice(p) && p.enabled) {
                  return p.discountType != 'none'
                } else return false;
              },

              canEdit(unit, prop, checkCustom) {

                if (prop == 'price' && unit.id == 0) return true;
                if (unit.butcherUnitEdit == 'none') return false;
                var mustMeet = unit.butcherUnitEdit == prop | unit.butcherUnitEdit == "all";
                if (checkCustom && mustMeet) {
                  return ((prop == "price" && unit.customPrice) || (prop == "weight" && unit.customWeight));
                } else return mustMeet

              },

              forceRerender() {
                this.renderComponent = false;

                this.$nextTick(() => {
                  this.renderComponent = true;
                });
              },

              priceView: function (units) {
                var best = units.find(function (u) {
                  if (u.unit == 'kg' && u.enabled) return u;
                });
                if (best) return best;
                best = units.find(function (u) {
                  if (u.enabled) return u;
                });
                if (!best) {
                  return {
                    title: 'Fiyat Verin',
                    price: 0
                  }
                } else return best;
              },

              hasPrice: function (item, forceEnabled) {
                var res = false;
                for (var i = 0; i < item.units.length; i++) {
                  if (item.units[i].price > 0) {
                    if (forceEnabled) return item.units[i].enabled;
                    return true;
                  }
                }
                return false;
              },

              findUnit: function (unit, enabled) {
                if (!this.edit || !this.editUnitVal) return false;
                var f = this.edit.units.find(function (u) {
                  return u.unit == unit
                });
                return f && (enabled ? (f.enabled ? f : null) : f);
              },

              updateItem: function (p, result) {
                var f = this.list.find(function (l) {
                  return l.id == p.id
                })

                Object.assign(f, result);
                this.forceRerender()
                $('#' + p.slug + 'row').fadeOut(500).fadeIn(500);
              },

              toogleEnabled: function (p) {
                p.enabled = !p.enabled;
                this.saveDialog(p, false);
              },

              saveDialog: function (p, doEnable) {

                var valid = true;

                let errors = [];

                p.units.forEach(function (u) {
                  if (u.customWeight && u.kgRatio <= 0) {
                    errors.push(u.title + ' için geçersiz ağırık')
                  }
                  if (u.id && u.customPrice && u.price <= 0) {
                    errors.push(u.title + ' için geçersiz bedel')
                  }
                  // if (u.price && u.price.indexOf(',') >=0) {
                  //   errors.push(u.title + ' virgül içeremez. Ondalık değeri nokta ile girin. Örneğin 1256.12 (binikiyüzelli TL 12 kuruş')
                  // }
                  // if (u.kgRatio && u.kgRatio.indexOf(',') >=0) {
                  //   errors.push(u.title + ' virgül içeremez. Ondalık değeri nokta ile girin. Örneğin 2.5 (iki nokta beş');
                  // }
                });

                if (errors.length > 0) {
                  alert(errors.join(String.fromCharCode(13)));
                  return
                }


                var self = this;

                App.Backend.post('product/<%=butcher.slug%>/prePrices', {
                  id: p.id,
                  units: p.units.map(function (u) {
                    return {
                      id: u.id,
                      unit: u.unit,
                      enabled: u.enabled,
                      customPrice: u.customPrice,
                      price: (u.price),
                      customWeight: u.customWeight,
                      kgRatio: u.kgRatio ? (u.kgRatio) : 0
                    }
                  }),
                  note: p.note,
                  enabled: (p.enabled || doEnable)
                }).then(function (result) {
                  self.updateItem(p, result)



                  $('#pricemodal').modal('hide');


                }).catch(function (err) {
                  App.HandleError(err)
                });

              },

              openDialog(p, index) {
                this.editOrj = p;
                this.edit = JSON.parse(JSON.stringify(p));
         
                this.editUnitVal = null;
                $('#pricemodal').modal('show');
              }
            }
          })
        </script>



</body>

</html>