{"version":3,"sources":["../src/dev/gulp.server.js"],"names":[],"mappings":"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","file":"gulp.server.js","sourcesContent":["var gulp = require('gulp');\nvar ts = require('gulp-typescript');\nvar sourcemaps = require('gulp-sourcemaps');\nvar del = require('del');\nvar buffer = require('gulp-buffer');\nvar uglify = require('gulp-uglify');\nminifyejs = require('gulp-minify-ejs')\n\n\nconst deployDir = \"\";\n\nlet tsc = (dest, debug) => {\n    var tsProject = ts.createProject('tsconfig.json', {\n        watch: false\n    });\n    var tsResult = tsProject.src();\n    if (debug) {\n        tsResult = tsResult.pipe(sourcemaps.init())\n    }\n    tsResult = tsResult.pipe(tsProject());\n    if (debug)\n        tsResult = tsResult.js.pipe(sourcemaps.write(\".\", { sourceRoot: \"../src/\" }));\n    //else tsResult = tsResult.pipe(buffer()).pipe(uglify())\n\n    tsResult = tsResult.pipe(gulp.dest(dest))\n    return tsResult;\n}\n\n\n\nfunction cleanBin() {\n    return del(\"bin\")\n}\n\nlet tsh = () => tsc(\"bin\", true)\n\ngulp.task('minify-html', function() {\n         return gulp.src('./src/views/**/*')\n         .pipe(minifyejs())\n         .pipe(gulp.dest(\"hhh/src/views\"));\n\n    return gulp.src('src/**/*.*')\n      \n      //.pipe(rename({suffix:\".min\"}))\n      .pipe(gulp.dest('./distxxx'))\n  })\n\ngulp.task('server.dev', () => {\n    let tsh = () => tsc(\"bin\", true)\n    return gulp.series(cleanBin, tsh)(function () {\n        console.log(\"SERVER:watching files\")\n        gulp.watch('./src/**/*.ts', tsh);\n    });\n})\n\ngulp.task('server.tsc', tsh);\n\nfunction deployClean() {\n    return del([deployDir + \"bin\"])\n}\n\n// function deployViews() {\n//     return gulp.src('./src/views/**/*')\n//         .pipe(gulp.dest(deployDir + \"src/views\"));\n// }\n\nfunction deployBin() {\n    return tsc(deployDir + \"bin\", false);\n}\n\n// function deployRemaning() {\n//     return gulp.src(['./package.json'])\n//         .pipe(gulp.dest(\"deploy\"));\n// }\n\n\n\ngulp.task('server.deploy', gulp.series(deployClean, gulp.parallel(deployBin)))"],"sourceRoot":"../../src/"}