{"version":3,"sources":["../src/dev/gulp.client.js"],"names":[],"mappings":"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","file":"gulp.client.js","sourcesContent":["var gulp = require('gulp');\nvar ts = require('gulp-typescript');\nvar fs = require('fs');\nvar cssmin = require('gulp-cssmin');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');\nvar sass = require('gulp-sass');\nvar sass = require('gulp-sass');\nvar cleanCSS = require('gulp-clean-css');\nvar merge = require('merge-stream');\nvar browserify = require('browserify');\nvar removeCode = require('gulp-remove-code');\nvar tap = require('gulp-tap');\nvar log = require('gulplog');\nvar buffer = require('gulp-buffer');\nvar sourcemaps = require('gulp-sourcemaps');\nvar rename = require(\"gulp-rename\");\nvar del = require('del');\nbabel = require('gulp-babel');\nbrowserSync = require('browser-sync').create();\nreload = browserSync.reload;\nautoprefixer = require('gulp-autoprefixer');\nvar AWS = require(\"aws-sdk\");\nvar awspublish = require(\"gulp-awspublish\");\n \n\nvar baseDist = 'public';\n\nvar webRoot = exports.WEBROOT = __dirname + '/';\n\nvar path = {\n    src: 'www',\n    dist: baseDist,\n    dist_js: `${baseDist}/js`,\n    dist_css: `${baseDist}/css`,\n    src_pug: 'www/templates',\n    src_scss: 'www/css',\n    src_js: 'www/js',\n    src_js_vendor: 'www/vendor/js',\n    src_css_vendor: 'www/vendor/css',\n    src_img: 'www/img',\n    src_resource: 'www/downloads',\n    src_ts: 'www/src',\n    src_font: 'www/fonts',\n    src_topublic: 'www/topublic'\n}\n\nlet config = {\n    debug: true\n}\n\n\ngulp.task('sass:expanded', () => {\n    const options = {\n        outputStyle: 'expanded',\n        precision: 10 // rounding of css color values, etc..\n    };\n    return gulp.src(path.src_scss + '/theme.scss')\n        .pipe(sass(options).on('error', sass.logError))\n        .pipe(autoprefixer({\n            cascade: false\n        }))\n        .pipe(gulp.dest(path.dist_css))\n        .pipe(browserSync.stream()); // Inject css into browser\n});\n\n// Minified\ngulp.task('sass:minified', () => {\n    const options = {\n        outputStyle: 'compressed',\n        precision: 10 // rounding of css color values, etc..\n    };\n    return gulp.src(path.src_scss + '/theme.scss')\n        .pipe(sourcemaps.init())\n        .pipe(sass(options).on('error', sass.logError))\n        .pipe(autoprefixer({\n            cascade: false\n        }))\n        .pipe(rename({ suffix: '.min' }))\n        .pipe(sourcemaps.write('.'))\n        .pipe(gulp.dest(path.dist_css))\n        .pipe(browserSync.stream()); // Inject css into browser\n});\n\n\n\n// Concatinate various vendor css files\n\ngulp.task('concat:css', () => {\n    return gulp.src([\n        path.src_css_vendor + '/*.css',\n        '!' + path.src_css_vendor + '/prism.min.css',\n    ])\n        .pipe(concat('vendor.min.css'))\n        .pipe(gulp.dest(path.dist_css))\n        .pipe(browserSync.stream()); // Injects css into browser\n});\n\n\n// Concatinate various vendor js files\n\ngulp.task('concat:js', () => {\n    return gulp.src([\n        path.src_js_vendor + '/jquery.min.js',\n        path.src_js_vendor + '/popper.min.js',\n        path.src_js_vendor + '/lightgallery.min.js',\n        path.src_js_vendor + '/*.js'\n    ])\n        .pipe(concat('vendor.min.js'))\n        .pipe(gulp.dest(path.dist_js))\n        .on('end', () => {\n            //reload(); // One time browser reload at end of concatination\n        });\n});\n\n\n// Move some vendor css files to dist/css folder\n\ngulp.task('move:css', () => {\n    return gulp.src([\n        path.src_css_vendor + '/prism.min.css'\n    ])\n        .pipe(gulp.dest(path.dist_css));\n});\n\n\n// Move some vendor js files to dist/js folder\n\ngulp.task('move:js', () => {\n    return Promise.resolve();\n    // return gulp.src([\n    //     path.src_js_vendor + '/card.min.js',\n    //     path.src_js_vendor + '/prism.min.js'\n    // ])\n    //     .pipe(gulp.dest(path.dist_js));\n});\n\n\n// Uglify (minify) + polyfill (Babel) theme core scripts.js file\n\ngulp.task('uglify:js', () => {\n    let result = gulp.src(path.src_js + '/**/*.js')\n        .pipe(concat('site.min.js'))\n        .pipe(babel({\n            presets: ['@babel/env']\n        }));\n    result = config.debug ? result : result.pipe(uglify())\n\n    return result.pipe(gulp.dest(path.dist_js))\n        .on('end', () => {\n            //reload(); // One time browser reload at end of uglification (minification)\n        });\n});\n\n\n// Clean certain files/folders from dist directory. Runs before compilation of new files. See 'default' task at the most bottom of this file\n\ngulp.task('clean', () => {\n    return del([\n        path.dist_css,\n        path.dist + '/img',\n        path.dist_js,\n        path.dist + '/components',\n        path.dist + '/docs',\n        path.dist + '/fonts'\n    ], {\n        force: true\n    });\n});\n\n\n// Watcher\n\ngulp.task('watch', () => {\n    global.watch = true; // Let the pug task know that we are running in \"watch\" mode\n    gulp.watch(path.src_css_vendor + '/*.css', gulp.series('concat:css'));\n    gulp.watch(path.src_scss + '/**/*.scss', gulp.series('sass:minified', 'sass:expanded'));\n    gulp.watch(path.src_js_vendor + '/*.js', gulp.series('concat:js'));\n    gulp.watch(path.src_js + '/*.js', gulp.series('uglify:js'));\n\n    gulp.watch(path.src_ts + \"/**/*.ts*\", gulp.parallel('compile:tsc:app', 'compile:tsc:admin'));\n    gulp.watch(path.src_img + '/**/*', gulp.series('copy:images'));\n    gulp.watch(path.src_font + '/**/*', gulp.series('copy:fonts'));\n    gulp.watch(path.src_resource + \"/**/*\", gulp.series('copy:resources'));\n});\n\n\ngulp.task(\"compile:tsc:admin\", () => {\n    let admin = () => tsc(path.src_ts + \"/**/admin.run.ts\", `${path.dist_js}`, 'admin');\n    return admin()\n})\n\ngulp.task(\"compile:tsc:app\", () => {\n    let app = () => tsc(path.src_ts + \"/**/app.run.ts\", `${path.dist_js}`, 'app');\n    return app()\n})\n\ngulp.task(\"copy:images\", () => {\n    return gulp.src([path.src_img + '/**/*'])\n        .pipe(gulp.dest(`${path.dist}/img`))\n})\n\ngulp.task(\"copy:topublic\", () => {\n    return gulp.src([path.src_topublic + '/**/*'])\n        .pipe(gulp.dest(`${path.dist}`))\n})\n\ngulp.task(\"copy:fonts\", () => {\n    return gulp.src([path.src_font + '/**/*'])\n        .pipe(gulp.dest(`${path.dist}/fonts`))\n})\n\ngulp.task(\"copy:resources\", () => {\n    return gulp.src([path.src_resource + \"/**/*\"])\n        .pipe(gulp.dest(`${path.dist}/downloads`))\n})\n\n\n\nlet tsc = (file, dest, desFile) => {\n    let pipe = gulp.src(file, { read: false })\n        .pipe(tap(function (file) {\n            //log.info('bundling ' + file.path);\n            let bundler = new browserify(file.path, { debug: config.debug });\n\n            bundler.plugin('tsify', {\n                target: 'ES5',\n                module: 'commonjs',\n                project: 'tsconfig.client.json',\n                typescript: require('typescript')\n            });\n            file.contents = bundler.bundle();\n\n        }))\n        .pipe(rename(function (path) {\n            path.basename = desFile;\n            path.extname = \".js\";\n        }));\n\n    if (config.debug) {\n        pipe = pipe.pipe(buffer()).pipe(sourcemaps.init({ loadMaps: true })).pipe(sourcemaps.write('./'))\n    } else pipe = pipe.pipe(buffer()).pipe(uglify())\n    return pipe.pipe(gulp.dest(dest));\n};\n\ngulp.task(\"set:env\", () => {\n    config.debug = false;\n    return Promise.resolve();\n})\n\n\ngulp.task('aws.deploy', () => {\n    AWS.config.loadFromPath('./awsconfig.json');\n\n\n    var publisher = awspublish.create(\n        {\n          params: {\n            Bucket: \"static.kasaptanal.com/resource\"\n          }\n        },\n        {\n          cacheFileName: \"./cacheaws\"\n        }\n      );\n    \n\n      var headers = {\n\n      };\n    \n      return (\n        gulp\n          .src(\"./public/**/*.*\")\n          // gzip, Set Content-Encoding headers and add .gz extension\n          .pipe(awspublish.gzip())\n    \n          // publisher will add Content-Length, Content-Type and headers specified above\n          // If not specified it will set x-amz-acl to public-read by default\n          .pipe(publisher.publish(headers))\n    \n          // create a cache file to speed up consecutive uploads\n          .pipe(publisher.cache())\n\n    \n          // print upload updates to console\n          .pipe(awspublish.reporter())\n      );\n})\n\n\n\n\nlet tasks = ['copy:topublic', 'compile:tsc:admin', 'compile:tsc:app', 'copy:images', 'copy:fonts', 'copy:resources', 'concat:js', 'move:js', 'concat:css', 'uglify:js', 'sass:minified', 'sass:expanded'];\n\ngulp.task(\n    'client.deploy',\n    gulp.series('set:env', 'clean', gulp.parallel(tasks))\n);\n\n\n\ngulp.task(\n    'client.dev',\n    gulp.series('clean', gulp.parallel(tasks),\n        'watch')\n);\n"],"sourceRoot":"../../src/"}