{"version":3,"sources":["../src/lib/logistic/butcher.ts"],"names":[],"mappings":"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","file":"butcher.js","sourcesContent":["import { LogisticProvider, LogisticFactory, PriceSlice, FromTo, CustomerPriceConfig, OfferResponse } from \"./core\";\nimport Dispatcher from \"../../db/models/dispatcher\";\nimport Helper from \"../helper\";\n\nexport class ButcherManualLogistics extends LogisticProvider {\n    static key = \"butcher\";\n    private dispatcher: Dispatcher;\n\n    static register() {\n        LogisticFactory.register(ButcherManualLogistics.key, ButcherManualLogistics)\n    }\n\n    async priceSlice(distance : FromTo, slice: number = 50.00): Promise<PriceSlice[]> {\n        \n        let arr: PriceSlice[] = []\n\n        if (this.dispatcher) {\n            if (this.dispatcher.fee > 0.0) {\n                arr.push({\n                    start: this.dispatcher.min,\n                    end: this.dispatcher.totalForFree,\n                    cost: this.dispatcher.fee\n                })\n            }\n            if (this.dispatcher.totalForFree > 0.00) {\n                arr.push({\n                    start: this.dispatcher.totalForFree,\n                    cost: 0.00\n                })\n            }\n            if(arr.length == 0) {\n                arr.push({\n                    start: this.dispatcher.min,\n                    end: this.dispatcher.totalForFree,\n                    cost: this.dispatcher.fee\n                })\n            }\n\n\n        }\n\n        return arr;\n    }\n\n    constructor(config: any, options: any) {\n       super(config, options);\n       this.dispatcher = options.dispatcher;\n    }\n\n}\n\n\n\nexport class ButcherAutoLogistics extends LogisticProvider {\n    static key = \"butcher/auto\";\n    private dispatcher: Dispatcher;\n    \n    static register() {\n        LogisticFactory.register(ButcherAutoLogistics.key, ButcherAutoLogistics)\n    }\n\n    async priceSlice(ft : FromTo, slice: number = 100.00): Promise<PriceSlice[]> {\n        \n        let distance = Helper.distance(ft.start, ft.finish);\n\n        let config: CustomerPriceConfig = {\n            distance: distance,\n            orderTotal: 0,\n            contribitionRatio: 0.04,\n            freeShipPerKM: 25,\n            pricePerKM: 1.5,\n            priceStartsAt: 5,\n            maxDistance: 20,\n            minOrder: 100,\n        }\n\n        let prices = [], result: PriceSlice []=[];\n\n        for(let i = 0; i < 10; i++)\n            prices.push(Helper.asCurrency(i*slice));\n            \n        for(let i = 0; i < prices.length; i++) {\n                config.orderTotal = prices[i];\n                let cost = (await this.calculateFeeForCustomer(config));\n                if (cost) {\n                    let item = {\n                        start: prices[i],\n                        end: prices[i] + slice,\n                        cost: cost.totalFee\n                    }\n                    result.push(item)\n                    if (cost.totalFee <= 0.00) {\n                        item.end = 0.00;\n                        break\n                    };\n                }\n        }\n\n        return result;\n    }\n\n    constructor(config: any, options: any) {\n        super(config, options);\n        this.dispatcher = options.dispatcher;\n     }\n\n}"],"sourceRoot":"../../../src/"}