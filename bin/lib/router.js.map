{"version":3,"sources":["../src/lib/router.ts"],"names":[],"mappings":"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","file":"router.js","sourcesContent":["import * as http from './http';\nimport * as express from \"express\";\nimport { auth } from '../middleware/auth';\nimport { Auth } from './common';\nimport 'reflect-metadata';\nimport { request } from 'https';\nimport * as stream from 'stream';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport sequelize = require('sequelize');\nimport config from \"../config\";\nimport * as path from \"path\";\nimport Area from '../db/models/area';\nimport Category from '../db/models/category';\nimport Product from '../db/models/product';\nimport { where } from 'sequelize';\nlet ellipsis = require('text-ellipsis');\nimport { PreferredAddress } from '../db/models/user';\nvar MarkdownIt = require('markdown-it')\n\nimport * as fs from \"fs\"\n\nexport enum ResponseStatus {\n    success = 0,\n    warning = 1,\n    error = 2\n}\n\nexport interface ApiResponse {\n    $status: ResponseStatus,\n    result?: any;\n}\n\nexport interface ICredentialIdentifier {\n    _id: string;\n    roles: Array<string>;\n}\n\nexport interface IRequestParams {\n    req: http.AppRequest;\n    res: express.Response;\n    next: Function;\n}\n\nexport default class BaseRouter {\n    protected req: http.AppRequest;\n    protected res: express.Response;\n    protected next: Function;\n    private _markdown = null;\n\n    protected constructorParams: any;\n\n    get Markdown() {\n        this._markdown = this._markdown || new MarkdownIt();\n        return this._markdown;\n    }\n\n    get url() {\n        let proto = this.req.header(\"x-forwarded-proto\") || this.req.protocol;\n        let host = config.nodeenv == \"development\" ? this.req.get('Host'): 'www.kasaptanal.com';\n        return proto + '://' + host;              \n    }\n\n    forceAuthenticate(req, res, next) {\n        return auth.force(req, res, next);\n    }\n\n    get publicDir() {\n        return (config.publicDir == '') ? \"public/\" : config.publicDir\n    }\n\n    \n\n    protected static BindRequest(method: string | Function, methodParams?: any) {\n\n        var self = this;\n\n        return (req, res, next) => BaseRouter.CreateRouterInstance(req, res, next, self, method, methodParams);\n    }\n\n    protected static AuthenticateRequest() {\n        var self = this;\n        return (req, res, next) => BaseRouter.CreateRouterInstance(req, res, next, self, 'forceAuthenticate');\n    }\n\n\n    protected static CreateRouterInstance(req: http.AppRequest, res: express.Response, next: Function, constructor: typeof BaseRouter, method: string | Function, methodParams?: any): BaseRouter {\n        var instance = new constructor({\n            req: req,\n            res: res,\n            next: next\n        });\n\n        let handler = typeof (method) == \"string\" ? instance[method] : instance[method.name];\n        var anonymous = Auth.GetAnonymous(handler);\n\n        if (!anonymous && !req.user)\n            return next(new http.PermissionError());\n\n\n        var promise = handler.apply(instance, methodParams);\n\n        if (promise && (typeof promise['catch'] == 'function')) {\n            promise.catch((err) => {\n                next(err);\n            });\n        }\n\n        return instance;\n    }\n\n    validateOwnership(ownerOfResource: string) {\n        return new Promise((resolve, reject) => {\n            var user = this.req.user;\n            var id = user.id.toString() || user.id;\n            var ownerId = ownerOfResource.toString() || ownerOfResource;\n            if (ownerId == id)\n                resolve();\n            else if (user.roles.indexOf('admin') >= 0)\n                resolve();\n            else reject(new http.PermissionError());\n        });\n    }\n\n    sendFile(file: string, fromRoot: boolean = true) {\n        return new Promise((resolve, reject) => {\n            let fpath = fromRoot ? path.resolve(path.join(config.projectDir, file)) : file;\n\n            //var stats = fs.statSync(fpath);\n            //var mtime = stats.mtime;\n\n            //this.res.append(\"Last-Modified\", mtime.toUTCString())\n            //this.res.append(\"Cache-Control\", \"public\")\n            //this.res.append(\"Expires\", moment.utc().toString())\n\n            // this.res.append('Last-Modified', (new Date(lastModifiedStringDate)).toUTCString());\n\n            this.res.sendFile(fpath, (err) => { err ? reject(err) : resolve(); });\n        })\n    }\n\n    getPreferredAddress() {\n\n    }\n\n\n    constructor(reqParams?: IRequestParams) {\n        if (reqParams) {\n            this.req = reqParams.req;\n            this.res = reqParams.res;\n            this.next = reqParams.next;\n        }\n        this.constructorParams = reqParams;\n    }\n}\n\nexport class ApiRouter extends BaseRouter {\n\n}\n\ninterface CategoryMenuData {\n    categories: Category[];\n    products: { key: string, value: Product }\n}\n\nexport class ViewRouter extends BaseRouter {\n\n    selectedArea: any;\n    categoryData: CategoryMenuData;\n\n    constructor(reqParams?: IRequestParams) {\n        super(reqParams);\n        if (this.req && this.req[\"session\"] && this.req[\"session\"].areal1 != null) {\n            this.selectedArea = this.req[\"session\"].areal1\n        }\n    }\n\n    async createCategoryMenu() {\n        let categories = await Category.findAll({\n            where: {\n                type: ['reyon', 'amac']\n            },\n            order: [\"displayOrder\"]\n        });\n        let products = await Product.findAll({\n            where: {\n                \"ProductCategory.categoryId\": categories.map(p => p.id)\n            },\n            limit: 5\n        }\n        )\n        let prods = {};\n\n        return {\n            categories: categories,\n            products: null\n        }\n    }\n\n    viewData(data) {\n        return {\n            ...{\n                res: this.res,\n                req: this.req,\n                config: config,\n                controller: this,\n            },\n            ...data\n        }\n    }\n\n\n\n\n    protected renderView(view: string, pageKey: string = null, vdata = {}) {\n        pageKey = pageKey || view;\n        let dbViewData = this.req.__webpages[pageKey] || {};        \n        let result = { ...dbViewData, ...vdata };\n        this.res.render(view, this.viewData(result))\n    }\n\n\n    @Auth.Anonymous()\n    protected sendView(view: string, vdata = {}) {\n        this.renderView(view, view, vdata)\n    }\n\n\n    protected static BindToView(view: string, viewData = {}) {\n        var self = this;\n        return (req, res, next) => BaseRouter.CreateRouterInstance(req, res, next, self, \"sendView\", [view, viewData]);\n    }\n\n\n}\n\n\nexport interface crudRouteOptions {\n    create?: boolean,\n    delete?: boolean,\n    update?: boolean,\n    retrieve?: boolean,\n    query?: boolean\n}\n\nexport enum CrudOperation {\n    read, create, update, delete\n}\n\nexport interface RetrieveOptions {\n    lean?: boolean,\n    fields?: string;\n    toClient?: boolean;\n    disableOwnership?: boolean\n}\n\n"],"sourceRoot":"../../src/"}