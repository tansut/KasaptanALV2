{"version":3,"sources":["../src/lib/cache.ts"],"names":[],"mappings":"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","file":"cache.js","sourcesContent":["import * as Cache from \"node-cache\";\nimport Category from \"../db/models/category\";\nimport Product from \"../db/models/product\";\nimport ProductCategory from \"../db/models/productcategory\";\nimport ProductManager from \"./productManager\";\nimport Butcher from \"../db/models/butcher\";\nimport Area from \"../db/models/area\";\nimport * as express from 'express';\nimport { AppRequest } from \"./http\";\nimport * as path from 'path';\nimport * as _ from \"lodash\";\nimport config from \"../config\";\nimport Helper from \"./helper\";\nimport { RequestHelper } from \"./RequestHelper\";\nimport Resource from \"../db/models/resource\";\nimport Content from \"../db/models/content\";\nimport WebPage from \"../db/models/webpage\";\nimport Redirect from \"../db/models/redirect\";\nimport PriceCategory from \"../db/models/pricecategory\";\nimport SubCategory from \"../db/models/subcategory\";\n\n\nlet cache: Cache;\n\nexport interface ResourceCacheItem {\n    ref1: number;\n    contentUrl: string;\n    thumbnailUrl: string;\n    folder: string;\n    tag1: string;\n}\n\nexport interface ProductCacheItem {\n    id: number;\n    slug: string;\n    tag2: string;\n    name: string;\n    badge: string;\n}\n\nexport interface ButcherCacheItem {\n    id: number;\n    //slug: string;\n    name: string;\n}\n\nexport interface WebPageCacheItem {\n    pageTitle: string;\n    pageDescription: string;\n}\n\nexport interface RedirectCacheItem {\n    toUrl: string;\n    permanent: boolean;\n}\n\nexport interface CategoryProductItem {\n    slug: string;\n}\n\nexport class CacheManager {\n\n    static dataCache = new Cache();\n\n    static clear() {\n        this.dataCache.flushAll();\n    }\n\n    static use(app: express.Application) {\n        app.use((req: AppRequest, res, next) => {          \n            CacheManager.generateDataCache().then(p => {\n                res.locals.__categories = p.categories;\n                req.__categories = p.categories;\n                req.__pricecategories = p.pricecategories;\n                req.__resources = p.resources;\n                req.__products = p.products;\n                req.__recentBlogs = p.recentBlogs;\n                req.__categoryProducts = p.categoryProducts;\n                req.__butchers = p.butchers;\n                req.__webpages = p.webPages;\n                req.__redirects = p.redirects;\n                res.locals._ = _;\n                res.locals.__cities = p.cities;\n                res.locals.__butcherCities = p.butcherCities\n                res.locals.__req = req\n                res.locals.__viewRoot = path.join(__dirname, '../src/views')\n                res.locals.__config = config;\n                res.locals.__helper = Helper;\n                next();\n            }).catch(next)\n        })\n    }\n\n    static async fillButcherCities(cities) {\n        let result = this.dataCache.get(\"butcher-cities\");\n        if (!result) {\n            let citiesOfButchers: any = await Butcher.aggregate('areaLevel1Id', 'DISTINCT', { plain: false });\n            result = []\n            for (let i = 0; i < citiesOfButchers.length; i++) {\n                (<any>result).push(cities[citiesOfButchers[i]['DISTINCT']])\n            }\n            this.dataCache.set(\"butcher-cities\", result);\n\n        }\n        return result;\n    }\n\n    static async fillRecentBlogs() {\n        let result = this.dataCache.get(\"recent-blogs\");\n        if (!result) {\n            result = await Content.findAll({\n                raw: true,\n                attributes: [\"title\", \"category\", \"description\", \"slug\", \"categorySlug\"],\n                order: [[\"DisplayOrder\", \"DESC\"], [\"UpdatedOn\", \"DESC\"]],\n                limit: 10\n            });\n            this.dataCache.set(\"recent-blogs\", result);\n        }\n        return result\n    }\n\n    static async fillRedirects() {        \n        let result:  { [key: string]: RedirectCacheItem }  = this.dataCache.get(\"redirects\");\n        if (!result) {\n            result = {}\n            let list = await Redirect.findAll({\n                where: {\n                    enabled: true\n                },\n                raw: true\n            });\n            list.forEach(item=>{\n                result[item.fromUrl] = {\n                    toUrl: item.toUrl,\n                    permanent: item.permanent\n                }\n            })\n            this.dataCache.set(\"redirects\", result);\n        }\n        return result\n    }\n\n\n    static async fillWebPages() {        \n        let result:  { [key: string]: WebPageCacheItem }  = this.dataCache.get(\"web-pages\");\n        if (!result) {\n            result = {}\n            let list = await WebPage.findAll({\n                raw: true\n            });\n            list.forEach(item=>{\n                result[item.slug] = {\n                    pageTitle: item.pageTitle,\n                    pageDescription: item.pageDescription\n                }\n            })\n            this.dataCache.set(\"web-pages\", result);\n        }\n        return result\n    }\n\n    static async fillCities() {\n        let result = this.dataCache.get(\"cities\");\n        if (!result) {\n            result = {};\n            await Area.findAll({\n                where: {\n                    level: 1\n                },\n                raw: true\n            }).then(data => {\n                for (let i = 0; i < data.length; i++) {\n                    result[data[i].id] = data[i]\n                }\n                this.dataCache.set(\"cities\", result);\n            })\n        }\n        return result\n    }\n\n    static async fillCategories(): Promise<Category[]> {\n        let categories = <Category[]>this.dataCache.get(\"categories\")\n        if (!categories) {\n            categories = await Category.findAll({\n                raw: false,\n                include: [\n                    {\n                        model: SubCategory,    \n                                            \n                    } \n                ],\n                order: [[\"type\", 'desc'], [\"displayOrder\", 'desc']]\n            });\n            categories = JSON.parse(JSON.stringify(categories))\n            this.dataCache.set(\"categories\", categories);\n        } \n        return categories; \n    }\n\n    static async fillPriceCategories(cats: Category[]): Promise<PriceCategory[]> {\n        let categories = <PriceCategory[]>this.dataCache.get(\"pricecategories\")\n        if (!categories) {\n            categories = await PriceCategory.findAll({\n                raw: true,\n                order: [[\"displayOrder\", 'desc']]\n            });\n\n            categories.forEach(m=>{\n                m.category = cats.find(c=>c.id == m.categoryid)\n            })\n\n            this.dataCache.set(\"pricecategories\", categories);\n        }\n        return categories;\n    }\n\n    static async fillProductsByCategory(categories: Category[]) {\n        let cacheproducts: { [key: string]: CategoryProductItem[] } = this.dataCache.get(\"category-products\")\n        if (!cacheproducts) {\n            cacheproducts = {}\n            for (let i = 0; i < categories.length; i++) {\n                let prods = await ProductManager.getProductsOfCategories([categories[i].id])\n                cacheproducts[categories[i].slug] = prods.map(pr => <CategoryProductItem>{\n                    slug: pr.slug\n                })\n            }\n\n            this.dataCache.set(\"category-products\", cacheproducts);\n        }\n        return cacheproducts;\n    }\n\n    static async fillResources(): Promise<{ [key: string]: [ResourceCacheItem]; }> {\n        let resources = <any>this.dataCache.get(\"resources\")\n        if (!resources) {\n            let res = await Resource.findAll({\n                raw: true,\n                order: [[\"type\", 'desc'], [\"displayOrder\", \"DESC\"], [\"updatedOn\", \"DESC\"]]\n            })\n            let result: { [key: string]: ResourceCacheItem[]; } = {};\n            res.forEach((ri, i) => {\n                if (!result[ri.type])\n                    result[ri.type] = [];\n                if (!result[ri.type + ri.ref1])\n                    result[ri.type + ri.ref1] = [];\n                if (!result[ri.type + ri.contentUrl])\n                    result[ri.type + ri.contentUrl] = [];\n                let obj = {\n                    contentUrl: ri.contentUrl,\n                    ref1: ri.ref1,\n                    thumbnailUrl: ri.thumbnailUrl,\n                    folder: ri.folder,\n                    tag1: ri.tag1\n                }\n                //result[ri.type].push(obj)\n                result[ri.type + ri.ref1].push(obj)\n                result[ri.type + ri.contentUrl].push(obj)\n            })\n            resources = result;\n            this.dataCache.set(\"resources\", resources);\n        }\n        return resources;\n    }\n\n    static async fillProducts(): Promise<{ [key: string]: [ProductCacheItem]; }> {\n        let products = <any>this.dataCache.get(\"products\")\n        if (!products) {\n            let res = await Product.findAll({\n                attributes: ['slug', 'id', 'tag2', 'badge', 'name'],\n                raw: true,\n                order: [[\"displayOrder\", \"DESC\"]]\n            })\n            let result: { [key: string]: ProductCacheItem; } = {};\n            res.forEach((ri, i) => {\n                result[ri.slug] = {\n                    id: ri.id,\n                    slug: ri.slug,\n                    name: ri.name,\n                    tag2: ri.tag2,\n                    badge: ri.badge\n                }\n            })\n            products = result;\n            this.dataCache.set(\"products\", result);\n        }\n        return products;\n    }\n\n    static async fillButchers(): Promise<{ [key: string]: [ButcherCacheItem]; }> {\n        let butchers = <any>this.dataCache.get(\"butchers\")\n        if (!butchers) {\n            let res = await Butcher.findAll({\n                attributes: ['name', 'id', 'slug'],\n                raw: true,\n                order: [['updatedon', 'DESC']]\n            })\n            let result: { [key: string]: ButcherCacheItem; } = {};\n            res.forEach((ri, i) => {\n                result[ri.slug] = {\n                    id: ri.id,\n                    name: ri.name\n                }\n            })\n            butchers = result;\n            this.dataCache.set(\"butchers\", result);\n        }\n        return butchers;\n    }\n\n    static async generateDataCache() {\n        let categories = await this.fillCategories();\n        let pricecategories = await this.fillPriceCategories(categories);\n        let products = <any>await this.fillProducts();\n        let butchers = <any>await this.fillButchers();\n        let cities = <any>await this.fillCities();\n        let butcherCities = <any>await this.fillButcherCities(cities);\n        let resources = <any>await this.fillResources();\n        let recentBlogs = <any>await this.fillRecentBlogs();\n        let webPages = <any>await this.fillWebPages();\n        let redirects = <any>await this.fillRedirects();\n        let categoryProducts = <any>await this.fillProductsByCategory(categories);\n        return {\n            categories: categories,\n            pricecategories: pricecategories,\n            products: products,\n            cities: cities,\n            butcherCities: butcherCities,\n            resources: resources,\n            recentBlogs: recentBlogs,\n            categoryProducts: categoryProducts,\n            butchers: butchers,\n            webPages: webPages,\n            redirects: redirects\n        }\n    }\n\n    static init = () => {\n\n    }\n}\n\n"],"sourceRoot":"../../src/"}