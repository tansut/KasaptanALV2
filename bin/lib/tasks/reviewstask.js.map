{"version":3,"sources":["../src/lib/tasks/reviewstask.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAAsC;AACtC,iDAAyD;AAEzD,8CAAqD;AAErD,mDAA4C;AAC5C,yCAA0C;AAC1C,qDAA8C;AAI9C,MAAqB,YAAa,SAAQ,mBAAQ;IAE9C,IAAI,QAAQ;QACR,OAAO,eAAe,CAAA;IAC1B,CAAC;IAIK,GAAG;;YACL,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;YAC9C,IAAI,OAAO,GAAG,MAAM,gBAAM,CAAC,OAAO,CAAC;gBAC/B,KAAK,EAAE;oBACH,YAAY,EAAE;wBACV,CAAC,cAAE,CAAC,EAAE,CAAC,EAAE,IAAI;qBAChB;oBACD,IAAI,EAAE,OAAO;iBAChB;aACJ,CAAC,CAAA;YAGF,OAAO,CAAC,OAAO,CAAC,CAAM,CAAC,EAAC,EAAE;gBACtB,IAAI,QAAQ,GAAG,MAAM,iBAAS,CAAC,OAAO,CAClC;oBACI,KAAK,EAAE;wBACH,OAAO,EAAE,CAAC,CAAC,IAAI;wBACf,MAAM,EAAE,uBAAe,CAAC,OAAO;qBAClC;oBACD,OAAO,EAAE,CAAC;4BACN,KAAK,EAAE,iBAAO;yBACjB,CAAC;iBACL,CACJ,CAAC,GAAG,CAAC,CAAM,EAAE,EAAC,EAAE,gDAAC,OAAA,EAAE,CAAC,OAAO,CAAA,GAAA,CAAC,CAAA;gBAC7B,IAAI,QAAQ,CAAC,MAAM,EAAE;oBACjB,CAAC,CAAC,QAAQ,GAAG;wBACT,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;4BACvB,OAAO;gCACH,IAAI,EAAE,CAAC,CAAC,IAAI;gCACZ,IAAI,EAAE,CAAC,CAAC,IAAI;gCACZ,EAAE,EAAE,CAAC,CAAC,EAAE;6BACX,CAAA;wBACL,CAAC,CAAC;qBACL,CAAA;oBACD,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;iBAClB;YACL,CAAC,CAAA,CAAC,CAAA;YAEF,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;QAE/C,CAAC;KAAA;CACJ;AAjDD,+BAiDC","file":"reviewstask.js","sourcesContent":["import { BaseTask } from \"./basetask\";\nimport { Order, OrderItem } from \"../../db/models/order\";\nimport * as sq from 'sequelize';\nimport { OrderItemStatus } from \"../../models/order\";\nimport Butcher from \"../../db/models/butcher\";\nimport Review from \"../../db/models/review\";\nimport { Op, Sequelize } from \"sequelize\";\nimport Product from \"../../db/models/product\";\n\n\n\nexport default class ButcherStats extends BaseTask {\n\n    get interval() {\n        return \"0 0 */1 * * *\"\n    }\n\n\n\n    async run() {\n        console.log('running reviews job', Date.now())\n        let reviews = await Review.findAll({\n            where: {\n                settingsjson: {\n                    [Op.is]: null\n                },\n                type: 'order'\n            }\n        })\n\n\n        reviews.forEach(async r => {\n            let products = await OrderItem.findAll(\n                {\n                    where: {\n                        orderid: r.ref1,\n                        status: OrderItemStatus.success\n                    },\n                    include: [{\n                        model: Product\n                    }]\n                }\n            ).map(async oi => oi.product)\n            if (products.length) {\n                r.settings = {\n                    products: products.map(p => {\n                        return {\n                            name: p.name,\n                            slug: p.slug,\n                            id: p.id\n                        }\n                    })\n                }\n                await r.save();\n            }\n        })\n\n        console.log('done reviews job', Date.now())\n\n    }\n}"],"sourceRoot":"../../../src/"}