{"version":3,"sources":["../src/routes/butcherview.ts"],"names":[],"mappings":"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","file":"butcherview.js","sourcesContent":["import { ApiRouter, ViewRouter } from '../lib/router';\nimport * as express from \"express\";\nimport * as maps from \"@google/maps\"\nimport ButcherModel from '../db/models/butcher';\nimport { Auth } from '../lib/common';\nimport Helper from '../lib/helper';\nimport Resource from '../db/models/resource';\nimport ResourceRoute from './resource';\nimport * as path from \"path\"\nimport * as Jimp2 from 'jimp'\nconst Jimp = <Jimp2>require('jimp');\nimport * as fs from \"fs\"\nimport moment = require('moment');\nimport ProductManager from '../lib/productManager';\nimport Product from '../db/models/product';\nimport Butcher from '../db/models/butcher';\nimport Category from '../db/models/category';\nimport ButcherProduct from '../db/models/butcherproduct';\nimport Area from '../db/models/area';\nimport ProductCategory from '../db/models/productcategory';\nimport { pbkdf2 } from 'crypto';\nvar MarkdownIt = require('markdown-it') \nimport * as _ from \"lodash\";\nimport { ResourceCacheItem } from '../lib/cache';\nimport Dispatcher from '../db/models/dispatcher';\nimport config from '../config';\nimport {Op} from \"sequelize\";\nimport Review from '../db/models/review';\nimport * as sq from 'sequelize';\nimport SubCategory from '../db/models/subcategory';\n\n\n\nexport default class Route extends ViewRouter {\n    markdown = new MarkdownIt();\n    products: Product[];\n    vitrinProducts: Product[];\n    butcher: Butcher;\n    dispatchers: Dispatcher[];\n    reviews: Review[] = [];\n    category: Category;\n    categories: Category[];\n    _ = _;\n    subCategories: SubCategory[] = [];\n\n    filterProductsByCategory(filter, chunk: number = 0) {\n        let products = <Product []>ProductManager.filterProductsByCategory(this.products, filter, { productType: 'generic' }, { chunk: chunk })\n        let butcherProducts = this.butcher.products.filter(bp=> {\n            return  (products.find(p=>p.id == bp.productid) != null)  && !bp['__displayed']\n        });\n        butcherProducts.forEach(r=>r['__displayed'] = true);\n        return butcherProducts;\n    }\n\n\n    async loadReviews(butcher: ButcherModel) {\n        let res: Review[] = await Review.sequelize.query(`\n        SELECT r.* FROM Reviews r, Orders o  \n        WHERE r.type='order' and r.ref1=o.id and r.ref2=:bid\n        ORDER BY r.ID DESC\n         `\n        ,\n        {\n            replacements: { bid: butcher.id },\n            type: sq.QueryTypes.SELECT,\n            mapToModel: true,\n            raw: true\n        }\n        );\n        this.reviews = res;\n    }\n\n\n\n    @Auth.Anonymous()\n    async butcherRoute() {\n        if (!this.req.params.butcher) {\n            return this.next();\n        }\n        let butcher = this.butcher = await ButcherModel.findOne({\n            include: [{\n                model: ButcherProduct,\n                include: [Product],\n                // where: {\n                //     [Op.or]: [{\n                //         '$products.kgPrice$': {\n                //             [Op.gt]: 0.0\n                //         }\n                //     },\n\n                //     {\n                //         '$products.unit1price$': {\n                //             [Op.gt]: 0.0\n                //         }\n                //     },\n\n                //     {\n                //         '$products.unit2price$': {\n                //             [Op.gt]: 0.0\n                //         }\n                //     },\n                //     {\n                //         '$products.unit3price$': {\n                //             [Op.gt]: 0.0\n                //         }\n                //     }\n                //     ]                    \n                // }\n            },\n            {\n                model: Area,\n                all: true,\n                as: \"areaLevel1Id\"\n\n            }], where: { slug: this.req.params.butcher,\n            \n            \n            }\n        });\n        if (!butcher) {\n            return this.next();\n        } \n\n        if (!this.req.params.category) {\n            this.category = this.req.__categories[0]\n        } else \n        {\n            this.category = this.req.__categories.find(p=>p.slug == this.req.params.category);\n        }\n        if (!this.category) return this.next();\n\n        await this.loadReviews(butcher)\n\n        if (!butcher.location && butcher.gpPlace && butcher.gpPlace['geometry'] && butcher.gpPlace['geometry']['location'])\n        {\n            let latlong = butcher.gpPlace['geometry']['location']\n            butcher.location = {\n                type: 'Point',\n                coordinates: [parseFloat(latlong.lat), parseFloat(latlong.lng)]            \n            }\n            await butcher.save()\n        }\n\n        let images = await Resource.findAll({\n            where: {\n                type: [\"butcher-google-photos\", \"butcher-videos\"],\n                ref1: butcher.id\n         \n            },\n            order: [[\"displayOrder\", \"DESC\"], [\"updatedOn\", \"DESC\"]]\n        })\n\n        this.dispatchers = await Dispatcher.findAll({\n            where: {\n                butcherId: this.butcher.id,\n                enabled: true\n            },\n            order: [[\"toarealevel\", \"DESC\"], [\"fee\", \"ASC\"]],\n            include: [\n                {\n                    all: true\n                }\n            ]\n        })\n\n        for (let i = 0; i < this.dispatchers.length; i++) {\n            this.dispatchers[i].address = await this.dispatchers[i].toarea.getPreferredAddress()\n        }\n\n        this.categories = this.req.__categories;\n\n        butcher.products = butcher.products.filter(p => {\n            return p.enabled && (p.kgPrice > 0 || (p.unit1price > 0 && p.unit1enabled) || (p.unit2price > 0 && p.unit2enabled) || (p.unit3price > 0 && p.unit1enabled))\n        })\n\n\n        \n        butcher.products = _.sortBy(butcher.products, [\"displayOrder\", \"updatedOn\"]).reverse()\n\n        let productCategories = await ProductCategory.findAll({\n            include: [{\n                all: true\n            }]\n        });\n\n        this.products = butcher.products.map(p => {\n            p.product.categories = productCategories.filter(pc => pc.productid == p.productid)\n            return p.product\n        })\n\n        this.products = <Product []>ProductManager.filterProductsByCategory(this.products, {slug: this.category.slug}, { productType: 'generic' }, { chunk: 0 })\n        this.subCategories = ProductManager.generateSubcategories(this.category, this.products);\n \n\n        let pageTitle = butcher.pageTitle || `${butcher.name}` ;\n        let pageDescription = butcher.pageDescription || `${butcher.name}, ${butcher.address} ${butcher.areaLevel1.name}/${butcher.areaLevel2.name} adresinde hizmet vermekte olup ${(butcher.phone || '').trim().slice(0, -5) + \" ...\"} numaralı telefon ile ulaşabilirsiniz.`\n        let pageThumbnail = this.req.helper.imgUrl('butcher-google-photos', butcher.slug)\n        this.res.render('pages/butcher', this.viewData({ pageThumbnail: pageThumbnail, pageTitle: pageTitle, pageDescription: pageDescription, butcher: butcher, images: images }));\n    }\n\n\n    @Auth.Anonymous()\n    async butcherPhotoRoute() {\n        if (!this.req.params.butcher || !this.req.params.filename) return this.next();\n        let butcher = await ButcherModel.findOne({\n            where: { slug: this.req.params.butcher }\n        });\n        if (!butcher)\n            return this.next();\n\n        let photo: ResourceCacheItem, thumbnail = false, url = \"\";\n\n        let res = new ResourceRoute({\n            req: this.req,\n            res: this.res,\n            next: this.next\n        });\n\n        let type = \"butcher-google-photos\";\n        let defaultFile = \"public/img/butcher-default-thumbnail.jpg\";\n\n        if (this.req.params.filename == \"thumbnail\") {\n            thumbnail = true;\n            photo = this.req.helper.getResourcesOfType(type + butcher.id).find(p => p.ref1 == butcher.id)\n        }\n        else photo = this.req.helper.getResourcesOfType(type + this.req.params.filename).find(p => p.contentUrl == this.req.params.filename);\n\n        res.sendResource(photo, thumbnail, thumbnail ? defaultFile : null)\n    }\n\n\n\n    static SetRoutes(router: express.Router) {\n        router.get(\"/:butcher\", Route.BindRequest(Route.prototype.butcherRoute));\n        router.get(\"/:butcher/:category\", Route.BindRequest(Route.prototype.butcherRoute));\n        config.nodeenv == 'development' ? router.get(\"/:butcher/fotograf/:filename\", Route.BindRequest(Route.prototype.butcherPhotoRoute)) : null;\n    }\n}"],"sourceRoot":"../../src/"}