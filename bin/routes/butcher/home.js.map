{"version":3,"sources":["../src/routes/butcher/home.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,6CAA8C;AAG9C,qDAA8C;AAE9C,mEAA4D;AAC5D,qDAA8C;AAC9C,+CAAwC;AAExC,MAAa,aAAc,SAAQ,mBAAU;IAInC,WAAW,CAAC,EAAU;;YACxB,IAAI,OAAO,GAAG,MAAM,iBAAO,CAAC,OAAO,CAAC;gBAChC,OAAO,EAAE,CAAC;wBACN,KAAK,EAAE,wBAAc;wBACrB,OAAO,EAAE,CAAC,iBAAO,CAAC;wBAClB,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;qBAE1B;oBACD;wBACI,KAAK,EAAE,cAAI;wBACX,GAAG,EAAE,IAAI;wBACT,EAAE,EAAE,cAAc;qBAErB,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE;iBAGlB;aACJ,CAAC,CAAC;YACH,OAAO,OAAO,CAAC;QACnB,CAAC;KAAA;IAEK,UAAU;;YACZ,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE;gBAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,CAAA;aACtE;iBAAM,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE;gBAChC,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;aACjE;QACL,CAAC;KAAA;CACJ;AAhCD,sCAgCC;AAED,MAAqB,KAAM,SAAQ,aAAa;IAEtC,SAAS;;YACX,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;YACxB,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAChC,IAAI,CAAC,aAAa,GAAG,MAAM,iBAAO,CAAC,OAAO,CAAC;oBACvC,KAAK,EAAE;wBACH,QAAQ,EAAE,IAAI;qBACjB;iBACJ,CAAC,CAAA;aACL;YACD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,wBAAwB,EAAE,IAAI,CAAC,QAAQ,CAAC,EAEvD,CAAC,CAAC,CAAA;QACP,CAAC;KAAA;IAGK,eAAe;;YACjB,IAAI,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC3C,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,GAAG,EAAE,CAAC;YAClC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QACtC,CAAC;KAAA;IAED,MAAM,CAAC,SAAS,CAAC,MAAsB;QACnC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;QAC7D,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;IAClF,CAAC;CACJ;AA3BD,wBA2BC","file":"home.js","sourcesContent":["import * as express from \"express\";\nimport { ViewRouter } from '../../lib/router';\nimport moment = require('moment');\nimport { CacheManager } from \"../../lib/cache\";\nimport Butcher from \"../../db/models/butcher\";\nimport { Auth } from \"../../lib/common\";\nimport ButcherProduct from \"../../db/models/butcherproduct\";\nimport Product from \"../../db/models/product\";\nimport Area from \"../../db/models/area\";\n\nexport class ButcherRouter extends ViewRouter {\n    butcher: Butcher;\n    adminButchers: Butcher[];\n\n    async loadButcher(id: number) {\n        let butcher = await Butcher.findOne({\n            include: [{\n                model: ButcherProduct,\n                include: [Product],\n                order: [['id', \"DESC\"]]\n                                    \n            },\n            {\n                model: Area,\n                all: true,\n                as: \"areaLevel1Id\"\n\n            }], where: { id: id\n            \n            \n            }\n        });\n        return butcher;\n    }\n\n    async setButcher() {\n        if (this.req.session.__butcherid) {\n            this.butcher = await this.loadButcher(this.req.session.__butcherid)\n        } else if (this.req.user.butcherid) {\n            this.butcher = await this.loadButcher(this.req.user.butcherid)\n        }\n    }\n}\n\nexport default class Route extends ButcherRouter {\n\n    async viewRoute() {\n        await this.setButcher();   \n        if (this.req.user.hasRole(\"admin\")) {\n            this.adminButchers = await Butcher.findAll({\n                where: {\n                    approved: true\n                }\n            })\n        }     \n        this.res.render(\"pages/butcher.home.ejs\", this.viewData({\n\n        }))\n    }\n\n\n    async setButcherRoute() {\n        let id = parseInt(this.req.body.butcherid);\n        this.req.session.__butcherid = id;\n        this.res.redirect(\"/kasapsayfam\");\n    }\n\n    static SetRoutes(router: express.Router) {\n        router.get(\"/\", Route.BindRequest(this.prototype.viewRoute));        \n        router.post(\"/setbutcher\", Route.BindRequest(this.prototype.setButcherRoute));        \n    }\n}\n\n"],"sourceRoot":"../../../src/"}