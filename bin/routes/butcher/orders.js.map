{"version":3,"sources":["../src/routes/butcher/orders.ts"],"names":[],"mappings":";;;;;;;;;;;AAEA,iCAAkC;AAOlC,iCAAuC;AAMvC,iDAA8C;AAC9C,yCAA+B;AAG/B,MAAqB,KAAM,SAAQ,oBAAa;IAI5C,qBAAqB;IAErB,0FAA0F;IAC1F,IAAI;IACJ,uKAAuK;IACvK,IAAI;IACJ,QAAQ;IACR,0FAA0F;IAC1F,IAAI;IACJ,uKAAuK;IACvK,IAAI;IACJ,QAAQ;IACR,mFAAmF;IACnF,IAAI;IACJ,gLAAgL;IAChL,IAAI;IACJ,QAAQ;IACR,uFAAuF;IACvF,IAAI;IACJ,gKAAgK;IAChK,IAAI;IAGE,SAAS;;YACX,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;YAExB,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,KAAK,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;YAE7C,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC;YAEpC,IAAI,CAAC,IAAI,OAAO,EAAE;gBACd,KAAK,GAAG,MAAM,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;aAChE;iBAAM,IAAI,CAAC,IAAE,WAAW,EAAE;gBACvB,KAAK,GAAG,MAAM,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;gBAC3C,KAAK,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;aAC5C;iBAAM;gBACH,KAAK,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;gBAChE,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;aACjD;YAED,IAAI,MAAM,GAAG,MAAM,aAAK,CAAC,OAAO,CAAC;gBAC7B,KAAK,EAAE;oBACH,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE;oBAC1B,CAAC,cAAE,CAAC,GAAG,CAAC,EAAE;wBACN;4BACI,YAAY,EAAE;gCACV,CAAC,cAAE,CAAC,GAAG,CAAC,EAAE,KAAK;6BAClB;yBACJ;wBACD;4BACI,YAAY,EAAE;gCACV,CAAC,cAAE,CAAC,GAAG,CAAC,EAAE,KAAK;6BAClB;yBACJ;qBACJ;iBACJ;gBACD,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;aAC1B,CAAC,CAAA;YAGF,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,0BAA0B,EAAE,IAAI,CAAC,QAAQ,CAAC;gBACtD,MAAM,EAAE,MAAM;aACjB,CAAC,CAAC,CAAA;QACP,CAAC;KAAA;IAED,MAAM,CAAC,SAAS,CAAC,MAAsB;QACnC,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;IAC7E,CAAC;CACJ;AAzED,wBAyEC","file":"orders.js","sourcesContent":["import * as express from \"express\";\nimport { ViewRouter } from '../../lib/router';\nimport moment = require('moment');\nimport { CacheManager } from \"../../lib/cache\";\nimport Butcher from \"../../db/models/butcher\";\nimport { Auth } from \"../../lib/common\";\nimport ButcherProduct from \"../../db/models/butcherproduct\";\nimport Product from \"../../db/models/product\";\nimport Area from \"../../db/models/area\";\nimport { ButcherRouter } from \"./home\";\nimport * as _ from \"lodash\";\nimport Helper from \"../../lib/helper\";\nimport db from \"../../db/context\";\nimport { Transaction } from \"sequelize\";\nimport ButcherPriceHistory from \"../../db/models/butcherpricehistory\";\nimport { Order } from \"../../db/models/order\";\nimport { Op } from 'sequelize';\n\n\nexport default class Route extends ButcherRouter {\n    orders: Order[];\n\n\n    // set @butcher = 10;\n\n    // SELECT 'online satis toplam', sum(a.borc), sum(a.alacak) FROM  Accounts a where code in\n    // (\n    // select concat('205.',  o.userid, '.', o.ordernum, '.500') from Orders o where o.butcherid=@butcher and o.status ='teslim edildi' and  o.orderSource='kasaptanal.com'\n    // )\n    // union\n    // SELECT 'kapida satis toplam', sum(a.borc), sum(a.alacak) FROM  Accounts a where code in\n    // (\n    // select concat('205.',  o.userid, '.', o.ordernum, '.600') from Orders o where o.butcherid=@butcher  and o.status ='teslim edildi' and o.orderSource='kasaptanal.com'\n    // )\n    // union\n    // SELECT 'kasap puan-1', sum(a.borc), sum(a.alacak) FROM  Accounts a where code in\n    // (\n    // select concat('130.',  o.userid, '.', o.butcherid, '.', o.ordernum) from Orders o where o.butcherid=@butcher and o.status ='teslim edildi' and o.orderSource='kasaptanal.com'\n    // )\n    // union\n    // SELECT 'dagitilan puan-2', sum(a.borc), sum(a.alacak) FROM  Accounts a where code in\n    // (\n    // select concat('132.',  o.userid, '.2.', o.ordernum) from Orders o where o.butcherid=@butcher and o.status ='teslim edildi' and o.orderSource='kasaptanal.com'\n    // )\n\n\n    async viewRoute() {\n        await this.setButcher();\n\n        let sdate = new Date(2000,1,1);\n        let fdate = moment().endOf(\"month\").toDate();\n\n        let q = this.req.query.q || '7days';\n\n        if (q == '7days') {\n            sdate = moment().startOf('day').subtract(7, \"days\").toDate();\n        } else if (q=='thismonth') {\n            sdate = moment().startOf(\"month\").toDate();\n            fdate = moment().endOf(\"month\").toDate();\n        } else {\n            sdate = moment().subtract(1, \"month\").startOf(\"month\").toDate();\n            fdate = moment(sdate).endOf(\"month\").toDate();\n        }\n\n        let orders = await Order.findAll({\n            where: {\n                butcherid: this.butcher.id,\n                [Op.and]: [\n                    {\n                        creationDate: {\n                            [Op.gte]: sdate\n                        }\n                    },\n                    {\n                        creationDate: {\n                            [Op.lte]: fdate\n                        }\n                    }    \n                ]                \n            },\n            order: [['id', 'desc']]\n        })\n\n\n        this.res.render(\"pages/butcher.orders.ejs\", this.viewData({\n            orders: orders\n        }))\n    }\n\n    static SetRoutes(router: express.Router) {\n        router.get(\"/siparislerim\", Route.BindRequest(this.prototype.viewRoute));\n    }\n}\n\n"],"sourceRoot":"../../../src/"}