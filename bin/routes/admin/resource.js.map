{"version":3,"sources":["../src/routes/admin/resource.ts"],"names":[],"mappings":"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","file":"resource.js","sourcesContent":["import { ApiRouter, ViewRouter } from '../../lib/router';\nimport * as express from \"express\";\nimport * as maps from \"@google/maps\"\nimport ButcherModel from '../../db/models/butcher';\nimport moment = require('moment');\nimport { Auth } from '../../lib/common';\nimport Area from '../../db/models/area';\nimport Resource from '../../db/models/resource';\nimport { parse } from 'querystring';\nimport { threadId } from 'worker_threads';\nimport Helper from '../../lib/helper';\nimport * as fs from \"fs\"\nimport Category from '../../db/models/category';\nimport ResourceCategory from '../../db/models/resourcecategory';\nvar beautify = require(\"json-beautify\");\n\nexport default class Route extends ViewRouter {\n\n    categories: Category[] = [];\n    beautify = beautify;\n\n    async getResources() {\n        return await Resource.findAll({\n            where: {\n                type: [this.req.params.type as string, this.req.query.videotype as string],\n                ref1: this.req.params.ref1\n            },\n            include: [\n                {\n                    all: true\n                }\n            ]\n            , order: [[\"type\", \"ASC\"], [\"displayOrder\", \"DESC\"], [\"updatedOn\", \"DESC\"]]\n        })\n    }\n\n    getResourceCategory(resource: Resource, categoryid: number) {\n        let productCategory = resource.categories.find(c => c.categoryid == categoryid)\n        return productCategory ? {\n            displayOrder: productCategory.displayOrder,\n            enabled: true,\n            productCategory: productCategory\n        } : {\n                displayOrder: \"\",\n                enabled: false\n            }\n    }\n\n\n    @Auth.Anonymous()\n    async editViewRoute() {\n        if (!this.req.params.type || !this.req.params.ref1) {\n            return this.next();\n        }\n\n        let resources = await this.getResources()\n        this.categories = await this.getCategories();\n\n        this.res.render('pages/admin/resource.get.ejs', this.viewData({ images: resources }))\n    }\n\n    async addVideo(youtubeid) {\n        let res = await Resource.create({\n            type: this.req.query.videotype,\n            ref1: this.req.params.ref1,\n            contentType: \"video-youtube\",\n            contentLength: 0,\n            contentUrl: youtubeid,\n            thumbnailUrl: \"\",\n            folder: \"\"\n        })\n        return res;\n    }\n\n    async normalizeResourcePhoto(id) {\n        let resource = await Resource.findByPk(id);\n        let filedest = Helper.ResourcePaths[this.req.params.type];\n\n        await Helper.normalizePhoto(this.publicDir + `${filedest}/${resource.contentUrl}`, this.publicDir + `${filedest}/${resource.thumbnailUrl}`);\n\n\n    }\n\n    async addPhoto(photofile) {\n        let resources = await this.getResources();\n\n\n        return new Promise((resolve, reject) => {\n\n            let fileprefix = this.req.query.fileprefix || \"\";\n            let filedest = Helper.ResourcePaths[this.req.params.type];\n            let random = Helper.getRandomInt(1000);\n\n            let fileName = `${fileprefix}-${this.req.params.ref1}-${resources.length + 1}-${random}.jpg`;\n            let dest = this.publicDir + `${filedest}/${fileName}`\n            let thumbnailName = `${fileprefix}-${this.req.params.ref1}-${resources.length + 1}-${random}-thumbnail.jpg`;   \n\n            photofile.mv(dest, (err) => {\n                if (err)\n                    return reject(err);\n                return Helper.normalizePhoto(this.publicDir + `${filedest}/${fileName}`, this.publicDir + `${filedest}/${thumbnailName}`).then((img: any) => {\n                    return Resource.create({\n                        type: this.req.params.type,\n                        ref1: this.req.params.ref1,\n                        contentType: \"image/jpeg\",\n                        contentLength: photofile.size,\n                        contentUrl: fileName,\n                        thumbnailUrl: thumbnailName,\n                        folder: filedest,\n                        w: img.getWidth().toString(),\n                        h: img.getHeight().toString(),\n                    }).then(()=>resolve()).catch((err)=>reject(err))\n                }).catch(err=>reject(err))                    \n            });\n        })\n    }\n\n    async getCategories() {\n        return await Category.findAll({\n            where: {\n                type: 'resource'\n            }\n        })\n    }\n\n    @Auth.Anonymous()\n    async saveRoute() {\n\n        if (!this.req.params.type || !this.req.params.ref1) {\n            return this.next();\n        }\n\n\n        let resources = await this.getResources();\n        this.categories = await this.getCategories();\n\n\n        if (this.req.body.delimage) {\n            let id = parseInt(this.req.body.delimage);\n\n            let resource = await Resource.findByPk(id);\n\n\n\n            await Resource.destroy({\n                where: {\n                    id: id\n                }\n            })\n\n            if (resource.contentType == 'image/jpeg') {\n                fs.existsSync(this.publicDir + resource.getFileUrl()) ? fs.unlinkSync(this.publicDir + resource.getFileUrl()) : null;\n                (resource.thumbnailUrl && fs.existsSync(this.publicDir + resource.getThumbnailFileUrl())) ? fs.unlinkSync(this.publicDir + resource.getThumbnailFileUrl()) : null;\n    \n            }\n\n\n\n\n        } else if (this.req.body.updatecategory) {\n            let categoryid = parseInt(this.req.body.updatecategory);\n            let id = parseInt(this.req.body['resourceid' + categoryid]);\n            let resource = await Resource.findByPk(id);\n            await ResourceCategory.destroy({\n                where: {\n                    resourceid: resource.id,\n                    categoryid: categoryid\n                }\n            })\n            if (this.req.body['categoryenabled' + categoryid] == \"on\") {\n                let newItem = new ResourceCategory();\n                newItem.resourceid = resource.id;\n                newItem.categoryid = categoryid;\n\n                newItem.displayOrder = (this.req.body['categorydisplayorder' + categoryid]  ? parseInt(this.req.body['categorydisplayorder' + categoryid]) : 0)\n                await newItem.save();\n            }\n            }\n        else if (this.req.body.pritimage) {\n            let id = parseInt(this.req.body.pritimage);\n            let resource = resources.find((res) => res.id == id);\n            resource.changed('type', true)\n            await resource.save();\n        } else if (this.req.body.resizeimage) {\n            let id = parseInt(this.req.body.resizeimage);\n            await this.normalizeResourcePhoto(id)\n            \n        } else if (this.req.body.saveimage) {\n            let id = parseInt(this.req.body.saveimage);\n            let resource = resources.find((res) => res.id == id);\n            resource.title = this.req.body['imgtitle' + id] || null;\n            resource.slug = this.req.body['imgslug' + id] || null;\n            resource.tag1 = this.req.body['imgtag1' + id] || null;\n            resource.displayOrder = this.req.body['imgdisplayorder' + id] ? parseInt(this.req.body['imgdisplayorder' + id]): 0;\n\n            \n            resource.tag2 = this.req.body['imgtag2' + id];\n            resource.tag3 = this.req.body['imgtag3' + id];\n            resource.keywords = this.req.body['keywords' + id];\n            resource.description = this.req.body['imgdesc' + id];\n            resource.badge = this.req.body['imgbadge' + id];\n            resource.settings = this.req.body['imgsettings' + id] ? JSON.parse(this.req.body['imgsettings' + id]) : {};\n            resource.mddesc = this.req.body['imgmddesc' + id];\n            resource.ref2 = this.req.body['imgref1' + id] ? parseInt(this.req.body['imgref1' + id]): null;\n            resource.ref2 = this.req.body['imgref2' + id] ? parseInt(this.req.body['imgref2' + id]): null;\n            resource.ref3 = this.req.body['imgref3' + id] ? parseInt(this.req.body['imgref3' + id]): null;\n            resource.ref4 = this.req.body['imgref4' + id] ? parseInt(this.req.body['imgref4' + id]): null;\n            resource.ref5 = this.req.body['imgref5' + id] ? parseInt(this.req.body['imgref5' + id]): null;\n            resource.ref6 = this.req.body['imgref6' + id] ? parseInt(this.req.body['imgref6' + id]): null;\n\n            resource.list = this.req.body['imglist' + id] == \"on\";\n\n            if (resource.contentType != \"image/jpeg\" && (resource.thumbnailUrl != this.req.body['imgthumbnail' + id])) {\n                resource.thumbnailUrl = this.req.body['imgthumbnail' + id];\n            }\n            await resource.save();\n        } \n        else if (this.req.body.addimg && this.req[\"files\"] && Object.keys(this.req[\"files\"]).length != 0) {\n            let photofile = this.req[\"files\"].photofile;\n            await this.addPhoto(photofile);\n        } else if (this.req.body.addvideo && this.req.body.youtubeid) {\n            await this.addVideo(this.req.body.youtubeid)\n        }\n\n        resources = await this.getResources();\n\n        this.res.render('pages/admin/resource.get.ejs', this.viewData({ images: resources }))\n    }\n\n    static SetRoutes(router: express.Router) {\n        router.get(\"/resource/:type/:ref1\", Route.BindRequest(Route.prototype.editViewRoute));\n        router.post(\"/resource/:type/:ref1\", Route.BindRequest(Route.prototype.saveRoute));\n    }\n}\n\n"],"sourceRoot":"../../../src/"}