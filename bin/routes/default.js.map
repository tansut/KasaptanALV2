{"version":3,"sources":["../src/routes/default.ts"],"names":[],"mappings":"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","file":"default.js","sourcesContent":["import { ApiRouter, ViewRouter } from '../lib/router';\nimport * as express from \"express\";\nimport * as maps from \"@google/maps\"\nimport ButcherModel from '../db/models/butcher';\nimport moment = require('moment');\nimport { Auth } from '../lib/common';\nimport Helper from '../lib/helper';\nimport Resource from '../db/models/resource';\nimport Area from '../db/models/area';\nimport { where } from 'sequelize/types';\nimport Product from '../db/models/product';\nimport Category from '../db/models/category';\nimport ProductManager from '../lib/productManager';\nimport config from '../config';\nimport ProductsApi from './api/product';\nimport Content from '../db/models/content';\nimport { ProductCacheItem, CacheManager } from '../lib/cache';\nimport { Op } from 'sequelize';\nimport { SiteStatsData } from '../models/sitestat';\nimport { SiteStats } from '../lib/sitestats';\n\nlet ellipsis = require('text-ellipsis');\n\nexport default class Route extends ViewRouter {\n\n    //tarifs: Resource[];\n    hide4Sebep = false;\n    foods: Resource[];\n    blogItems: Content[];\n    foodsTitle = \"Et Yemekleri\";\n    stats: SiteStatsData;\n\n    async getBlogItems() {\n        return this.req.__recentBlogs;\n    }\n\n\n    filterProductsByCategory(category: Category, limit= 8) {\n        let result: ProductCacheItem[] = []\n        let prodSlugs = this.req.__categoryProducts[category.slug];\n        if (prodSlugs) {\n            for (let i = 0; i < prodSlugs.length; i++) {\n                let product = this.req.__products[prodSlugs[i].slug];\n                if (product) result.push(product);\n                if (result.length >= limit) break;\n            }\n        }\n        return result; //.slice(0, 8);\n    }\n\n    @Auth.Anonymous()\n    async kasapViewRoute() {\n         this.foods = await new ProductsApi(this.constructorParams).getFoodResources(null, 10);\n        this.sendView(\"pages/content.kasap-basvuru.ejs\", this.viewData({\n\n        }))\n    }\n\n\n    @Auth.Anonymous()\n    async defaultRoute() {\n        // let recentButchers: ButcherModel[] = CacheManager.dataCache.get(\"recent-butchers\");\n        // if (!recentButchers) {\n        //     recentButchers = await ButcherModel.findAll({\n        //         order: [[\"updatedon\", \"DESC\"]],\n        //         limit: 10,\n        //         include: [\n        //             { all: true }\n        //         ],\n        //         where: {\n        //             approved: true\n        //         }\n        //     });\n        //     CacheManager.dataCache.set(\"recent-butchers\", recentButchers.map(b => b.get({ plain: true })));\n        // }\n\n        // this.foods = await new ProductsApi(this.constructorParams).getResources({\n        //     type: ['product-videos', 'product-photos'],\n        //     list: true,\n        //     tag1: {\n        //         [Op.or]: [{\n        //             [Op.like]: '%yemek%'\n\n        //         }, { [Op.like]: '%tarif%' }]\n        //     }\n        // }, null, 10);\n        // this.foodsTitle = 'Yemekler ve Tarifler'\n\n        //this.foods = CacheManager.dataCache.get(\"recent-foods\");\n        this.blogItems = await this.getBlogItems();\n        //this.stats = await SiteStats.get();\n\n\n        this.res.render(\"pages/default.ejs\", this.viewData({\n            //recentButchers: recentButchers,\n            ellipsis: ellipsis\n        }));\n\n    }\n\n    @Auth.Anonymous()\n    async setUserAddr() {\n        let area = await Area.getBySlug(this.req.params.slug);\n        if (!area) return this.next();\n        if (area.level == 3) {\n            await this.req.helper.setPreferredAddress({\n                level3Id: area.id\n            }, true);\n            await area.ensureLocation()\n        }\n        if (this.req.query.r)\n            this.res.redirect(this.req.query.r as string);\n        else this.res.redirect('/')\n    }\n\n    static SetRoutes(router: express.Router) {\n        // if (config.nodeenv == 'production') {\n        //     router.get(\"/home\", Route.BindRequest(this.prototype.defaultRoute))\n        //     router.get(\"/\", Route.BindToView(\"pages/offline.ejs\"))\n        // }\n        // else {\n\n        // }\n        router.get(\"/\", Route.BindRequest(this.prototype.defaultRoute))\n        router.get(\"/adres-belirle/:slug\", Route.BindRequest(this.prototype.setUserAddr))\n        router.get(\"/hikayemiz\", Route.BindToView(\"pages/content.kurumsal.ejs\"))\n        router.get(\"/iletisim\", Route.BindToView(\"pages/content.contact.ejs\"))\n        router.get(\"/yardim\", Route.BindToView(\"pages/content.yardim.ejs\"))\n        router.get(\"/kasap-secim-kriterleri\", Route.BindToView(\"pages/content.kasap-secim.ejs\"))\n        router.get(\"/kasap\", Route.BindRequest(this.prototype.kasapViewRoute))\n        router.get(\"/kullanici-sozlesmesi\", Route.BindToView(\"pages/content.kullanici-sozlesmesi.ejs\"))\n        router.get(\"/gizlilik-sozlesmesi\", Route.BindToView(\"pages/content.gizlilik-sozlesmesi.ejs\"))\n        router.get(\"/satis-sozlesmesi\", Route.BindToView(\"pages/content.satis-sozlesmesi.ejs\"))\n    }\n} "],"sourceRoot":"../../src/"}