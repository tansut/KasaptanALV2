{"version":3,"sources":["../src/routes/payorder.ts"],"names":[],"mappings":"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","file":"payorder.js","sourcesContent":["import { ApiRouter, ViewRouter } from '../lib/router';\nimport * as express from \"express\";\nimport * as maps from \"@google/maps\"\nimport ButcherModel from '../db/models/butcher';\nimport moment = require('moment');\nimport { Auth } from '../lib/common';\nimport AreaModel from '../db/models/area';\nimport Helper from '../lib/helper';\nimport Area from '../db/models/area';\nimport Category from '../db/models/category';\nimport Content from '../db/models/content';\nimport config from '../config';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport { readFileSync } from 'fs';\nimport UserRoute from './api/user';\nimport { Order } from '../db/models/order';\nlet ellipsis = require('text-ellipsis');\nvar MarkdownIt = require('markdown-it')\nimport iyzico from '../lib/payment/iyzico';\nimport { CreditcardPaymentFactory, Creditcard, PaymentResult, PaymentRequest, PaymentTotal } from '../lib/payment/creditcard';\nimport OrderApi from \"./api/order\"\nimport SiteLogRoute from './api/sitelog';\nimport SiteLog from '../db/models/sitelog';\nimport Payment from '../db/models/payment';\nimport AccountModel from '../db/models/accountmodel';\nimport { Account } from '../models/account';\nimport { PaymentRouter } from '../lib/paymentrouter';\nimport { PuanCalculator } from '../lib/commissionHelper';\nimport { PuanResult } from '../models/puan';\nimport email from '../lib/email';\nimport { OrderSource } from '../models/order';\n\nexport default class Route extends PaymentRouter {\n    order: Order;\n    api: OrderApi;\n    balance: AccountModel;\n    paySession = {};\n    shouldBePaid = 0.00;\n    puanBalanceButcher: AccountModel;\n    puanBalanceKalitte: AccountModel;\n    earnedPuanButcher = 0.00;\n    earnedPuanKalitte = 0.00;\n    earnedPuanTotal = 0.00;\n    mayEarnPuanTotal = 0.00;\n    productTotal = 0.00;\n\n    possiblePuanList: PuanResult[] = [];\n\n    renderPage(userMessage: string, view: string) {\n        let pageInfo = {};\n        if (this.shouldBePaid > 0.00) {\n            let pageTitle = '', pageDescription = '';\n\n            if (this.mayEarnPuanTotal > 0.00) {\n                pageTitle = `Online ödeyin, ${this.mayEarnPuanTotal} TL değerinde puan kazanın: ${Helper.formatDate(this.order.creationDate)} tarihli ${this.order.butcherName} siparişiniz`;\n                pageDescription = `Nefis ürünlerinizi güvenle online ödeyin, puan kazanın, zaman kazanın, sağlığınızı koruyun.`\n\n            }\n            else {\n                pageTitle = `Online Ödeyin: ${Helper.formatDate(this.order.creationDate)} tarihli ${this.order.butcherName} siparişiniz`;\n                pageDescription = `Nefis ürünlerinizi güvenle online ödeyin, hem zamandan kazanın, hem sağlığınızı koruyun.`\n            }\n\n            pageInfo = {\n                pageTitle: pageTitle,\n                pageDescription: pageDescription\n            }\n        } else {\n\n        }\n\n        this.sendView(view, { ...pageInfo, ...{ _usrmsg: { text: userMessage } }, ...this.api.getView(this.order), ...{ enableImgContextMenu: true } });\n\n    }\n\n    async getOrderSummary() {\n        if (this.order.workedAccounts.length == 1) {\n            let initial = this.api.generateInitialAccounting(this.order);\n            await this.api.saveAccountingOperations([initial]);\n            await this.getOrder();\n        }\n        this.productTotal = this.api.calculateProduct(this.order);\n        this.balance = this.order.workedAccounts.find(p => p.code == 'total')\n        this.shouldBePaid = Helper.asCurrency(this.balance.alacak - this.balance.borc);\n        this.puanBalanceKalitte = this.order.kalittePuanAccounts.find(p => p.code == 'total');\n        this.puanBalanceButcher = this.order.butcherPuanAccounts.find(p => p.code == 'total');\n        this.earnedPuanKalitte = this.puanBalanceKalitte ? Helper.asCurrency(this.puanBalanceKalitte.alacak - this.puanBalanceKalitte.borc) : 0.00\n        this.earnedPuanButcher = this.puanBalanceButcher ? Helper.asCurrency(this.puanBalanceButcher.alacak - this.puanBalanceButcher.borc) : 0.00\n        this.earnedPuanTotal = Helper.asCurrency(this.earnedPuanKalitte + this.earnedPuanButcher)\n        this.mayEarnPuanTotal = 0.00;\n        if (this.shouldBePaid > 0 && this.order.orderSource == OrderSource.kasaptanal) {\n            this.possiblePuanList = this.api.getPossiblePuanGain(this.order, this.productTotal);\n            this.possiblePuanList.forEach(pg => this.mayEarnPuanTotal += pg.earned)\n            this.mayEarnPuanTotal = Helper.asCurrency(this.mayEarnPuanTotal)\n        }\n    }\n\n\n    async paymentSuccess(request: PaymentRequest, payment: PaymentResult) {\n        await this.api.completeCreditcardPayment([this.order], request, payment);\n        await super.paymentSuccess(request, payment);\n        await this.getOrder();\n        await this.getOrderSummary()\n    }\n\n    async getPaymentRequest() {\n        if (this.shouldBePaid <= 0.00)\n            throw new Error(\"Geçersiz ödeme işlemi, siparişin borcu yoktur\");\n        let debt = {};     \n        debt[this.order.butcherid] = 0.00;       \n        \n        if (this.order.orderSource == OrderSource.kasaptanal) {\n            this.api.fillPuanAccounts(this.order, this.productTotal);\n            let butcherDebptAccounts = await AccountModel.summary([Account.generateCode(\"kasaplardan-alacaklar\", [this.order.butcherid])])\n            let butcherDebt = Helper.asCurrency(butcherDebptAccounts.borc - butcherDebptAccounts.alacak);\n            debt[this.order.butcherid] = butcherDebt;            \n        }\n\n\n        \n        let request = this.paymentProvider.requestFromOrder([this.order], debt);\n        request.callbackUrl = this.url + '/3dnotify?provider=' + this.paymentProvider.providerKey;        \n        if (this.shouldBePaid != request.paidPrice)\n            throw new Error(\"Geçersiz sipariş ve muhasebesel tutarlar\");\n\n        return request;\n    }\n\n    @Auth.Anonymous()\n    async payOrderRoute() {\n        await this.getOrder();\n        if (!this.order)\n            return this.next();\n\n        await this.getOrderSummary();\n\n        let userMessage = \"\";\n        let req: PaymentRequest = null;\n        try {\n            if (this.pageHasPaymentId) {           \n                req = await this.getPaymentRequest();     \n                let threedPaymentMade = await this.created3DPayment();\n                if (threedPaymentMade) {\n                    await this.paymentSuccess(req, threedPaymentMade);\n                    userMessage = \"Ödemeniz başarıyla alındı\"\n                } else {\n                    throw new Error(\"Ödeme işlemi başarısız\")\n                }\n\n            } else if (this.req.body.makepayment == \"true\") {\n                req = await this.getPaymentRequest();     \n\n                if (this.req.body.secureship == 'on') {\n                    this.order.noInteraction = true;\n                    await this.order.save()\n                } else {\n                    this.order.noInteraction = false;\n                    await this.order.save()\n                }\n\n                let paymentResult: PaymentResult;                \n                if (this.threeDPaymentRequested) {\n                    await this.init3dPayment(req);\n                } else {\n                    let creditCard = this.getCreditCard();\n                    paymentResult = await this.createPayment(req, creditCard);\n                    await this.paymentSuccess(req, paymentResult)\n                    userMessage = \"Ödemenizi başarıyla aldık\"\n                }\n            }\n        } catch (err) {\n            userMessage = err.message || err.errorMessage;\n            this.paySession = await this.paymentProvider.paySession(req);\n            email.send('tansut@gmail.com', 'hata/payment: kasaptanAl.com', \"error.ejs\", {\n                text: JSON.stringify(err || {}) + '/' + userMessage + ' ' + this.order.ordernum,\n                stack: err.stack\n            })            \n        }\n\n        this.renderPage(userMessage, \"pages/payorder.ejs\");\n\n    }\n\n    async getOrder() {\n        let ordernum = this.req.params.ordernum;\n        this.api = new OrderApi(this.constructorParams);\n        this.order = await this.api.getOrder(ordernum, true);\n    }\n\n    @Auth.Anonymous()\n    async payOrderViewRoute() {\n        await this.getOrder();\n        if (!this.order)\n            return this.next();\n\n        await this.getOrderSummary();\n        \n        if (this.shouldBePaid > 0) {\n            let payRequest = await this.getPaymentRequest();\n            this.paySession = await this.paymentProvider.paySession(payRequest);\n        }   \n\n        this.renderPage(null, \"pages/payorder.ejs\");\n    }\n\n\n\n\n\n\n\n    static SetRoutes(router: express.Router) {\n        router.get('/pay/:ordernum', Route.BindRequest(Route.prototype.payOrderViewRoute))\n        router.post('/pay/:ordernum', Route.BindRequest(Route.prototype.payOrderRoute))\n    }\n}"],"sourceRoot":"../../src/"}