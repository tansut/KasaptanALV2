{"version":3,"sources":["../src/routes/content.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,0CAAsD;AAKtD,0CAAqC;AAKrC,kDAA2C;AAC3C,sCAA+B;AAK/B,IAAI,QAAQ,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACxC,IAAI,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAA;AACvC,2CAAwC;AACxC,yCAAkD;AAIlD,MAAqB,KAAM,SAAQ,mBAAU;IAA7C;;QAII,cAAS,GAAe,EAAE,CAAC;IAuH/B,CAAC;IAnHG,wBAAwB,CAAC,QAAkB,EAAE,KAAK,GAAE,CAAC;QACjD,IAAI,MAAM,GAAuB,EAAE,CAAA;QACnC,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,SAAS,EAAE;YACX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBACrD,IAAI,OAAO;oBAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,IAAI,MAAM,CAAC,MAAM,IAAI,KAAK;oBAAE,MAAM;aACrC;SACJ;QACD,OAAO,MAAM,CAAC,CAAC,eAAe;IAClC,CAAC;IAEK,cAAc;;YAEhB,IAAI,OAAO,GAAG,MAAM,iBAAO,CAAC,SAAS,CAAC,KAAK,CAAC,sDAAsD,EAAE;gBAChG,GAAG,EAAE,IAAI;gBACT,IAAI,EAAE,sBAAU,CAAC,MAAM;aAC1B,CAAE,CAAA;YAEH,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAE9B,CAAC;KAAA;IAED,gBAAgB;QACZ,OAAO,CAAC;gBACJ,GAAG,EAAE,GAAG,gBAAM,CAAC,YAAY,sBAAsB,IAAI,CAAC,OAAO,CAAC,IAAI,MAAM;aAC3E,CAAC,CAAA;IACN,CAAC;IAED,qBAAqB;IACrB,iCAAiC;IACjC,oHAAoH;IACpH,kDAAkD;IAClD,gCAAgC;IAChC,IAAI;IAEJ,UAAU;QACN,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,qBAAqB,EAAE,IAAI,CAAC,QAAQ,CAAC;YACjD,aAAa,EAAE,GAAG,gBAAM,CAAC,YAAY,sBAAsB,IAAI,CAAC,OAAO,CAAC,IAAI,gBAAgB;YAC5F,SAAS,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;YACzD,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,eAAe,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW;SAC5E,CAAC,CAAC,CAAA;IACP,CAAC;IAED,eAAe,CAAC,OAAgB;QAC5B,OAAO,GAAG,gBAAM,CAAC,YAAY,sBAAsB,OAAO,CAAC,IAAI,gBAAgB,CAAC;IACpF,CAAC;IAGK,UAAU;;YACZ,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ;gBACxB,KAAK,GAAG;oBACJ,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ;iBACzC,CAAA;YACL,IAAI,UAAU,GAAG,MAAM,iBAAO,CAAC,OAAO,CAAC;gBACnC,UAAU,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,EAAE,cAAc,CAAC;gBACxE,KAAK,EAAE,CAAC,CAAC,cAAc,EAAE,MAAM,CAAC,EAAE,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;gBACxD,KAAK,EAAE,KAAK;gBACZ,KAAK,EAAE,EAAE;aACZ,CAAC,CAAA;YACF,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC;gBAClD,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE;gBACvD,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,EAAE,GAAG,CAAC,CAAA;aACpG;YACD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,MAAM,IAAI,iBAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,sBAAsB,CAAC,EAAE,CAAC,CAAA;YACzF,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,IAAI,CAAC,UAAU,CAAC,sBAAsB,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAA,CAAC,CAAC,IAAI,EAAE;gBACzG,UAAU,EAAE,UAAU;aACzB,CAAC,CAAA;QACN,CAAC;KAAA;IAIK,SAAS;;YACX,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;gBAC1B,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACtB;YAID,IAAI,CAAC,OAAO,GAAG,MAAM,iBAAO,CAAC,OAAO,CAAC;gBACjC,KAAK,EAAE;oBACH,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO;iBAChC;aACJ,CAAC,CAAA;YAEF,IAAI,CAAC,IAAI,CAAC,OAAO;gBAAE,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YAEtC,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE;gBACvD,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,EAAE,GAAG,CAAC,CAAA;aACpG;YAED,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAE5B,IAAI,CAAC,UAAU,EAAE,CAAA;QAErB,CAAC;KAAA;IAKD,MAAM,CAAC,SAAS,CAAC,MAAsB;QACnC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;QACnE,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;QAC7E,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;QAE3E,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjF,MAAM,CAAC,GAAG,CAAC,uBAAuB,EAAE,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3F,MAAM,CAAC,GAAG,CAAC,sBAAsB,EAAE,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAE7F,CAAC;CACJ;AAjEG;IADC,aAAI,CAAC,SAAS,EAAE;;;;uCAwBhB;AAID;IADC,aAAI,CAAC,SAAS,EAAE;;;;sCAwBhB;AA5GL,wBA2HC","file":"content.js","sourcesContent":["import { ApiRouter, ViewRouter } from '../lib/router';\nimport * as express from \"express\";\nimport * as maps from \"@google/maps\"\nimport ButcherModel from '../db/models/butcher';\nimport moment = require('moment');\nimport { Auth } from '../lib/common';\nimport AreaModel from '../db/models/area';\nimport Helper from '../lib/helper';\nimport Area from '../db/models/area';\nimport Category from '../db/models/category';\nimport Content from '../db/models/content';\nimport config from '../config';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport { readFileSync } from 'fs';\nimport Resource from '../db/models/resource';\nlet ellipsis = require('text-ellipsis');\nvar MarkdownIt = require('markdown-it')\nimport ProductsApi from './api/product';\nimport { Sequelize, QueryTypes } from 'sequelize';\nimport { ProductCacheItem } from '../lib/cache';\n\n\nexport default class Route extends ViewRouter {\n\n    content: Content;\n    allcontent: Content[];\n    resources: Resource[] = [];\n    categories: any;\n\n\n    filterProductsByCategory(category: Category, limit= 8) {\n        let result: ProductCacheItem[] = []\n        let prodSlugs = this.req.__categoryProducts[category.slug];\n        if (prodSlugs) {\n            for (let i = 0; i < prodSlugs.length; i++) {\n                let product = this.req.__products[prodSlugs[i].slug];\n                if (product) result.push(product);\n                if (result.length >= limit) break;\n            }\n        }\n        return result; //.slice(0, 8);\n    }\n\n    async loadCategories() {\n\n        let catdata = await Content.sequelize.query(\"SELECT distinct category, categorySlug from Contents\", {\n            raw: true  ,\n            type: QueryTypes.SELECT       \n        } )\n\n        this.categories = catdata;\n\n    }\n\n    getContentImages() {\n        return [{\n            url: `${config.staticDomain}/content-resimleri/${this.content.slug}.jpg`\n        }]\n    }\n\n    // getHtmlContent() {\n    //     let md = new MarkdownIt();\n    //     let file = path.resolve(path.join(config.projectDir, \"src/views/pages/content/\" + this.content.slug + \".md\"))\n    //     let content = fs.readFileSync(file, \"utf8\")\n    //     return md.render(content)\n    // }\n\n    renderPage() {\n        this.res.render(`pages/blog.view.ejs`, this.viewData({\n            pageThumbnail: `${config.staticDomain}/content-resimleri/${this.content.slug}-thumbnail.jpg`,\n            pageTitle: (this.content.pageTitle || this.content.title),\n            pageDescription: this.content.pageDescription || this.content.description\n        }))\n    }\n\n    getthumbnailurl(content: Content) {\n        return `${config.staticDomain}/content-resimleri/${content.slug}-thumbnail.jpg`;\n    }\n\n    @Auth.Anonymous()\n    async indexRoute() {\n        let where = {};\n        if (this.req.params.category)\n            where = {\n                categorySlug: this.req.params.category\n            }\n        let allcontent = await Content.findAll({\n            attributes: [\"title\", \"category\", \"description\", \"slug\", \"categorySlug\"],\n            order: [[\"displayOrder\", \"DESC\"], [\"UpdatedOn\", \"DESC\"]],\n            where: where,\n            limit: 25\n        })\n        if (this.req.params.category && allcontent.length == 0)\n            return this.next();\n        if (this.req.path.toLowerCase().startsWith('/et-kulturu')) {\n            return this.res.redirect(this.req.originalUrl.toLowerCase().replace('/et-kulturu', '/blog'), 301)\n        }\n        this.allcontent = allcontent;\n        this.resources = await new ProductsApi(this.constructorParams).getInformationalVideos(25)\n        await this.loadCategories();\n        this.renderView('pages/blog.index.ejs', this.req.params.category ? `blog/${this.req.params.category}`: null, {\n            allcontent: allcontent\n        })\n    }\n\n\n    @Auth.Anonymous()\n    async viewRoute() {\n        if (!this.req.params.content) {\n            return this.next();\n        }\n\n\n\n        this.content = await Content.findOne({\n            where: {\n                slug: this.req.params.content\n            }\n        })\n\n        if (!this.content) return this.next();\n\n        if (this.req.path.toLowerCase().startsWith('/et-kulturu')) {\n            return this.res.redirect(this.req.originalUrl.toLowerCase().replace('/et-kulturu', '/blog'), 301)\n        }\n\n        await this.loadCategories();\n\n        this.renderPage()\n\n    }\n\n\n\n\n    static SetRoutes(router: express.Router) {\n        router.get(\"/blog\", Route.BindRequest(Route.prototype.indexRoute));\n        router.get(\"/blog/:category\", Route.BindRequest(Route.prototype.indexRoute));\n        router.get(\"/blog/:content\", Route.BindRequest(Route.prototype.viewRoute));\n\n        router.get(\"/et-kulturu\", Route.BindRequest(Route.prototype.indexRoute, [true]));\n        router.get(\"/et-kulturu/:category\", Route.BindRequest(Route.prototype.indexRoute, [true]));\n        router.get(\"/et-kulturu/:content\", Route.BindRequest(Route.prototype.viewRoute, [true]));\n\n    }\n}"],"sourceRoot":"../../src/"}