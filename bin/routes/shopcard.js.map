{"version":3,"sources":["../src/routes/shopcard.ts"],"names":[],"mappings":"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","file":"shopcard.js","sourcesContent":["import { ApiRouter, ViewRouter, IRequestParams } from '../lib/router';\nimport * as express from \"express\";\nimport * as maps from \"@google/maps\"\nimport ButcherModel from '../db/models/butcher';\nimport moment = require('moment');\nimport { Auth, ProductTypeManager, ProductTypeFactory, KurbanProductManager } from '../lib/common';\nimport AreaModel from '../db/models/area';\nimport Helper from '../lib/helper';\nimport Area from '../db/models/area';\nimport Category from '../db/models/category';\nimport Content from '../db/models/content';\nimport config from '../config';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport { readFileSync } from 'fs';\nimport { ShopCard } from '../models/shopcard';\nimport { ShipmentType, ShipmentTypeDesc, ShipmentHours, ShipmentDays, Shipment, ShipmentHowToDesc } from '../models/shipment';\nimport { PaymentTypeDesc } from '../models/payment';\nimport { Order, OrderItem } from '../db/models/order';\nimport Dispatcher from './api/dispatcher';\nimport OrderApi from './api/order';\nlet ellipsis = require('text-ellipsis');\nvar MarkdownIt = require('markdown-it')\nimport { Creditcard, CreditcardPaymentFactory } from '../lib/payment/creditcard'\nimport { PuanCalculator, ComissionHelper } from '../lib/commissionHelper';\nimport { PuanResult } from '../models/puan';\nimport { DispatcherTypeDesc } from '../db/models/dispatcher';\nimport { all } from 'sequelize/types/lib/operators';\n\nexport default class Route extends ViewRouter {\n    shopcard: ShopCard;\n    DispatcherTypeDesc = DispatcherTypeDesc\n    shipmentHours = ShipmentHours;\n    shipmentDays = ShipmentDays;\n    moment = moment\n    Shipment = Shipment;\n    Butchers: ButcherModel[] = null;\n    puanCalculator: PuanCalculator;\n    mayEarnPuanTotal = 0.00;\n    possiblePuanList: PuanResult[] = [];\n    orderapi: OrderApi;\n\n\n\n    async getOrderSummary() {\n        await this.loadButchers();\n        let orders = []\n        this.mayEarnPuanTotal = 0.00;\n        if (this.shopcard.items.length > 0) {\n            orders = await this.orderapi.getFromShopcard(this.shopcard);\n            for (var i = 0; i < orders.length; i++) {\n                if (this.req.user)\n                    await this.orderapi.fillFirstOrderDetails(orders[i]);\n                let list = this.orderapi.getPossiblePuanGain(orders[i], this.shopcard.getButcherTotalWithoutShipping(orders[i].butcherid), true);\n                this.possiblePuanList = this.possiblePuanList.concat(list);\n            }\n            this.possiblePuanList.forEach(pg => this.mayEarnPuanTotal += pg.earned)\n            this.mayEarnPuanTotal = Helper.asCurrency(this.mayEarnPuanTotal)\n        }\n        return orders;\n    }\n\n\n    renderPage(page: string, userMessage?: any) {\n        userMessage = userMessage || {}\n        this.sendView(page, {\n            ...userMessage, ...{\n                shopcard: this.shopcard,\n            }\n        })\n    }\n\n\n\n\n\n    @Auth.Anonymous()\n    async viewRoute() {\n        this.shopcard = await ShopCard.createFromRequest(this.req);\n        await this.getOrderSummary();\n        this.renderPage(`pages/shopcard.ejs`)\n\n    }\n\n\n    shipPossibleToday(): boolean {\n        return Object.keys(this.Shipment.availableTimes()).length > 0;\n    }\n\n    async savecardRoute() {\n        this.shopcard = await ShopCard.createFromRequest(this.req);\n        this.shopcard.note = this.req.body[\"order-comments\"] || \"\";\n\n        await this.setDispatcher();\n        await this.shopcard.saveToRequest(this.req);\n        if (this.shopcard.getOrderType() == 'kurban') {\n            let man = ProductTypeFactory.create('kurban', this.shopcard.items[0].productTypeData) as KurbanProductManager;\n            let ship = this.shopcard.shipment[Object.keys(this.shopcard.shipment)[0]];\n            this.fillDefaultAddress();\n            if (['0', '1', '2'].indexOf(man.teslimat) >= 0) {\n                ship.howTo = \"take\";\n                this.renderPage(\"pages/checkout.adres-take.ejs\")\n            } else {\n                ship.howTo = \"ship\";\n                this.renderPage(\"pages/checkout.adres.ejs\");\n            }\n        }\n        else this.renderPage(\"pages/checkout.ship.ejs\");\n    }\n\n\n    async adresViewRoute() {\n        this.shopcard = await ShopCard.createFromRequest(this.req);\n        if (!this.shopcard.address.name) {\n            this.shopcard.address.name = this.req.user.name;\n            this.shopcard.address.email = this.req.user.email;\n            this.shopcard.address.phone = this.req.user.mphone;\n        }\n\n        this.renderPage(\"pages/checkout.adres.ejs\");\n    }\n\n    getProductTypeManager(i: number): ProductTypeManager {\n        let item = this.shopcard.items[i];\n        let params = {\n\n        }\n        params = { ...params, ...item.productTypeData }\n        let result = ProductTypeFactory.create(item.product.productType, params)\n        return result;\n    }\n\n    allowNonOnline(bi) {\n        let allow = true;\n        if (this.shopcard.getOrderType() == 'kurban') {\n            allow = false; \n        }\n        if (allow) {\n            if (this.shopcard.shipment[bi].dispatcher && this.shopcard.shipment[bi].dispatcher.type != \"butcher\") {\n                allow = false;\n            }\n        }\n        return allow;\n    }\n\n    calculateCostForCustomer(shipment: Shipment, o: Order) {\n        if (o.dispatcherFee > 0.00) {\n            let dispatcherFee = Helper.asCurrency(o.dispatcherFee / 1.18);\n            let calc = new ComissionHelper(o.getButcherRate(), o.getButcherFee());\n            let commission = calc.calculateButcherComission(o.subTotal);    \n            let contribute = Helper.asCurrency(commission.kalitteFee * 0.4);\n            let calculated = Helper.asCurrency(Math.max(0.00, dispatcherFee - contribute));\n            let calculatedVat = Helper.asCurrency(calculated * 0.18)\n            let totalShip = Helper.asCurrency(Math.round(calculated + calculatedVat));\n            return totalShip > 0.00 ? Math.max(5.00, totalShip): 0.00;\n        } else return 0.00;\n    }\n\n    async setDispatcher() {\n        let api = new Dispatcher(this.constructorParams);\n        let orders = await this.orderapi.getFromShopcard(this.shopcard);\n        var self = this;\n        for (let o in this.shopcard.shipment) {\n            if (true) {\n                let order = orders.find(oo => oo.butcherid == parseInt(o))\n                let dispatch = await api.bestDispatcher(parseInt(o), {\n                    level1Id: this.shopcard.address.level1Id,\n                    level2Id: this.shopcard.address.level2Id,\n                    level3Id: this.shopcard.address.level3Id\n                }, order);\n                if (dispatch && !dispatch.takeOnly) {\n                    this.shopcard.shipment[o].dispatcher = {\n                        id: dispatch.id,\n                        feeOffer: dispatch.feeOffer,\n                        name: dispatch.name,\n                        fee: dispatch.fee,\n                        totalForFree: dispatch.totalForFree,\n                        type: dispatch.type,\n                        min: dispatch.min,\n                        takeOnly: dispatch.takeOnly,\n                        location: dispatch.butcher ? <any>dispatch.butcher.location : null,\n                        calculateCostForCustomer: function(shipment) {\n                            return self.calculateCostForCustomer(shipment, order)\n                        }\n                    }\n                    if (dispatch.min > this.shopcard.butchers[o].subTotal) {\n                        this.shopcard.shipment[o].howTo = 'ship';\n                    }\n                    else if (dispatch.takeOnly) {\n                        this.shopcard.shipment[o].howTo = 'take';\n                    }\n                    else if (this.shopcard.shipment[o].howTo == 'unset') {\n                        this.shopcard.shipment[o].howTo = 'ship'\n                    }\n                } else {\n                    this.shopcard.shipment[o].dispatcher = null;\n                    this.shopcard.shipment[o].howTo = 'take'\n                }\n            }\n        }\n    }\n\n    async saveadresTakeRoute() {\n        this.shopcard = await ShopCard.createFromRequest(this.req);\n        this.shopcard.address.name = this.req.body.name;\n        this.shopcard.address.email = this.req.body.email;\n        this.shopcard.address.phone = this.req.body.phone;\n        await this.setDispatcher();\n        await this.shopcard.saveToRequest(this.req);\n        await this.getOrderSummary();\n        this.renderPage(\"pages/checkout.payment.ejs\");\n    }\n\n\n\n    async saveadresRoute() {\n        this.shopcard = await ShopCard.createFromRequest(this.req);\n        this.shopcard.address.name = this.req.body.name;\n        this.shopcard.address.email = this.req.body.email;\n        this.shopcard.address.phone = this.req.body.phone;\n        this.shopcard.address.adres = this.req.body.address;\n        this.shopcard.address.kat = this.req.body.kat;\n        this.shopcard.address.daire = this.req.body.daire;\n        this.shopcard.address.bina = this.req.body.bina;\n        this.shopcard.address.addresstarif = this.req.body.addresstarif;\n        if (this.req.body.lat && this.req.body.long && (parseFloat(this.req.body.lat) > 0) && (parseFloat(this.req.body.long) > 0)) {\n            this.shopcard.address.location = {\n                type: 'Point',\n                coordinates: [parseFloat(this.req.body.lat), parseFloat(this.req.body.long)]\n            }\n            this.shopcard.address.accuracy = parseFloat(this.req.body.accuracy)\n        } else this.shopcard.address.location = null;\n        if (this.req.body.geolat && this.req.body.geolong && (parseFloat(this.req.body.geolat) > 0) && (parseFloat(this.req.body.geolong) > 0)) {\n            this.shopcard.address.geolocation = {\n                type: 'Point',\n                coordinates: [parseFloat(this.req.body.geolat), parseFloat(this.req.body.geolong)]\n            }\n            this.shopcard.address.geolocationType = this.req.body.geolocationtype;\n        } else this.shopcard.address.geolocation = null;\n        await this.setDispatcher();\n        await this.shopcard.saveToRequest(this.req);\n        await this.getOrderSummary()\n        this.renderPage(\"pages/checkout.payment.ejs\");\n    }\n\n\n    async shipViewRoute() {\n        this.shopcard = await ShopCard.createFromRequest(this.req);\n        await this.setDispatcher();\n        await this.shopcard.saveToRequest(this.req);\n        if (this.shopcard.getOrderType() == 'kurban') {\n            this.viewRoute()\n        } else this.renderPage(\"pages/checkout.ship.ejs\");\n    }\n\n    fillDefaultAddress() {\n        this.shopcard.address.name = this.req.user.name;\n        this.shopcard.address.email = this.req.user.email;\n        this.shopcard.address.phone = this.req.user.mphone;\n        this.shopcard.address.adres = this.shopcard.address.adres || this.req.user.lastAddress;\n        this.shopcard.address.bina = this.shopcard.address.bina || this.req.user.lastBina;\n        this.shopcard.address.addresstarif = this.shopcard.address.addresstarif || this.req.user.lastTarif;\n        this.shopcard.address.kat = this.shopcard.address.kat || this.req.user.lastKat;\n        this.shopcard.address.daire = this.shopcard.address.daire || this.req.user.lastDaire;\n        this.shopcard.address.geolocationType = this.shopcard.address.geolocationType || this.req.user.lastLocationType;\n        this.shopcard.address.geolocation = this.shopcard.address.geolocation || this.req.user.lastLocation;    \n\n        // if (this.req.prefAddr && this.req.user.lastLevel3Id && this.req.prefAddr.level3Id != this.req.user.lastLevel3Id) {\n        //     this.shopcard.address.geolocationType = \"UNKNOWN\"\n        //     this.shopcard.address.geolocation = null;\n    \n        // } else {\n\n        // }\n    }\n\n    async saveshipRoute() {\n        this.shopcard = await ShopCard.createFromRequest(this.req);\n        await this.setDispatcher();\n        let needAddress = false;\n        for (let k in this.shopcard.butchers) {\n            let butcher = this.shopcard.butchers[k];\n            this.shopcard.shipment[k].type = this.req.body[`shipping-method${k}`];\n            this.shopcard.shipment[k].dispatcher && (this.shopcard.shipment[k].howTo = this.req.body[`howto${k}`]);\n            needAddress = !needAddress ? (this.shopcard.shipment[k].howTo == 'ship') : true;\n            // this.shopcard.shipment[k].desc = ShipmentTypeDesc[this.shopcard.shipment[k].type];\n            // this.shopcard.shipment[k].howToDesc = ShipmentHowToDesc[this.shopcard.shipment[k].howTo];\n            this.shopcard.shipment[k].informMe = this.req.body[`informme${k}`] == 'on';\n\n            if (this.shopcard.shipment[k].type == 'plan') {\n                this.shopcard.shipment[k].days = [this.req.body[`planday${k}`]];\n                this.shopcard.shipment[k].hours = [this.req.body[`plantime${k}`]];\n                this.shopcard.shipment[k].daysText = [Shipment.availableDays()[this.req.body[`planday${k}`]]];\n                this.shopcard.shipment[k].hoursText = [this.shipmentHours[parseInt(this.req.body[`plantime${k}`])]];\n            } else if (this.shopcard.shipment[k].type == 'sameday') {\n                this.shopcard.shipment[k].days = [Helper.Now().toDateString()];\n                this.shopcard.shipment[k].hours = [this.req.body[`samedaytime${k}`]];\n                this.shopcard.shipment[k].daysText = ['Bugün - ' + Helper.formatDate(Helper.Now())];\n                this.shopcard.shipment[k].hoursText = [this.shipmentHours[parseInt(this.req.body[`samedaytime${k}`])]];\n            }\n        }\n        this.shopcard.calculateShippingCosts();\n        this.fillDefaultAddress();\n        await this.shopcard.saveToRequest(this.req);\n        //this.renderPage(\"pages/checkout.adres.ejs\")\n        needAddress ? this.renderPage(\"pages/checkout.adres.ejs\") : this.renderPage(\"pages/checkout.adres-take.ejs\");\n    }\n\n    async loadButchers() {\n        this.Butchers = this.Butchers || await ButcherModel.findAll({\n            include: [{\n                model: Area,\n                all: true,\n                as: \"areaLevel1Id\"\n\n            }], where: { id: Object.keys(this.shopcard.butchers) }\n        });\n    }\n\n\n    async paymentViewRoute() {\n        this.shopcard = await ShopCard.createFromRequest(this.req);\n        await this.getOrderSummary();\n        this.renderPage(\"pages/checkout.payment.ejs\");\n    }\n\n    constructor(reqp?: IRequestParams) {\n        super(reqp);\n        this.puanCalculator = new PuanCalculator();\n        this.orderapi = new OrderApi(this.constructorParams)\n    }\n\n\n    async savepaymentRoute() {\n        this.shopcard = await ShopCard.createFromRequest(this.req);\n        for (let k in this.shopcard.butchers) {\n            let butcher = this.shopcard.butchers[k];\n            this.shopcard.payment[k].type = this.req.body[`paymentmethod${k}`];\n            this.shopcard.payment[k].desc = PaymentTypeDesc[this.shopcard.payment[k].type];\n            this.shopcard.shipment[k].nointeraction = this.req.body[`nointeraction${k}`] == \"on\";\n        }\n        this.shopcard.arrangeButchers();\n        await this.setDispatcher();\n        this.shopcard.calculateShippingCosts();\n        await this.shopcard.saveToRequest(this.req);\n        await this.getOrderSummary();\n        this.renderPage(\"pages/checkout.review.ejs\");\n    }\n\n\n    async reviewViewRoute(userMessage?: any) {\n        this.shopcard = await ShopCard.createFromRequest(this.req);\n        this.shopcard.arrangeButchers();        \n        await this.setDispatcher();\n        this.shopcard.calculateShippingCosts();\n        await this.shopcard.saveToRequest(this.req);\n        await this.getOrderSummary();\n        this.renderPage(\"pages/checkout.review.ejs\", userMessage);\n    }\n\n\n    async savereviewRoute() {\n        this.shopcard = await ShopCard.createFromRequest(this.req);\n        await this.setDispatcher();\n        this.shopcard.calculateShippingCosts();\n        try {\n            let api = new OrderApi(this.constructorParams);\n            let orders = await api.create(this.shopcard);\n            await ShopCard.empty(this.req);\n            // if (orders.length == 1 && orders[0].paymentType == 'onlinepayment') {\n            //     this.res.redirect(`/user/orders/${orders[0].ordernum}?new=1`)\n            // }\n            // else \n\n            this.res.render(\"pages/checkout.complete.ejs\", this.viewData({\n                orders: orders,\n\n            }));\n        } catch (err) {\n            await this.reviewViewRoute({ _usrmsg: { text: err.message || err.errorMessage } })\n        }\n    }\n\n    static SetRoutes(router: express.Router) {\n        router.get(\"/alisveris-sepetim\", Route.BindRequest(Route.prototype.viewRoute));\n        router.get(\"/alisveris-sepetim/adres\", Route.BindRequest(Route.prototype.adresViewRoute));\n        router.post(\"/alisveris-sepetim/savecard\", Route.BindRequest(Route.prototype.savecardRoute));\n        router.post(\"/alisveris-sepetim/saveadres\", Route.BindRequest(Route.prototype.saveadresRoute));\n        router.post(\"/alisveris-sepetim/saveadrestake\", Route.BindRequest(Route.prototype.saveadresTakeRoute));\n\n\n        router.get(\"/alisveris-sepetim/ship\", Route.BindRequest(Route.prototype.shipViewRoute));\n        router.post(\"/alisveris-sepetim/saveship\", Route.BindRequest(Route.prototype.saveshipRoute));\n        router.get(\"/alisveris-sepetim/payment\", Route.BindRequest(Route.prototype.paymentViewRoute));\n        router.post(\"/alisveris-sepetim/savepayment\", Route.BindRequest(Route.prototype.savepaymentRoute));\n        router.get(\"/alisveris-sepetim/review\", Route.BindRequest(Route.prototype.reviewViewRoute));\n        router.post(\"/alisveris-sepetim/savereview\", Route.BindRequest(Route.prototype.savereviewRoute));\n\n\n    }\n}"],"sourceRoot":"../../src/"}