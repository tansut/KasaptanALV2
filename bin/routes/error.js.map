{"version":3,"sources":["../src/routes/error.ts"],"names":[],"mappings":";;AAAA,0CAAsD;AAetD,sCAAwC;AAExC,IAAI,QAAQ,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACxC,IAAI,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAA;AAEvC,MAAqB,KAAM,SAAQ,mBAAU;IAEzC,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,GAAG,GAAG;QAC9B,IAAI,OAAO,GAAG,GAAG,YAAY,gBAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAY,GAAG,CAAC;QAE/D,oIAAoI;QACpI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;QACvB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC;YAChC,KAAK,EAAE,GAAG;YACV,IAAI,EAAE,IAAI;SACb,CAAC,CAAC,CAAA;IACP,CAAC;IAGD,MAAM,CAAC,SAAS,CAAC,MAAsB;IAEvC,CAAC;CACJ;AAjBD,wBAiBC","file":"error.js","sourcesContent":["import { ApiRouter, ViewRouter } from '../lib/router';\nimport * as express from \"express\";\nimport * as maps from \"@google/maps\"\nimport ButcherModel from '../db/models/butcher';\nimport moment = require('moment');\nimport { Auth } from '../lib/common';\nimport AreaModel from '../db/models/area';\nimport Helper from '../lib/helper';\nimport Area from '../db/models/area';\nimport Category from '../db/models/category';\nimport Content from '../db/models/content';\nimport config from '../config';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport { readFileSync } from 'fs';\nimport { HttpError } from '../lib/http';\nimport email from '../lib/email';\nlet ellipsis = require('text-ellipsis');\nvar MarkdownIt = require('markdown-it')\n\nexport default class Route extends ViewRouter {\n\n    renderPage(err, page, status = 500) {\n        let httpErr = err instanceof HttpError ? null : <HttpError>err;\n\n        //this.res.status(httpErr && httpErr.statusCode ? httpErr.statusCode : 500).send({ error: httpErr ? httpErr.message : err.message })\n        this.res.status(status)\n        this.res.render(page, this.viewData({\n            error: err,\n            JSON: JSON\n        }))\n    }\n\n\n    static SetRoutes(router: express.Router) {\n\n    }\n}"],"sourceRoot":"../../src/"}