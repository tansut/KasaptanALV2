{"version":3,"sources":["../src/routes/butcherfeecalculator.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,0CAAsD;AAKtD,0CAAqC;AAWrC,8DAA2E;AAC3E,IAAI,QAAQ,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACxC,IAAI,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAA;AAEvC,MAAqB,KAAM,SAAQ,mBAAU;IAIzC,UAAU,CAAC,MAAW,SAAS;QAC3B,IAAI,CAAC,QAAQ,CAAC,iCAAiC,EAAE;YAC7C,SAAS,EAAE,yBAAyB;SACvC,CAAC,CAAA;IACN,CAAC;IAQK,SAAS;;YACX,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE;gBAClE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAe,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAc,CAAC,CAAC,CAAA;aAC7G;;gBACI,IAAI,CAAC,UAAU,EAAE,CAAC;QAC3B,CAAC;KAAA;IAGK,cAAc,CAAC,aAAqB,IAAI,EAAE,gBAAwB,IAAI;;YAEpE,IAAI,KAAK,GAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC;YAChE,IAAI,QAAQ,GAAG,aAAa,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/D,IAAI,IAAI,GAAG,IAAI,kCAAe,CAAC,QAAQ,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;YAE3D,IAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC;KAAA;IAID,MAAM,CAAC,SAAS,CAAC,MAAsB;QACnC,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;QAC3E,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC;IACrF,CAAC;CACJ;AAxBG;IADC,aAAI,CAAC,SAAS,EAAE;;;;sCAMhB;AAGD;IADC,aAAI,CAAC,SAAS,EAAE;;;;2CAShB;AAhCL,wBAwCC","file":"butcherfeecalculator.js","sourcesContent":["import { ApiRouter, ViewRouter } from '../lib/router';\nimport * as express from \"express\";\nimport * as maps from \"@google/maps\"\nimport ButcherModel from '../db/models/butcher';\nimport moment = require('moment');\nimport { Auth } from '../lib/common';\nimport AreaModel from '../db/models/area';\nimport Helper from '../lib/helper';\nimport Area from '../db/models/area';\nimport Category from '../db/models/category';\nimport Content from '../db/models/content';\nimport config from '../config';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport { readFileSync } from 'fs';\nimport UserRoute from './api/user';\nimport { ComissionResult, ComissionHelper } from '../lib/commissionHelper';\nlet ellipsis = require('text-ellipsis');\nvar MarkdownIt = require('markdown-it')\n\nexport default class Route extends ViewRouter {\n    feeResult: ComissionResult;\n\n\n    renderPage(msg: any = undefined) {        \n        this.sendView(`pages/butcher.feecalculator.ejs`, {\n            pageTitle: 'Komisyon Hesap Makinesi'\n        })\n    }\n\n\n\n\n\n\n    @Auth.Anonymous()\n    async viewRoute() {\n        if (this.req.query.go && this.req.query.total && this.req.query.rate) {\n            this.calculateRoute(parseFloat(this.req.query.total as string), parseFloat(this.req.query.rate as string))\n        }\n        else this.renderPage();\n    }\n\n    @Auth.Anonymous()\n    async calculateRoute(totalSales: number = 0.00, ratePercParam: number = 0.00) {\n        \n            let total =  parseFloat(this.req.body.salesTotal) || totalSales;\n            let ratePerc = ratePercParam || parseFloat(this.req.body.rate);\n            let calc = new ComissionHelper(ratePerc / 100, 0);\n            this.feeResult = calc.calculateButcherComission(total);\n        \n        this.renderPage();\n    }\n\n\n\n    static SetRoutes(router: express.Router) {\n        router.get(\"/gelir-hesapla\", Route.BindRequest(Route.prototype.viewRoute));\n        router.post(\"/gelir-hesapla\", Route.BindRequest(Route.prototype.calculateRoute));\n    }\n}"],"sourceRoot":"../../src/"}