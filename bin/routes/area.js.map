{"version":3,"sources":["../src/routes/area.ts"],"names":[],"mappings":"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","file":"area.js","sourcesContent":["import { ApiRouter, ViewRouter } from '../lib/router';\nimport * as express from \"express\";\nimport * as maps from \"@google/maps\"\nimport ButcherModel from '../db/models/butcher';\nimport moment = require('moment');\nimport { Auth } from '../lib/common';\nimport AreaModel from '../db/models/area';\nimport Helper from '../lib/helper';\nimport Area from '../db/models/area';\nimport { PreferredAddress } from '../db/models/user';\nimport Dispatcher from '../db/models/dispatcher';\nimport * as _ from \"lodash\";\nimport * as sq from 'sequelize';\n\nimport DispatcherApi from './api/dispatcher';\n\nlet ellipsis = require('text-ellipsis');\n\n\nexport default class Route extends ViewRouter {\n\n    address: PreferredAddress;\n\n    async checkSave(area: AreaModel) {\n        if (this.req.query.save) {\n            var adr: PreferredAddress = {\n                level1Id: null,\n                level2Id: null,\n                level3Id: null\n            };\n            switch (area.level) {\n                case 3: {\n                    adr.level1Id = area.parent.parentid;\n                    adr.level2Id = area.parentid;\n                    adr.level3Id = area.id;\n                    await this.req.helper.setPreferredAddress(adr, true);\n                    break;\n                }\n            }\n\n        }\n    }\n\n    async renderPage(area: AreaModel, butchers: ButcherModel[], subs?: AreaModel[]) {\n\n        this.res.render('pages/areal1.ejs', this.viewData({\n            subs: subs, ellipsis: ellipsis,\n            pageDescription: `${this.address.display} Kasaplar, KasaptanAl.com güvenli kasap kriterlerini karşılayan güvenilir kasap iş ortaklarımızdır. ${this.address.display} bölgesinden güvenle et siparişi verebilirsiniz.`,\n            pageTitle: `${this.address.display} Kasaplar | Online Kasap Alışverişi & Et Siparişi`, area: area, butchers: butchers\n        }))\n    }\n\n    @Auth.Anonymous()\n    async arealRouteOld() {\n        if (!this.req.params.area) {\n            return this.next();\n        }\n        let areaSlug = this.req.params.area;\n        let area = await AreaModel.findOne({\n            where: { slug: areaSlug }, include: [{\n                all: true\n            }]\n        });\n        if (!area) return this.next();\n        this.res.redirect('/' + areaSlug + '-kasap', 301);\n    }\n\n    @Auth.Anonymous()\n    async arealRoute(back: boolean = false) {\n        if (!this.req.params.area) {\n            return this.next();\n        }\n        let areas = this.req.params.area.split(\"-\");\n        let areaSlug = this.req.params.area;\n\n        let area = await AreaModel.findOne({\n            where: { slug: areaSlug }, include: [{\n                all: true\n            }]\n        });\n        if (!area) return this.next();\n\n        await this.checkSave(area);\n        this.address = await area.getPreferredAddress();\n\n        let butchers: ButcherModel[] = [];\n\n        let subs: AreaModel[] = [];\n\n        if (area.level == 1) {\n            let field = `areaLevel1Id`;\n            let where = (<any>{})\n            where[field] = area.id;\n            where[\"approved\"] = true;\n\n            butchers = await ButcherModel.findAll({\n                where: where,\n                order: [[\"updatedon\", \"DESC\"]],\n                include: [{\n                    all: true\n                }]\n            })\n\n            subs = await AreaModel.sequelize.query(`select * from Areas ap where ap.level=2 and ap.parentid=:id and ( ap.id in \n                (\n                SELECT distinct a.parentid FROM  Areas a where \n                (a.id in (SELECT distinct d.toareaid FROM Dispatchers d where d.toarealevel=3))\n                ) or \n                (ap.id in (SELECT distinct d.toareaid FROM Dispatchers d where d.toarealevel=2))\n                )`,\n                {\n                replacements: { id: area.id },\n\n                    type: sq.QueryTypes.SELECT,\n                    mapToModel: true,\n                })\n\n\n\n        } else {\n            let dp = new DispatcherApi(this.constructorParams);\n            let dispatchers = await dp.getButchersDispatches(this.address);\n            butchers = dispatchers.map(b => b.butcher);\n            if (butchers.length == 0 && area.level == 3) {\n                let parent = area.parent;\n                let address = await parent.getPreferredAddress();\n                dispatchers = await dp.getButchersDispatches(address);\n                butchers = dispatchers.map(b => b.butcher);\n                butchers = _.uniqBy(butchers, 'id');\n            } else if (butchers.length == 0 && area.level == 2) {\n                let children = await Area.findAll({\n                    attributes: ['id'],\n                    where: {\n                        parentid: area.id\n                    }\n                }).map(a => a.id)\n                dispatchers = await dp.getButchersDispatchesForAll(children);\n                butchers = dispatchers.map(b => b.butcher);\n                butchers = _.uniqBy(butchers, 'id');\n\n\n            }\n\n\n            if (area.level == 2) {\n                subs = await AreaModel.sequelize.query(`\n            SELECT a.* FROM  Areas a where a.parentid=:id and\n(a.id in (SELECT distinct d.toareaid FROM Dispatchers d where d.toarealevel=3))\n            `,\n                    {\n                replacements: { id: area.id },\n\n                        type: sq.QueryTypes.SELECT,\n                        mapToModel: true,\n                    })\n            }\n        }\n\n        if (this.req.query.save && butchers.length == 0) {\n            this.res.redirect('/kasap-urunleri');\n            return;\n        }\n\n        await this.renderPage(area, butchers, subs)\n    }\n\n    @Auth.Anonymous()\n    async allRoute() {\n        let where = (<any>{})\n        where[\"approved\"] = true;\n\n        let butchers = await ButcherModel.findAll({\n            where: where,\n            limit: 25,\n            order: [[\"updatedon\", \"DESC\"]],\n            include: [{\n                all: true\n            }]\n        })\n\n        let subs = await AreaModel.findAll({\n            where: {\n                level: 1,\n                status: \"active\"\n            },\n            order: [['displayOrder', 'desc']]\n        })\n\n        this.res.render('pages/butchers.ejs', this.viewData({\n\n            subs: subs, ellipsis: ellipsis,\n            pageDescription: `Kasaplar, kasaptanAl.com güvenilir kasap kriterlerini karşılayan konusunda usta kasap iş ortaklarımızdır. Güvenle online et siparişi verebilirsiniz.`,\n            pageTitle: 'Kasaplar',\n            butchers: butchers\n        }))\n    }\n\n    static SetRoutes(router: express.Router) {\n        // router.get(\"/:areal1-:areal2-:area3\", Route.BindRequest(Route.prototype.areal3Route));\n        // router.get(\"/:areal1-:areal2\", Route.BindRequest(Route.prototype.areal2Route));\n        router.get(\"/:area-kasap\", Route.BindRequest(Route.prototype.arealRoute));\n        router.get(\"/:area\", Route.BindRequest(Route.prototype.arealRouteOld));\n        router.get(\"/kasaplar\", Route.BindRequest(Route.prototype.allRoute));\n    }\n}"],"sourceRoot":"../../src/"}