{"version":3,"sources":["../src/routes/resource.ts"],"names":[],"mappings":"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","file":"resource.js","sourcesContent":["import { ApiRouter, ViewRouter } from '../lib/router';\nimport * as express from \"express\";\nimport * as maps from \"@google/maps\"\nimport ButcherModel from '../db/models/butcher';\nimport { Auth } from '../lib/common';\nimport Helper from '../lib/helper';\nimport Resource from '../db/models/resource';\nimport * as path from \"path\"\nimport * as Jimp2 from 'jimp'\nconst Jimp = <Jimp2>require('jimp');\nimport * as fs from \"fs\"\nimport moment = require('moment');\nimport { ResourceCacheItem } from '../lib/cache';\nimport config from '../config';\nimport ProductsApi from './api/product';\nimport { Op } from 'sequelize';\n\n\nexport default class Route extends ViewRouter {\n\n\n\n    sendCachedPhoto(url) {\n        //Get the image from filesystem\n        let file = path.resolve(url);\n\n        //var img = fs.readFileSync(file);\n\n        //Get some info about the file\n        var stats = fs.statSync(file);\n        var mtime = stats.mtime;\n        var size = stats.size;\n\n        //Get the if-modified-since header from the request\n        var modifiedHeader = this.req.headers[\"if-modified-since\"];\n\n        //check if if-modified-since header is the same as the mtime of the file \n        if (modifiedHeader != null) {\n            let reqModDate = new Date(this.req.headers[\"if-modified-since\"]);\n            if (reqModDate.toUTCString() == mtime.toUTCString()) {\n                //Yes: then send a 304 header without image data (will be loaded by cache)\n                console.log(\"load from cache\");\n                this.res.writeHead(304, {\n                    \"Last-Modified\": mtime.toUTCString()\n                });\n\n                this.res.end();\n                return true;\n            }\n        } else {\n            return false;\n        }\n\n    }\n\n    // sendPhoto(url, resource: Resource, thumbnail: boolean) {\n    //     return Jimp.read(path.resolve(url))\n    //         .then(image => {\n    //             let _img = image;\n    //             thumbnail ? _img = _img.quality(80).cover(500, 500) : _img;\n\n    //             return _img.getBufferAsync(\"image/jpeg\").then(buff => {\n    //                 var stats = fs.statSync(path.resolve(url));\n    //                 var mtime = stats.mtime;\n    //                 var size = stats.size;\n\n    //                 this.res.set(\"jpeg\")\n    //                 this.res.header(\"Last-Modified\", mtime.toUTCString())\n    //                 this.res.header(\"Cache-Control\", \"public\")\n    //                 this.res.header(\"Expires\", moment.utc().toString())\n\n    //                 this.res.send(new Buffer(buff))\n    //             })\n    //         }).catch(e => {\n    //             //this.res.send(path.resolve(url));\n    //             this.res.sendStatus(404);\n    //         })\n\n\n    // }\n\n    async sendDefaultFile(file: string) {\n        return this.sendFile(file).catch(e => this.res.sendStatus(404))\n    }\n\n    async sendResource(resource: ResourceCacheItem, thumbnail: boolean, defaultPath: string) {\n        let pathprefix = resource ? resource.folder : \"\";\n        if (!resource) {\n            if (defaultPath) {\n                return this.sendDefaultFile(defaultPath)\n            } else return this.next();\n        }\n        //let filePath = thumbnail ? `${this.publicDir}${pathprefix}/${resource.thumbnailUrl}` : `${this.publicDir}${pathprefix}/${resource.contentUrl}`\n        let filePath = thumbnail ? `${pathprefix}/${resource.thumbnailUrl}` : `${pathprefix}/${resource.contentUrl}`\n\n\n        return this.res.redirect(`http://static.kasaptanal.com/${filePath}`);\n\n        //if (config.nodeenv == 'developmen')\n\n        //return this.sendFile(path.resolve(filePath), false).catch(e => { return defaultPath ? this.sendDefaultFile(defaultPath) : Promise.reject(e) })\n    }\n\n    @Auth.Anonymous()\n    async viewRoute() {\n        if (!this.req.params.id) return this.next();\n        let id = parseInt(this.req.params.id);\n        let resource = await Resource.findByPk(id);\n        return this.sendResource(resource, this.req.query.thumbnail ? true : false, null)\n    }\n\n\n    @Auth.Anonymous()\n    async fillSlugs() {\n        let resources = await Resource.findAll({\n            where: {\n                type: ['product-videos', 'product-photos'],\n                tag1: {\n                    [Op.or]: [{\n                        [Op.like]: '%yemek%'\n    \n                    }, { [Op.like]: '%tarif%' }]\n                }\n                ,\n                title:\n                {\n                    [Op.ne]: null\n                },\n                slug:\n                {\n                    [Op.eq]: null\n                }\n            }\n        })\n\n        let result = \"\"\n\n        for(let i = 0; i < resources.length;i++) {\n            if (resources[i].title && !resources[i].slug) {\n                (resources[i].slug = Helper.slugify(resources[i].title));\n                try {\n                    await resources[i].save();\n    \n                } catch(err) {\n                    result += err.message;\n                }\n            }\n        }\n\n        this.res && this.res.send(result)\n    }\n\n    @Auth.Anonymous()\n    async viewTarifFoodRoute() {\n        if (!this.req.params.item) {\n            return this.next();\n        }\n\n\n        let where = {\n            type: ['product-videos', 'product-photos'],\n            tag1: {\n                [Op.or]: [{\n                    [Op.like]: '%yemek%'\n\n                }, { [Op.like]: '%tarif%' }]\n            }\n        }\n\n        if (isNaN(parseInt(this.req.params.item))) where['slug'] = this.req.params.item;\n        else where['id'] = parseInt(this.req.params.item)\n\n        let resources = await new ProductsApi(this.constructorParams).getResources(where, null);\n        if (resources.length == 0) return this.next();\n        let resource = resources[0];\n\n        var products = [resource.product].concat(resource.otherProducts);\n\n        var defaultDesc = resource.tag1 ?\n        (resource.tag1.includes('tarif') ? `Nasıl yapılır tarif videosu`:``):\n        \"\";\n      \n        let pageDesc = resource.tag1.includes('tarif') ?\n         `${resource.title} yapmak için ${products.map(p=>p.name).join(', ')} ${products.length == 1 ? 'ürünümüzü':'ürünlerimizi'} şimdi sipariş verin, kapınıza gelsin. ${resource.title} en kısa ve net tarifi kasaptanAl.com'da!`:\n         `${resource.title} yapmak için ${products.map(p=>p.name).join(', ')} uygun etlerdendir. En lezzetli halleriyle kasaptanAl.com'dan şimdi sipariş verin, kapınıza gelsin!`\n\n        let thumbnail = resource.contentType == 'video-youtube' ? (resource.thumbnailUrl ? resource.getThumbnailFileUrl(): null): resource.getThumbnailFileUrl();\n\n\n        \n        this.res.render('pages/food-tarif-view.ejs', this.viewData({\n            resource: resource,\n            products: products,\n            pageThumbnail: thumbnail,\n            defaultDesc: defaultDesc,\n            pageTitle: resource.tag1.includes('tarif') ? `${resource.title} en kısa ve net tarifi`: `${resource.title} uygun et ve malzemeler`,\n            pageDescription: pageDesc\n        }))\n    }\n\n\n    static SetRoutes(router: express.Router) {\n        router.get(\"/resource/fill\", Route.BindRequest(Route.prototype.fillSlugs));\n        router.get(\"/resource/:id\", Route.BindRequest(Route.prototype.viewRoute));\n        //router.get(\"/et-yemek-tarifleri/:item\", Route.BindRequest(Route.prototype.viewTarifFoodRoute));\n        router.get(\"/et-yemekleri/:item\", Route.BindRequest(Route.prototype.viewTarifFoodRoute));\n    }\n}"],"sourceRoot":"../../src/"}