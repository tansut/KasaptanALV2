{"version":3,"sources":["../src/routes/api/order.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,6CAA4D;AAC5D,6CAA6C;AAG7C,iDAAyD;AACzD,+CAAwC;AACxC,2CAAoC;AACpC,oDAAiD;AACjD,2DAAoD;AACpD,kDAAgE;AAChE,qDAA8C;AAC9C,+DAAwD;AACxD,qDAA8C;AAC9C,wCAAoC;AACpC,4CAA0C;AAE1C,8CAAkC;AAClC,uCAAoC;AACpC,kDAAoE;AACpE,6CAAsC;AACtC,6DAAiI;AACjI,8CAAiG;AACjG,yCAAkC;AAClC,iEAA4D;AAE5D,yCAA+B;AAG/B,MAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,4BAA4B,CAAC,CAAA;AAEjE,MAAqB,KAAM,SAAQ,kBAAS;IAElC,sBAAsB,CAAC,CAAQ;;YACjC,IAAI,IAAI,GAAG;gBACP,iBAAO,CAAC,YAAY,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;aAC5F,CAAA;YACD,IAAI,QAAQ,GAAG,MAAM,sBAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7C,OAAO,QAAQ,CAAC;QACpB,CAAC;KAAA;IAEK,6BAA6B,CAAC,CAAQ;;YACxC,IAAI,IAAI,GAAG;gBACP,iBAAO,CAAC,YAAY,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;aAC5F,CAAA;YACD,IAAI,QAAQ,GAAG,MAAM,sBAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAChD,OAAO,QAAQ,CAAC;QACpB,CAAC;KAAA;IAEK,uBAAuB,CAAC,CAAQ;;YAClC,IAAI,IAAI,GAAG;gBACP,iBAAO,CAAC,YAAY,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;gBAC3E,iBAAO,CAAC,YAAY,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;gBAC3E,iBAAO,CAAC,YAAY,CAAC,qBAAqB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;aAC5E,CAAA;YACD,IAAI,QAAQ,GAAG,MAAM,sBAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7C,CAAC,CAAC,mBAAmB,GAAG,QAAQ,CAAC;YACjC,OAAO,QAAQ,CAAC;QAEpB,CAAC;KAAA;IAEK,4BAA4B,CAAC,CAAQ;;YAEvC,IAAI,IAAI,GAAG;gBACP,iBAAO,CAAC,YAAY,CAAC,iCAAiC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACvF,iBAAO,CAAC,YAAY,CAAC,iCAAiC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;aAC1F,CAAA;YAED,IAAI,QAAQ,GAAG,MAAM,sBAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7C,CAAC,CAAC,wBAAwB,GAAG,QAAQ,CAAC;YACtC,OAAO,QAAQ,CAAC;QAEpB,CAAC;KAAA;IAEK,sBAAsB,CAAC,CAAQ;;YACjC,IAAI,IAAI,GAAG;gBACP,iBAAO,CAAC,YAAY,CAAC,gCAAgC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACjF,iBAAO,CAAC,YAAY,CAAC,gCAAgC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;aACpF,CAAA;YACD,IAAI,QAAQ,GAAG,MAAM,sBAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7C,OAAO,QAAQ,CAAC;QACpB,CAAC;KAAA;IAEK,6BAA6B,CAAC,CAAQ;;YACxC,IAAI,IAAI,GAAG;gBACP,iBAAO,CAAC,YAAY,CAAC,gCAAgC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACjF,iBAAO,CAAC,YAAY,CAAC,gCAAgC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;aACpF,CAAA;YACD,IAAI,QAAQ,GAAG,MAAM,sBAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAChD,OAAO,QAAQ,CAAC;QACpB,CAAC;KAAA;IAGK,kBAAkB,CAAC,CAAQ;;YAC7B,IAAI,IAAI,GAAG;gBACP,iBAAO,CAAC,YAAY,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACvE,iBAAO,CAAC,YAAY,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;aACpE,CAAA;YACD,IAAI,QAAQ,GAAG,MAAM,sBAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7C,OAAO,QAAQ,CAAC;QACpB,CAAC;KAAA;IAEK,kBAAkB,CAAC,CAAQ;;YAC7B,IAAI,IAAI,GAAG;gBACP,iBAAO,CAAC,YAAY,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACvE,iBAAO,CAAC,YAAY,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;aACpE,CAAA;YACD,IAAI,QAAQ,GAAG,MAAM,sBAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAChD,OAAO,QAAQ,CAAC;QACpB,CAAC;KAAA;IAED,aAAa,CAAC,CAAQ;QAClB,IAAI,UAAU,GAAG,iBAAO,CAAC,YAAY,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;QAC9F,IAAI,UAAU,GAAG,iBAAO,CAAC,YAAY,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;QAC9F,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACzB,IAAI,CAAC,CAAC,IAAI,IAAI,UAAU,IAAI,CAAC,CAAC,IAAI,IAAI,UAAU;gBAAE,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC;QACtE,CAAC,CAAC,CAAA;QACF,OAAO,gBAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAED,0BAA0B,CAAC,CAAQ;QAC/B,IAAI,WAAW,GAAG,iBAAO,CAAC,YAAY,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;QAC/F,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACzB,IAAI,CAAC,CAAC,IAAI,IAAI,WAAW;gBAAE,KAAK,IAAI,CAAC,CAAC,MAAM,CAAC;QACjD,CAAC,CAAC,CAAA;QACF,OAAO,gBAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAED,6BAA6B,CAAC,CAAQ;QAClC,IAAI,cAAc,GAAG,iBAAO,CAAC,YAAY,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;QAClG,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACzB,IAAI,CAAC,CAAC,IAAI,IAAI,cAAc;gBAAE,KAAK,IAAI,CAAC,CAAC,MAAM,CAAC;QACpD,CAAC,CAAC,CAAA;QACF,OAAO,gBAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAGD,sBAAsB,CAAC,CAAQ;QAC3B,IAAI,WAAW,GAAG,iBAAO,CAAC,YAAY,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;QAC/F,IAAI,cAAc,GAAG,iBAAO,CAAC,YAAY,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;QAClG,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACzB,IAAI,CAAC,CAAC,IAAI,IAAI,WAAW,IAAI,CAAC,CAAC,IAAI,IAAI,cAAc;gBAAE,KAAK,IAAI,CAAC,CAAC,MAAM,CAAC;QAC7E,CAAC,CAAC,CAAA;QACF,OAAO,gBAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAED,gBAAgB,CAAC,CAAQ;QACrB,IAAI,IAAI,GAAG,iBAAO,CAAC,YAAY,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;QACxF,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACzB,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI;gBAAE,KAAK,IAAI,CAAC,CAAC,MAAM,CAAC;QAC1C,CAAC,CAAC,CAAA;QACF,OAAO,gBAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAEK,SAAS,CAAC,KAAW;;YACvB,IAAI,GAAG,GAAG,MAAM,aAAK,CAAC,OAAO,CAAC;gBAC1B,KAAK,EAAE,KAAK;gBACZ,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;gBACvB,KAAK,EAAE,GAAG;gBACV,OAAO,EAAE,CAAC;wBACN,KAAK,EAAE,iBAAO;qBACjB,EAAE;wBACC,KAAK,EAAE,iBAAS;wBAChB,OAAO,EAAE,CAAC;gCACN,KAAK,EAAE,iBAAO;gCACd,GAAG,EAAE,IAAI;6BACZ,EAAE;gCACC,KAAK,EAAE,iBAAO;gCACd,GAAG,EAAE,IAAI;6BACZ,CAAC;qBACL,CAAC;aACL,CAAC,CAAA;YACF,OAAO,GAAG,CAAC;QACf,CAAC;KAAA;IAED,mBAAmB,CAAC,CAAQ;QACxB,CAAC,CAAC,uBAAuB,GAAG,EAAE,CAAC;QAC/B,CAAC,CAAC,4BAA4B,GAAG,EAAE,CAAC;QAEpC,IAAI,WAAW,GAAG,iBAAO,CAAC,YAAY,CAAC,gCAAgC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpG,IAAI,oBAAoB,GAAG,iBAAO,CAAC,YAAY,CAAC,gCAAgC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAG7G,CAAC,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAC9B,IAAI,CAAC,CAAC,IAAI,IAAI,WAAW,EAAE;gBACvB,CAAC,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACrC;iBAAM,IAAI,CAAC,CAAC,IAAI,IAAI,oBAAoB,EAAE;gBACvC,CAAC,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;aACzC;QACL,CAAC,CAAC,CAAA;QAEF,sBAAY,CAAC,SAAS,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAA;QACjD,sBAAY,CAAC,SAAS,CAAC,CAAC,CAAC,4BAA4B,CAAC,CAAA;IAC1D,CAAC;IAEK,QAAQ,CAAC,GAAG,EAAE,aAAsB,KAAK;;YAC3C,IAAI,KAAK,GAAG,MAAM,aAAK,CAAC,OAAO,CAAC;gBAC5B,KAAK,EAAE;oBACH,QAAQ,EAAE,GAAG;iBAChB;gBACD,OAAO,EAAE,CAAC;wBACN,KAAK,EAAE,iBAAO;qBACjB,EAAE;wBACC,KAAK,EAAE,iBAAS;wBAChB,OAAO,EAAE,CAAC;gCACN,KAAK,EAAE,iBAAO;gCACd,GAAG,EAAE,IAAI;6BACZ,EAAE;gCACC,KAAK,EAAE,iBAAO;gCACd,GAAG,EAAE,IAAI;6BACZ,CAAC;qBACL,CAAC;aACL,CAAC,CAAA;YACF,KAAK,CAAC,cAAc,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;YAC5D,KAAK,CAAC,mBAAmB,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACrE,KAAK,CAAC,mBAAmB,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACrE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,UAAU,EAAE;gBACZ,KAAK,CAAC,mBAAmB,GAAG,CAAA,MAAM,aAAK,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE,uBAAe,CAAC,OAAO,EAAE,QAAQ,EAAE,EAAE,CAAC,cAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,KAAI,IAAI,CAAC;gBACjM,KAAK,CAAC,YAAY,GAAG,CAAA,MAAM,aAAK,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,KAAI,IAAI,CAAC;aACzF;YACD,OAAO,KAAK,CAAC;QACjB,CAAC;KAAA;IAEK,mBAAmB,CAAC,CAAQ,EAAE,SAA0B;;YAC1D,IAAI,GAAG,GAAG,iBAAE,CAAC,UAAU,EAAE,CAAC,WAAW,CAAC,CAAC,CAAc,EAAE,EAAE;gBACrD,OAAO,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAA;YAClD,CAAC,CAAC,CAAA;YACF,MAAM,GAAG,CAAC;QACd,CAAC;KAAA;IAEK,iBAAiB,CAAC,CAAQ,EAAE,SAA0B,EAAE,CAAe;;YACzE,IAAI,QAAQ,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,CAAC;YAC5B,IAAI,CAAC,CAAC,MAAM,IAAI,SAAS,EAAE;gBACvB,IAAI,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;iBAElE;qBAAM;oBACH,IAAI,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;wBAC/B,IAAI,OAAO,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;wBAC/C,IAAI,OAAO,GAAG,gBAAM,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;wBAC/D,IAAI,OAAO,GAAG,IAAI,EAAE;4BAChB,IAAI,EAAE,GAAG,IAAI,6BAAmB,CAAC,GAAG,CAAC,CAAC,QAAQ,SAAS,CAAC,CAAC;4BACzD,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAA;4BAC7F,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAA;4BACtF,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;yBAChB;wBACD,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;4BACjB,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;gCAChC,EAAE,CAAC,MAAM,GAAG,SAAS,CAAC;gCACtB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;6BAC7C;wBACL,CAAC,CAAC,CAAA;qBACL;yBAAM,IAAI,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;qBAExC;yBAAM;wBACH,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;4BACjB,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;gCAChC,EAAE,CAAC,MAAM,GAAG,SAAS,CAAC;gCACtB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;6BAC7C;wBACL,CAAC,CAAC,CAAA;qBACL;iBACJ;gBACD,MAAM,IAAI,CAAC,wBAAwB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;gBAC3C,CAAC,CAAC,MAAM,GAAG,SAAS,CAAC;gBACrB,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAA;aACnC;QACL,CAAC;KAAA;IAGK,uBAAuB,CAAC,EAAa,EAAE,SAA0B;;YACnE,IAAI,GAAG,GAAG,iBAAE,CAAC,UAAU,EAAE,CAAC,WAAW,CAAC,CAAC,CAAc,EAAE,EAAE;gBACrD,OAAO,IAAI,CAAC,qBAAqB,CAAC,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC,CAAA;YACvD,CAAC,CAAC,CAAA;YACF,MAAM,GAAG,CAAC;QACd,CAAC;KAAA;IAGD,qBAAqB,CAAC,EAAa,EAAE,SAA0B,EAAE,CAAe;QAC5E,IAAI,QAAQ,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,CAAC;QAC5B,IAAI,EAAE,CAAC,MAAM,IAAI,SAAS,EAAE;YACxB,IAAI,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;aAEnE;iBAAM;gBACH,IAAI,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;oBAC/B,IAAI,EAAE,GAAG,IAAI,6BAAmB,CAAC,GAAG,EAAE,CAAC,WAAW,IAAI,SAAS,EAAE,CAAC,CAAC;oBACnE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,yBAAyB,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAA;oBAC5G,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,kBAAkB,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAA;oBACrG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;iBAChB;qBAAM,IAAI,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;oBACtC,IAAI,EAAE,GAAG,IAAI,6BAAmB,CAAC,GAAG,EAAE,CAAC,WAAW,iBAAiB,CAAC,CAAC;oBACrE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,yBAAyB,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAA;oBAC5G,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,kBAAkB,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAA;oBACrG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;iBAChB;aACJ;YACD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;YACpD,EAAE,CAAC,MAAM,GAAG,SAAS,CAAC;YACtB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;SAC7C;QACD,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;IAGD,OAAO,CAAC,KAAY;QAEhB,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,QAAQ,GAAG,EAAE,CAAA;QAEjB,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;YAC5B,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;YAEzB,IAAI,OAAO,GAAG,2BAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;YAC9D,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;YAGhC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;gBACf,QAAQ,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC5B,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC5B,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC;gBAC7C,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;gBACvC,QAAQ,CAAC,EAAE,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;gBAChD,QAAQ,CAAC,EAAE,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;aACnD;iBAAM;gBACH,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACjC;YACD,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;gBACb,QAAQ,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,mBAAQ,EAAE,EAAE;oBACzC,KAAK,EAAE,IAAI,CAAC,aAAa;oBACzB,YAAY,EAAE,KAAK,CAAC,YAAY;oBAChC,IAAI,EAAE,IAAI,CAAC,YAAY;oBACvB,IAAI,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;oBACjE,KAAK,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC;oBAC1B,QAAQ,EAAE,IAAI,CAAC,gBAAgB;oBAC/B,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;oBACvE,SAAS,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC;iBACrC,CAAC,CAAC;YACP,IAAI,IAAI,CAAC,YAAY,EAAE;gBACnB,QAAQ,CAAC,EAAE,CAAC,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,oBAAU,EAAE,EAAE;oBACtD,EAAE,EAAE,IAAI,CAAC,YAAY;oBACrB,IAAI,EAAE,IAAI,CAAC,cAAc;oBACzB,IAAI,EAAE,IAAI,CAAC,cAAc;oBACzB,GAAG,EAAE,IAAI,CAAC,aAAa;oBACvB,YAAY,EAAE,IAAI,CAAC,sBAAsB;iBAC5C,CAAC,CAAA;aACL;YAED,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;gBACZ,OAAO,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,iBAAO,EAAE,EAAE;oBACvC,IAAI,EAAE,IAAI,CAAC,WAAW;oBACtB,IAAI,EAAE,IAAI,CAAC,eAAe;iBAC7B,CAAC,CAAC;QACX,CAAC,CAAC,CAAA;QAGF,OAAO;YACH,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,OAAO;YAChB,KAAK,EAAE,KAAK,CAAC,KAAK;SACrB,CAAA;IACL,CAAC;IAID,WAAW,CAAC,CAAc,EAAE,KAAY,EAAE,IAAc;QAEpD,OAAO,KAAK,CAAC,IAAI,CAAC;YACd,WAAW,EAAE,CAAC;SACjB,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YACd,IAAI,QAAQ,GAAG,EAAE,CAAC;YAClB,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAE7C,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE;gBAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBAC1B,IAAI,EAAE,GAAG,iBAAS,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAChD,EAAE,CAAC,OAAO,GAAG,KAAK,CAAC,EAAE,CAAC;gBACtB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;oBAClB,WAAW,EAAE,CAAC;iBACjB,CAAC,CAAC,CAAA;YACP,CAAC,CAAC,CAAA;YAEF,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;gBAC1B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;gBAC/C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;gBACzC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBAC3C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;gBAC7C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;gBACtD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;gBAC9D,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;gBACpD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAA;aACtC;YACD,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,EAAE;YACnB,IAAI,QAAQ,GAAG,EAAE,CAAA;YACjB,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;gBACpB,IAAI,EAAE,CAAC,YAAY,EAAE;oBACjB,QAAQ,CAAC,IAAI,CAAC,oBAAU,CAAC,MAAM,CAAC;wBAC5B,eAAe,EAAE,EAAE,CAAC,EAAE;qBACzB,EAAE;wBACC,WAAW,EAAE,CAAC;wBACd,KAAK,EAAE;4BACH,EAAE,EAAE,EAAE,CAAC,YAAY;yBACtB;qBACJ,CAAC,CAAC,CAAA;iBACN;YACL,CAAC,CAAC,CAAA;YAEF,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;QAChC,CAAC,CAAC,CAAA;IACN,CAAC;IAEK,0BAA0B,CAAC,EAAW,EAAE,WAAyB;;YACnE,IAAI,MAAM,GAA0B,EAAE,CAAC;YAEvC,IAAI,WAAW,EAAE;gBACb,IAAI,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC;gBACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAChC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;oBACd,IAAI,KAAK,GAAG,gBAAM,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;oBACvC,SAAS,GAAG,gBAAM,CAAC,UAAU,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;oBACjD,IAAI,SAAS,IAAI,IAAI,EAAE;wBACnB,IAAI,EAAE,GAAG,IAAI,6BAAmB,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,QAAQ,qCAAqC,CAAC,CAAC;wBAC/F,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAA;wBAChH,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAA;wBACvG,EAAE,CAAC,QAAQ,EAAE,CAAA;wBACb,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBACnB;iBACJ;aACJ;YACD,OAAO,MAAM,CAAC;QAClB,CAAC;KAAA;IAEK,wBAAwB,CAAC,GAA0B,EAAE,CAAe;;YACtE,IAAI,MAAM,GAAmB,EAAE,CAAC;YAChC,IAAI,CAAC,EAAE;gBACH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACjC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;oBACjB,MAAM,CAAC,IAAI,CAAC,sBAAY,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;wBAC3C,WAAW,EAAE,CAAC;qBACjB,CAAC,CAAC,CAAA;iBACN;gBACD,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;aAC7B;iBAAM;gBACH,IAAI,GAAG,GAAG,iBAAE,CAAC,UAAU,EAAE,CAAC,WAAW,CAAC,CAAC,CAAc,EAAE,EAAE;oBACrD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACjC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;wBACjB,MAAM,CAAC,IAAI,CAAC,sBAAY,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;4BAC3C,WAAW,EAAE,CAAC;yBACjB,CAAC,CAAC,CAAA;qBACN;oBACD,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;gBAC9B,CAAC,CAAC,CAAA;gBACF,MAAM,GAAG,CAAC;aACb;QACL,CAAC;KAAA;IAEK,8BAA8B,CAAC,CAAQ,EAAE,WAA0B,EAAE,CAAe;;YACtF,IAAI,QAAQ,GAAG,EAAE,CAAC;YAClB,CAAC,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;YACpC,CAAC,CAAC,WAAW,GAAG,eAAe,CAAC;YAChC,CAAC,CAAC,eAAe,GAAG,yBAAe,CAAC,aAAa,CAAC;YAClD,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;gBACjB,WAAW,EAAE,CAAC;aACjB,CAAC,CAAC,CAAC;YACJ,WAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;gBACtC,IAAI,EAAE,CAAC,MAAM,IAAI,CAAC,CAAC,QAAQ,EAAE;oBACzB,CAAC,CAAC,oBAAoB,GAAG,EAAE,CAAC,oBAAoB,CAAA;oBAChD,CAAC,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC;oBAC3B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;iBAC5C;YACL,CAAC,CAAC,CAAA;YACF,OAAO,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxD,CAAC;KAAA;IAEK,yBAAyB,CAAC,CAAQ;;YAEpC,IAAI,GAAG,GAAG,iBAAE,CAAC,UAAU,EAAE,CAAC,WAAW,CAAC,CAAC,CAAc,EAAE,EAAE;gBACrD,OAAO,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAC7C,CAAC,CAAC,CAAA;YACF,MAAM,GAAG,CAAC;QACd,CAAC;KAAA;IAEK,uBAAuB,CAAC,CAAQ,EAAE,CAAe;;YACnD,MAAM,IAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC;YAE3C,IAAI,cAAc,GAAG,CAAC,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC;YAC7E,IAAI,WAAW,GAAG,gBAAM,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,GAAG,cAAc,CAAC,MAAM,CAAC,CAAA;YAChF,IAAI,MAAM,GAAwB,IAAI,6BAAmB,CAAC,GAAG,CAAC,CAAC,QAAQ,SAAS,CAAC,CAAC,WAAW,2BAA2B,CAAC,CAAC;YAC1H,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,QAAQ,uCAAuC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAA;YAC/J,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,qBAAqB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,QAAQ,sBAAsB,CAAC,CAAC,GAAG,CAAC,gBAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;YAC/J,OAAO,IAAI,CAAC,wBAAwB,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAA;QACrD,CAAC;KAAA;IAGK,yBAAyB,CAAC,EAAW,EAAE,cAA8B,EAAE,WAA0B;;YACnG,IAAI,GAAG,GAAG,iBAAE,CAAC,UAAU,EAAE,CAAC,WAAW,CAAC,CAAC,CAAc,EAAE,EAAE;gBACrD,OAAO,IAAI,CAAC,qBAAqB,CAAC,EAAE,EAAE,cAAc,EAAE,WAAW,EAAE,CAAC,CAAC,CAAA;YACzE,CAAC,CAAC,CAAA;YACF,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBAClC,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;oBAChB,OAAO,CAAC,MAAM,CAAC,CAAA;gBACnB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;oBACb,MAAM,CAAC,GAAG,CAAC,CAAC;gBAChB,CAAC,CAAC,CAAA;YACN,CAAC,CAAC,CAAA;QACN,CAAC;KAAA;IAEK,qBAAqB,CAAC,CAAQ;;YAChC,CAAC,CAAC,mBAAmB,GAAG,CAAA,MAAM,aAAK,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC,SAAS,EAAE,MAAM,EAAE,uBAAe,CAAC,OAAO,EAAE,QAAQ,EAAE,EAAE,CAAC,cAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,KAAI,IAAI,CAAC;YACjL,CAAC,CAAC,YAAY,GAAG,CAAA,MAAM,aAAK,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,KAAI,IAAI,CAAC;QAElF,CAAC;KAAA;IAGD,mBAAmB,CAAC,CAAQ,EAAE,KAAa,EAAE,mBAA4B,KAAK;QAG1E,IAAI,UAAU,GAAG,IAAI,iCAAc,EAAE,CAAC;QACtC,IAAI,MAAM,GAAiB,EAAE,CAAC;QAE9B,IAAI,UAAU,GAAS;YAEnB,eAAe,EAAE,IAAI;YACrB,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,sBAAsB;YAC5B,IAAI,EAAE,IAAI;SAEb,CAAA;QAED,IAAI,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE;YAC5B,IAAI,CAAC,CAAC,mBAAmB,IAAI,CAAC,CAAC,SAAS,IAAI,QAAQ,EAAE;gBAClD,IAAI,cAAc,GAAG,UAAU,CAAC,qBAAqB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;gBACzE,IAAI,cAAc,GAAG,IAAI,IAAI,gBAAgB,EAAE;oBAC3C,MAAM,CAAC,IAAI,CAAC;wBACR,IAAI,EAAE,oBAAoB;wBAC1B,MAAM,EAAE,cAAc;wBACtB,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,EAAE;wBAC1B,KAAK,EAAE,wCAAwC;wBAC/C,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,SAAS,CAAC,CAAC,WAAW,+BAA+B;wBACxE,KAAK,EAAE,UAAU;qBACpB,CAAC,CAAA;iBACL;aACJ;YAED,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE;gBACtB,IAAI,WAAW,GAAG,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;gBACrD,IAAI,WAAW,GAAG,UAAU,CAAC,qBAAqB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gBACvE,IAAI,WAAW,GAAG,IAAI,IAAI,gBAAgB,EAAE;oBACxC,IAAI,WAAW,IAAI,CAAC,EAAE;wBAClB,MAAM,CAAC,IAAI,CACP;4BACI,IAAI,EAAE,SAAS;4BACf,MAAM,EAAE,WAAW;4BACnB,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,EAAE;4BAC1B,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,GAAG,uBAAuB;4BAC/C,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,SAAS,CAAC,CAAC,WAAW,qBAAqB;4BAC9D,KAAK,EAAE,WAAW;yBACrB,CACJ,CAAA;qBACJ;yBAAM;wBACH,IAAI,cAAc,GAAG,CAAC,CAAC,SAAS,IAAI,iBAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,GAAG,CAAC;wBAC9D,IAAI,SAAS,GAAG,gBAAM,CAAC,UAAU,CAAC,WAAW,GAAG,cAAc,CAAC,CAAC;wBAChE,IAAI,SAAS,GAAG,gBAAM,CAAC,UAAU,CAAC,WAAW,GAAG,SAAS,CAAC,CAAC;wBAC3D,IAAI,SAAS,GAAG,IAAI,EAAE;4BAClB,MAAM,CAAC,IAAI,CACP;gCACI,IAAI,EAAE,SAAS;gCACf,MAAM,EAAE,SAAS;gCACjB,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,EAAE;gCAC1B,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,GAAG,uBAAuB;gCAC/C,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,SAAS,CAAC,CAAC,WAAW,qBAAqB;gCAC9D,KAAK,EAAE,WAAW;6BACrB,CACJ,CAAA;yBACJ;wBACD,IAAI,SAAS,GAAG,IAAI,EAAE;4BAClB,MAAM,CAAC,IAAI,CACP;gCACI,IAAI,EAAE,oBAAoB;gCAC1B,MAAM,EAAE,SAAS;gCACjB,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,EAAE;gCAC1B,KAAK,EAAE,qCAAqC;gCAC5C,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,SAAS,CAAC,CAAC,WAAW,8BAA8B;gCACvE,KAAK,EAAE,WAAW;6BACrB,CACJ,CAAA;yBACJ;qBACJ;iBACJ;aACJ;SAIJ;QAED,wBAAwB;QACxB,0DAA0D;QAC1D,iCAAiC;QACjC,0BAA0B;QAC1B,sCAAsC;QACtC,qBAAqB;QACrB,iBAAiB;QACjB,+BAA+B;QAC/B,uBAAuB;QACvB,gBAAgB;QAChB,kCAAkC;QAClC,2FAA2F;QAC3F,sCAAsC;QACtC,wCAAwC;QACxC,mEAAmE;QACnE,gBAAgB;QAChB,4BAA4B;QAC5B,QAAQ;QACR,KAAK;QAEL,OAAO,MAAM,CAAA;IACjB,CAAC;IAGD,oBAAoB,CAAC,CAAQ,EAAE,KAAa,EAAE,cAAsB;QAChE,IAAI,MAAM,GAAwB,IAAI,6BAAmB,CAAC,GAAG,CAAC,CAAC,QAAQ,SAAS,CAAC,CAAC,WAAW,wBAAwB,CAAC,CAAC;QAEvH,IAAI,UAAU,GAAG,CAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,SAAS,GAAG,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAEtC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,iCAAiC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,QAAQ,sCAAsC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAA;QACzK,IAAI,SAAS,GAAG,IAAI,EAAE;YAClB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,iCAAiC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,QAAQ,+BAA+B,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAA;SACpK;QACD,IAAI,cAAc,GAAG,IAAI,EAAE;YACvB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,QAAQ,8DAA8D,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAA;SAEjK;QACD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,QAAQ,SAAS,CAAC,CAAC,WAAW,eAAe,CAAC,CAAC,GAAG,CAAC,UAAU,GAAG,SAAS,GAAG,cAAc,CAAC,CAAC,CAAA;QAElK,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,4EAA4E;IAC5E,6HAA6H;IAE7H,iKAAiK;IACjK,uJAAuJ;IAEvJ,qBAAqB;IACrB,QAAQ;IAER,eAAe,CAAC,CAAQ,EAAE,KAAa;QAEnC,IAAI,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAC/C,IAAI,MAAM,GAAwB,IAAI,6BAAmB,CAAC,GAAG,CAAC,CAAC,QAAQ,SAAS,CAAC,CAAC,WAAW,wBAAwB,CAAC,CAAC;QAEvH,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACf,IAAI,EAAE,CAAC,MAAM,GAAG,IAAI,EAAE;gBAClB,IAAI,EAAE,CAAC,IAAI,IAAI,SAAS,EAAE;oBACtB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;oBACvH,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;iBAClI;gBACD,IAAI,EAAE,CAAC,IAAI,IAAI,SAAS,EAAE;oBACtB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,wBAAwB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;oBAC/G,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,gCAAgC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;iBAC1H;gBACD,IAAI,EAAE,CAAC,IAAI,IAAI,oBAAoB,EAAE;oBACjC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,wBAAwB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;oBAC/G,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,gCAAgC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;iBAC1H;aACJ;QACL,CAAC,CAAC,CAAA;QAEF,OAAO,MAAM,CAAC;IAGlB,CAAC;IAED,gBAAgB,CAAC,CAAQ,EAAE,SAAiB;QACxC,CAAC,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC3B,CAAC,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC3B,CAAC,CAAC,uBAAuB,GAAG,EAAE,CAAC;QAC/B,CAAC,CAAC,4BAA4B,GAAG,EAAE,CAAC;QAEpC,IAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC;QAE3D,IAAI,WAAW,GAAG,iBAAO,CAAC,YAAY,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC5G,IAAI,WAAW,GAAG,iBAAO,CAAC,YAAY,CAAC,gCAAgC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpG,IAAI,oBAAoB,GAAG,iBAAO,CAAC,YAAY,CAAC,gCAAgC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE7G,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACjB,IAAI,GAAG,GAAG,sBAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,CAAC,IAAI,IAAI,WAAW,EAAE;gBACvB,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;aAClC;iBAAM,IAAI,CAAC,CAAC,IAAI,IAAI,WAAW,EAAE;gBAC9B,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACnC;iBAAM,IAAI,CAAC,CAAC,IAAI,IAAI,oBAAoB,EAAE;gBACvC,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACnC;QACL,CAAC,CAAC,CAAA;QAEF,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;QAE5B,sBAAY,CAAC,SAAS,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAA;QAC7C,sBAAY,CAAC,SAAS,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAA;IAEjD,CAAC;IAKK,qBAAqB,CAAC,CAAQ,EAAE,KAAa;;YAC/C,IAAI,GAAG,GAAG,iBAAE,CAAC,UAAU,EAAE,CAAC,WAAW,CAAC,CAAC,CAAc,EAAE,EAAE;gBACrD,OAAO,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAA;YAC9C,CAAC,CAAC,CAAA;YACF,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBAClC,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;oBAChB,OAAO,CAAC,MAAM,CAAC,CAAA;gBACnB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;oBACb,MAAM,CAAC,GAAG,CAAC,CAAC;gBAChB,CAAC,CAAC,CAAA;YACN,CAAC,CAAC,CAAA;QACN,CAAC;KAAA;IAED,2EAA2E;IAC3E,2CAA2C;IAC3C,yCAAyC;IACzC,yDAAyD;IACzD,8BAA8B;IAC9B,yEAAyE;IACzE,mCAAmC;IACnC,IAAI;IAGJ,oDAAoD;IACpD,kEAAkE;IAClE,4CAA4C;IAC5C,SAAS;IACT,+CAA+C;IAC/C,iCAAiC;IACjC,8BAA8B;IAC9B,8BAA8B;IAC9B,2BAA2B;IAC3B,aAAa;IACb,SAAS;IACT,IAAI;IAME,6BAA6B,CAAC,CAAQ,EAAE,cAA8B,EAAE,WAA0B,EAAE,CAAe;;YACrH,IAAI,QAAQ,GAAG,EAAE,CAAC;YAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1D,IAAI,EAAE,GAAG,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,EAAE,CAAC,MAAM,IAAI,CAAC,CAAC,QAAQ,EAAE;oBACzB,IAAI,GAAG,GAAG,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC;oBACrE,IAAI,GAAG,CAAC,mBAAmB,EAAE;wBACzB,IAAI,MAAM,GAAwB,IAAI,6BAAmB,CAAC,GAAG,CAAC,CAAC,QAAQ,SAAS,CAAC,CAAC,WAAW,wBAAwB,CAAC,CAAC;wBACvH,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,QAAQ,6BAA6B,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAA;wBACrJ,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,qBAAqB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,QAAQ,kCAAkC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAA;wBACpK,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;qBACzE;iBACJ;aACJ;YACD,OAAO,QAAQ,CAAC;QACpB,CAAC;KAAA;IAEK,iBAAiB,CAAC,CAAQ,EAAE,KAAa,EAAE,CAAe;;YAC5D,IAAI,GAAG,GAA0B,EAAE,CAAC;YACpC,IAAI,QAAQ,GAAmB,EAAE,CAAA;YAEjC,IAAI,SAAS,GAAG,QAAQ,CAAC;YAEzB,IAAI,EAAE,GAAG,IAAI,6BAAmB,CAAC,GAAG,CAAC,CAAC,QAAQ,cAAc,SAAS,EAAE,CAAC,CAAC;YACzE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAA;YAChG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;YAErF,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAEb,IAAI,WAAW,GAAG,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAA;YACpD,IAAI,cAAc,GAAG,IAAI,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC;YAC3D,IAAI,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;YAE5C,IAAI,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;YACzD,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;YACvC,IAAI,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAE,WAAW,GAAG,YAAY,EAAE,cAAc,CAAC,CAAC;YAGjG,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACvB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAE5B,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;YACpB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;gBACjB,WAAW,EAAE,CAAC;aACjB,CAAC,CAAC,CAAA;YAEH,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAClE,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;QAChC,CAAC;KAAA;IAGK,qBAAqB,CAAC,EAAW,EAAE,cAA8B,EAAE,WAA0B,EAAE,CAAe;;YAEhH,IAAI,GAAG,GAA0B,EAAE,CAAC;YACpC,IAAI,QAAQ,GAAmB,EAAE,CAAA;YAEjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAChC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBACd,IAAI,EAAE,GAAG,IAAI,6BAAmB,CAAC,GAAG,CAAC,CAAC,QAAQ,0BAA0B,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC;gBACjG,IAAI,CAAC,CAAC,WAAW,IAAI,mBAAW,CAAC,OAAO,EAAE;oBACtC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAA;oBACjH,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAA;oBACpG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBACb,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;iBACtF;qBAAM;oBACH,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAA;oBAChH,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAA;oBACpG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBAEb,IAAI,WAAW,GAAG,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAA;oBACpD,IAAI,cAAc,GAAG,IAAI,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC;oBAC3D,IAAI,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;oBAE5C,IAAI,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;oBACzD,IAAI,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAE,WAAW,GAAG,YAAY,EAAE,cAAc,CAAC,CAAC;oBACjG,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBACvB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;oBAC5B,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;oBACnF,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC,EAAE,cAAc,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;iBACrG;aACJ;YAED,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAElE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAChC,IAAI,kBAAkB,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,kBAAkB,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC7E,IAAI,gBAAM,CAAC,OAAO,IAAI,YAAY,EAAE;oBAChC,eAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,+BAA+B,EAAE,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACnG;gBACD,IAAI,gBAAM,CAAC,OAAO,IAAI,YAAY,EAAE;oBAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAChD,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE;4BAC9B,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;4BACjD,SAAG,CAAC,IAAI,CAAC,IAAI,GAAG,gBAAM,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,gBAAM,CAAC,iBAAiB,CAAC,WAAW,CAAC,SAAS,CAAC,mCAAmC,MAAM,GAAG,EAAE,KAAK,EAAE,IAAI,iBAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAA;yBACjP;qBACJ;iBACJ;aACJ;YACD,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;QAChC,CAAC;KAAA;IAED,yBAAyB,CAAC,CAAQ;QAC9B,IAAI,EAAE,GAAG,IAAI,6BAAmB,CAAC,GAAG,CAAC,CAAC,QAAQ,mBAAmB,CAAC,CAAC;QACnE,IAAI,CAAC,CAAC,WAAW,IAAI,mBAAW,CAAC,OAAO,EAAE;YACtC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxH,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA;SACzF;aAAM;YACH,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrH,IAAI,CAAC,CAAC,aAAa,GAAG,IAAI,EAAE;gBACxB,IAAI,CAAC,CAAC,cAAc,IAAI,SAAS,EAAE;oBAC/B,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,uBAAuB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;iBACvI;;oBAAM,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,gCAAgC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;aACvJ;YACD,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,IAAI,EAAE;gBAClC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,sBAAsB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;aAE1I;YACD,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAO,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA;SACzF;QAGD,EAAE,CAAC,QAAQ,EAAE,CAAA;QAEb,OAAO,EAAE,CAAC;QAEV,OAAO;QAEP,4FAA4F;QAC5F,mFAAmF;QAGnF,2BAA2B;QAC3B,2BAA2B;QAC3B,wCAAwC;QACxC,8BAA8B;QAG9B,2DAA2D;QAC3D,6EAA6E;QAE7E,4FAA4F;QAC5F,mFAAmF;QACnF,+EAA+E;QAE/E,uFAAuF;QACvF,yGAAyG;QAEzG,+IAA+I;QAG/I,6GAA6G;QAC7G,mFAAmF;QACnF,6GAA6G;QAE7G,6GAA6G;QAC7G,6EAA6E;QAE7E,qGAAqG;QACrG,qGAAqG;QACrG,yIAAyI;QACzI,mHAAmH;QAInH,gBAAgB;QAEhB,aAAa;IACjB,CAAC;IAEK,eAAe,CAAC,IAAc;;YAChC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC7B,IAAI,OAAO,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;YACjC,IAAI,EAAE,GAAG,MAAM,cAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpD,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,cAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACtD,IAAI,MAAM,GAAG,EAAE,CAAA;YAEf,IAAI,OAAO,GAAG,qCAAwB,CAAC,WAAW,EAAE,CAAC;YACrD,IAAI,GAAG,GAAG,IAAI,iBAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YACnD,OAAO,CAAC,MAAM,GAAG,GAAG,CAAC;YAErB,KAAK,IAAI,EAAE,IAAI,QAAQ,EAAE;gBACrB,IAAI,KAAK,GAAG,MAAM,aAAK,CAAC,YAAY,CAAC,IAAI,EAAO,EAAE,CAAC,CAAC;gBACpD,KAAK,CAAC,aAAa,GAAG,OAAO,CAAC;gBAC9B,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAC/B,KAAK,CAAC,OAAO,GAAG,MAAM,iBAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAA;gBACvD,KAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;gBACtC,KAAK,CAAC,YAAY,GAAG,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,gBAAM,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC;gBAClF,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEpD,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;oBACf,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC;oBACjC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC;iBAC7B;gBACD,KAAK,CAAC,YAAY,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;gBACjC,KAAK,CAAC,cAAc,GAAG,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC;gBACrC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACtB;YAED,OAAO,MAAM,CAAC;QAClB,CAAC;KAAA;IAEK,oBAAoB,CAAC,CAAQ;;YAC/B,CAAC,CAAC,WAAW,GAAG,SAAS,CAAC;YAC1B,CAAC,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;YAEhC,IAAI,MAAM,GAAmB,EAAE,CAAC;YAChC,IAAI,GAAG,GAAG,iBAAE,CAAC,UAAU,EAAE,CAAC,WAAW,CAAC,CAAC,CAAc,EAAE,EAAE;gBACrD,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;oBACf,WAAW,EAAE,CAAC;iBACjB,CAAC,CAAC,CAAA;gBACH,IAAI,YAAY,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;gBACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;gBAC7D,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;YAC9B,CAAC,CAAC,CAAA;YAEF,MAAM,GAAG,CAAC;YAEV,OAAO,CAAC,CAAC;QACb,CAAC;KAAA;IAEK,MAAM,CAAC,IAAc;;YAEvB,IAAI,MAAM,GAAmB,EAAE,CAAC;YAEhC,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAE9C,IAAI,GAAG,GAAG,iBAAE,CAAC,UAAU,EAAE,CAAC,WAAW,CAAC,CAAC,CAAc,EAAE,EAAE;gBACrD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACpC,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;oBACnD,IAAI,YAAY,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7D,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACrB,MAAM,CAAC,IAAI,CAAC,sBAAY,CAAC,aAAa,CAAC,YAAY,EAAE;wBACjD,WAAW,EAAE,CAAC;qBACjB,CAAC,CAAC,CAAA;iBACN;gBACD,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;YAC9B,CAAC,CAAC,CAAA;YAEF,MAAM,GAAG,CAAC;YACV,IAAI,IAAI,GAAG,EAAE,CAAA;YACb,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;gBACvC,IAAI,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;gBACvB,IAAI,GAAG,GAAG,IAAI,eAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBAC/C,IAAI,OAAO,GAAG,MAAM,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACjD,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACjC,IAAI,gBAAM,CAAC,OAAO,IAAI,YAAY,EAAE;oBAChC,MAAM,eAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,oBAAoB,EAAE,mBAAmB,EAAE,IAAI,CAAC,CAAC;oBACjF,MAAM,SAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,uFAAuF,KAAK,CAAC,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,iBAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAA;oBAE3L,IAAI,kBAAkB,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAE7E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAChD,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE;4BAC9B,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,QAAQ,KAAK,CAAC,QAAQ,EAAE,CAAC;4BACjD,SAAG,CAAC,IAAI,CAAC,IAAI,GAAG,gBAAM,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,2CAA2C,MAAM,oBAAoB,KAAK,CAAC,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,iBAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAA;yBACnN;qBACJ;iBACJ;gBAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;aACrB;YAED,OAAO,IAAI,CAAC;QAChB,CAAC;KAAA;IAGK,aAAa;;YACf,IAAI,KAAK,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAE1D,IAAI,CAAC,KAAK;gBAAE,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;YAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC;KAAA;IAED,MAAM,CAAC,SAAS,CAAC,MAAsB;QACnC,wFAAwF;IAC5F,CAAC;CACJ;AA1+BD,wBA0+BC","file":"order.js","sourcesContent":["import { Auth, ProductTypeFactory } from '../../lib/common';\nimport { ApiRouter } from '../../lib/router';\nimport * as express from \"express\";\nimport { ShopCard, firstOrderDiscount } from '../../models/shopcard';\nimport { Order, OrderItem } from '../../db/models/order';\nimport Area from '../../db/models/area';\nimport email from '../../lib/email';\nimport { Shipment } from '../../models/shipment';\nimport Dispatcher from '../../db/models/dispatcher';\nimport { Payment, PaymentTypeDesc } from '../../models/payment';\nimport Butcher from '../../db/models/butcher';\nimport AccountModel from '../../db/models/accountmodel';\nimport Product from '../../db/models/product';\nimport OrderApi from '../api/order';\nimport SiteLogRoute from '../api/sitelog';\nimport { Transaction, or } from \"sequelize\";\nimport db from \"../../db/context\";\nimport { Sms } from '../../lib/sms';\nimport { AccountingOperation, Account } from '../../models/account';\nimport Helper from '../../lib/helper';\nimport { Creditcard, CreditcardPaymentFactory, PaymentTotal, PaymentRequest, PaymentResult } from '../../lib/payment/creditcard';\nimport { OrderPaymentStatus, OrderItemStatus, OrderSource, OrderType } from '../../models/order';\nimport config from '../../config';\nimport { PuanCalculator } from '../../lib/commissionHelper';\nimport { PuanResult, Puan } from '../../models/puan';\nimport { Op } from 'sequelize';\n\n\nconst orderid = require('order-id')('dkfjsdklfjsdlkg450435034.,')\n\nexport default class Route extends ApiRouter {\n\n    async getButcherPuanAccounts(o: Order) {\n        let list = [\n            Account.generateCode(\"musteri-kasap-kazanilan-puan\", [o.userId, o.butcherid, o.ordernum])\n        ]\n        let accounts = await AccountModel.list(list);\n        return accounts;\n    }\n\n    async getButcherPuanAccountsSummary(o: Order) {\n        let list = [\n            Account.generateCode(\"musteri-kasap-kazanilan-puan\", [o.userId, o.butcherid, o.ordernum])\n        ]\n        let accounts = await AccountModel.summary(list);\n        return accounts;\n    }\n\n    async fillButcherDebtAccounts(o: Order) {\n        let list = [\n            Account.generateCode(\"kasaplardan-alacaklar\", [o.butcherid, 1, o.ordernum]),\n            Account.generateCode(\"kasaplardan-alacaklar\", [o.butcherid, 2, o.ordernum]),\n            Account.generateCode(\"kasap-borc-tahakkuk\", [1, o.butcherid, o.ordernum])\n        ]\n        let accounts = await AccountModel.list(list);\n        o.butcherDeptAccounts = accounts;\n        return accounts;\n\n    }\n\n    async fillButcherComissionAccounts(o: Order) {\n\n        let list = [\n            Account.generateCode(\"kasaplardan-kesilen-komisyonlar\", [100, o.butcherid, o.ordernum]),\n            Account.generateCode(\"kasaplardan-kesilen-komisyonlar\", [200, o.butcherid, o.ordernum])            \n        ]\n        \n        let accounts = await AccountModel.list(list);\n        o.butcherComissiomAccounts = accounts;\n        return accounts;\n\n    }    \n\n    async getKalittePuanAccounts(o: Order) {\n        let list = [\n            Account.generateCode(\"musteri-kalitte-kazanilan-puan\", [o.userId, 1, o.ordernum]),\n            Account.generateCode(\"musteri-kalitte-kazanilan-puan\", [o.userId, 2, o.ordernum])\n        ]\n        let accounts = await AccountModel.list(list);\n        return accounts;\n    }\n\n    async getKalittePuanAccountsSummary(o: Order) {\n        let list = [\n            Account.generateCode(\"musteri-kalitte-kazanilan-puan\", [o.userId, 1, o.ordernum]),\n            Account.generateCode(\"musteri-kalitte-kazanilan-puan\", [o.userId, 2, o.ordernum])\n        ]\n        let accounts = await AccountModel.summary(list);\n        return accounts;\n    }\n\n\n    async getWorkingAccounts(o: Order) {\n        let list = [\n            Account.generateCode(\"odeme-bekleyen-satislar\", [o.userId, o.ordernum]),\n            Account.generateCode(\"satis-indirimleri\", [o.userId, o.ordernum])\n        ]\n        let accounts = await AccountModel.list(list);\n        return accounts;\n    }\n\n    async getAccountsSummary(o: Order) {\n        let list = [\n            Account.generateCode(\"odeme-bekleyen-satislar\", [o.userId, o.ordernum]),\n            Account.generateCode(\"satis-indirimleri\", [o.userId, o.ordernum])\n        ]\n        let accounts = await AccountModel.summary(list);\n        return accounts;\n    }\n\n    calculatePaid(o: Order) {\n        let codeCredit = Account.generateCode(\"odeme-bekleyen-satislar\", [o.userId, o.ordernum, 500]);\n        let codeManual = Account.generateCode(\"odeme-bekleyen-satislar\", [o.userId, o.ordernum, 600]);\n        let total = 0.00;\n        o.workedAccounts.forEach(a => {\n            if (a.code == codeCredit || a.code == codeManual) total += a.borc;\n        })\n        return Helper.asCurrency(total);\n    }\n\n    calculateTeslimatOfButcher(o: Order) {\n        let codeButcher = Account.generateCode(\"odeme-bekleyen-satislar\", [o.userId, o.ordernum, 200]);\n        let total = 0.00;\n        o.workedAccounts.forEach(a => {\n            if (a.code == codeButcher) total += a.alacak;\n        })\n        return Helper.asCurrency(total);\n    }\n\n    calculateTeslimatOfKasaptanAl(o: Order) {\n        let codeKasaptanAl = Account.generateCode(\"odeme-bekleyen-satislar\", [o.userId, o.ordernum, 201]);        \n        let total = 0.00;\n        o.workedAccounts.forEach(a => {\n            if (a.code == codeKasaptanAl) total += a.alacak;\n        })\n        return Helper.asCurrency(total);\n    }\n\n\n    calculateTeslimatTotal(o: Order) {\n        let codeButcher = Account.generateCode(\"odeme-bekleyen-satislar\", [o.userId, o.ordernum, 200]);\n        let codeKasaptanAl = Account.generateCode(\"odeme-bekleyen-satislar\", [o.userId, o.ordernum, 201]);\n        let total = 0.00;\n        o.workedAccounts.forEach(a => {\n            if (a.code == codeButcher || a.code == codeKasaptanAl) total += a.alacak;\n        })\n        return Helper.asCurrency(total);\n    }\n\n    calculateProduct(o: Order) {\n        let code = Account.generateCode(\"odeme-bekleyen-satislar\", [o.userId, o.ordernum, 100]);\n        let total = 0.00;\n        o.workedAccounts.forEach(a => {\n            if (a.code == code) total += a.alacak;\n        })\n        return Helper.asCurrency(total);\n    }\n\n    async getOrders(where?: any) {\n        let res = await Order.findAll({\n            where: where,\n            order: [['ID', 'DESC']],\n            limit: 100,\n            include: [{\n                model: Butcher\n            }, {\n                model: OrderItem,\n                include: [{\n                    model: Butcher,\n                    all: true\n                }, {\n                    model: Product,\n                    all: true\n                }]\n            }]\n        })\n        return res;\n    }\n\n    arrangeKalittePuans(o: Order) {\n        o.kalitteOnlyPuanAccounts = [];\n        o.kalitteByButcherPuanAccounts = [];\n\n        let kalitteCode = Account.generateCode(\"musteri-kalitte-kazanilan-puan\", [o.userId, 1, o.ordernum]);\n        let kalitteByButcherCode = Account.generateCode(\"musteri-kalitte-kazanilan-puan\", [o.userId, 2, o.ordernum]);\n\n\n        o.kalittePuanAccounts.forEach(a => {\n            if (a.code == kalitteCode) {\n                o.kalitteOnlyPuanAccounts.push(a);\n            } else if (a.code == kalitteByButcherCode) {\n                o.kalitteByButcherPuanAccounts.push(a)\n            }\n        })\n\n        AccountModel.addTotals(o.kalitteOnlyPuanAccounts)\n        AccountModel.addTotals(o.kalitteByButcherPuanAccounts)\n    }\n\n    async getOrder(num, checkFirst: boolean = false) {\n        let order = await Order.findOne({\n            where: {\n                ordernum: num\n            },\n            include: [{\n                model: Butcher\n            }, {\n                model: OrderItem,\n                include: [{\n                    model: Butcher,\n                    all: true\n                }, {\n                    model: Product,\n                    all: true\n                }]\n            }]\n        })\n        order.workedAccounts = await this.getWorkingAccounts(order);\n        order.butcherPuanAccounts = await this.getButcherPuanAccounts(order);\n        order.kalittePuanAccounts = await this.getKalittePuanAccounts(order);\n        this.arrangeKalittePuans(order);\n        if (checkFirst) {\n            order.isFirstButcherOrder = await Order.findOne({ where: { userid: order.userId, butcherid: order.butcherid, status: OrderItemStatus.success, ordernum: { [Op.ne]: order.ordernum } } }) == null;\n            order.isFirstOrder = await Order.findOne({ where: { userid: order.userId } }) == null;\n        }\n        return order;\n    }\n\n    async completeOrderStatus(o: Order, newStatus: OrderItemStatus) {\n        let res = db.getContext().transaction((t: Transaction) => {\n            return this.changeOrderStatus(o, newStatus, t)\n        })\n        await res;\n    }\n\n    async changeOrderStatus(o: Order, newStatus: OrderItemStatus, t?: Transaction) {\n        let promises = [], ops = [];\n        if (o.status != newStatus) {\n            if (newStatus.startsWith('iptal') && o.status.startsWith('iptal')) {\n\n            } else {\n                if (newStatus.startsWith('iptal')) {\n                    let summary = await this.getAccountsSummary(o);\n                    let balance = Helper.asCurrency(summary.alacak - summary.borc);\n                    if (balance > 0.00) {\n                        let op = new AccountingOperation(`${o.ordernum} iptali`);\n                        op.accounts.push(new Account(\"odeme-bekleyen-satislar\", [o.userId, o.ordernum]).dec(balance))\n                        op.accounts.push(new Account(\"satis-alacaklari\", [o.userId, o.ordernum]).dec(balance))\n                        ops.push(op);\n                    }\n                    o.items.forEach(oi => {\n                        if (!oi.status.startsWith('iptal')) {\n                            oi.status = newStatus;\n                            promises.push(oi.save({ transaction: t }))\n                        }\n                    })\n                } else if (o.status.startsWith('iptal')) {\n\n                } else {\n                    o.items.forEach(oi => {\n                        if (!oi.status.startsWith('iptal')) {\n                            oi.status = newStatus;\n                            promises.push(oi.save({ transaction: t }))\n                        }\n                    })\n                }\n            }\n            await this.saveAccountingOperations(ops, t)\n            o.status = newStatus;\n            await o.save({ transaction: t })\n        }\n    }\n\n\n    async completeOrderItemStatus(oi: OrderItem, newStatus: OrderItemStatus) {\n        let res = db.getContext().transaction((t: Transaction) => {\n            return this.changeOrderItemStatus(oi, newStatus, t)\n        })\n        await res;\n    }\n\n\n    changeOrderItemStatus(oi: OrderItem, newStatus: OrderItemStatus, t?: Transaction) {\n        let promises = [], ops = [];\n        if (oi.status != newStatus) {\n            if (newStatus.startsWith('iptal') && oi.status.startsWith('iptal')) {\n\n            } else {\n                if (newStatus.startsWith('iptal')) {\n                    let op = new AccountingOperation(`${oi.productName} ${newStatus}`);\n                    op.accounts.push(new Account(\"odeme-bekleyen-satislar\", [oi.order.userId, oi.order.ordernum]).dec(oi.price))\n                    op.accounts.push(new Account(\"satis-alacaklari\", [oi.order.userId, oi.order.ordernum]).dec(oi.price))\n                    ops.push(op);\n                } else if (oi.status.startsWith('iptal')) {\n                    let op = new AccountingOperation(`${oi.productName} iptalin iptali`);\n                    op.accounts.push(new Account(\"odeme-bekleyen-satislar\", [oi.order.userId, oi.order.ordernum]).inc(oi.price))\n                    op.accounts.push(new Account(\"satis-alacaklari\", [oi.order.userId, oi.order.ordernum]).inc(oi.price))\n                    ops.push(op);\n                }\n            }\n            promises.push(this.saveAccountingOperations(ops, t))\n            oi.status = newStatus;\n            promises.push(oi.save({ transaction: t }))\n        }\n        return Promise.all(promises);\n    }\n\n\n    getView(order: Order) {\n\n        let shipment = {};\n        let payment = {};\n        let butchers = {}\n\n        order.items.forEach((item, i) => {\n            let bi = item.butcher.id;\n\n            let prodMan = ProductTypeFactory.create(item.productType, {});\n            prodMan.loadFromOrderItem(item);\n\n\n            if (!butchers[bi]) {\n                butchers[bi] = item.butcher;\n                butchers[bi].products = [i];\n                butchers[bi].subTotal = item.butcherSubTotal;\n                butchers[bi].total = item.butcherTotal;\n                butchers[bi].discountTotal = item.discountTotal;\n                butchers[bi].shippingTotal = item.shippingTotal;\n            } else {\n                butchers[bi].products.push(i);\n            }\n            if (!shipment[bi])\n                shipment[bi] = Object.assign(new Shipment(), {\n                    howTo: item.shipmentHowTo,\n                    securityCode: order.securityCode,\n                    type: item.shipmentType,\n                    days: [item.shipmentdate ? item.shipmentdate.toDateString() : ''],\n                    hours: [item.shipmenthour],\n                    informMe: item.shipmentInformMe,\n                    daysText: [[item.shipmentdate ? item.shipmentdate.toDateString() : '']],\n                    hoursText: [item.shipmenthourText],\n                });\n            if (item.dispatcherid) {\n                shipment[bi].dispatcher = Object.assign(new Dispatcher(), {\n                    id: item.dispatcherid,\n                    type: item.dispatcherType,\n                    name: item.dispatcherName,\n                    fee: item.dispatcherFee,\n                    totalForFree: item.dispatchertotalForFree\n                })\n            }\n\n            if (!payment[bi])\n                payment[bi] = Object.assign(new Payment(), {\n                    type: item.paymentType,\n                    desc: item.paymentTypeText\n                });\n        })\n\n\n        return {\n            order: order,\n            butchers: butchers,\n            shipment: shipment,\n            payment: payment,\n            items: order.items\n        }\n    }\n\n\n\n    createOrder(t: Transaction, order: Order, card: ShopCard): Promise<any> {\n\n        return order.save({\n            transaction: t\n        }).then((order) => {\n            let promises = [];\n            let butcher = card.butchers[order.butcherid];\n\n            butcher.products.forEach((pi, i) => {\n                let item = card.items[pi];\n                let oi = OrderItem.fromShopcardItem(card, item);\n                oi.orderid = order.id;\n                promises.push(oi.save({\n                    transaction: t\n                }))\n            })\n\n            if (card.address.saveaddress) {\n                this.req.user.lastAddress = card.address.adres;\n                this.req.user.lastKat = card.address.kat;\n                this.req.user.lastBina = card.address.bina;\n                this.req.user.lastDaire = card.address.daire;\n                this.req.user.lastLocation = card.address.geolocation;\n                this.req.user.lastLocationType = card.address.geolocationType;\n                this.req.user.lastTarif = card.address.addresstarif;\n                promises.push(this.req.user.save())\n            }\n            return Promise.all(promises);\n        }).then((orderItems) => {\n            let promises = []\n            orderItems.forEach(oi => {\n                if (oi.dispatcherid) {\n                    promises.push(Dispatcher.update({\n                        lastorderitemid: oi.id\n                    }, {\n                        transaction: t,\n                        where: {\n                            id: oi.dispatcherid\n                        }\n                    }))\n                }\n            })\n\n            return Promise.all(promises)\n        })\n    }\n\n    async getPreAccountingOperations(ol: Order[], paymentInfo: PaymentTotal): Promise<AccountingOperation[]> {\n        let result: AccountingOperation[] = [];\n\n        if (paymentInfo) {\n            let remaining = paymentInfo.paid;\n            for (let i = 0; i < ol.length; i++) {\n                let o = ol[i];\n                let total = Helper.asCurrency(o.total);\n                remaining = Helper.asCurrency(remaining - total);\n                if (remaining >= 0.00) {\n                    let op = new AccountingOperation(`${o.name} ${o.ordernum} siparişi ön provizyon ödeme işlemi`);\n                    op.accounts.push(new Account(\"kredi-karti-provizyon\", [o.userId, o.ordernum, paymentInfo.paymentId]).inc(total))\n                    op.accounts.push(new Account(\"havuz-hesabi\", [o.userId, o.ordernum, paymentInfo.paymentId]).inc(total))\n                    op.validate()\n                    result.push(op);\n                }\n            }\n        }\n        return result;\n    }\n\n    async saveAccountingOperations(ops: AccountingOperation[], t?: Transaction) {\n        let result: Promise<any>[] = [];\n        if (t) {\n            for (var i = 0; i < ops.length; i++) {\n                ops[i].validate()\n                result.push(AccountModel.saveOperation(ops[i], {\n                    transaction: t\n                }))\n            }\n            return Promise.all(result)\n        } else {\n            let res = db.getContext().transaction((t: Transaction) => {\n                for (var i = 0; i < ops.length; i++) {\n                    ops[i].validate()\n                    result.push(AccountModel.saveOperation(ops[i], {\n                        transaction: t\n                    }))\n                }\n                return Promise.all(result)\n            })\n            await res;\n        }\n    }\n\n    async updateOrderByCreditcardPayment(o: Order, paymentInfo: PaymentResult, t?: Transaction) {\n        let promises = [];\n        o.paymentId = paymentInfo.paymentId;\n        o.paymentType = \"onlinepayment\";\n        o.paymentTypeText = PaymentTypeDesc.onlinepayment;\n        promises.push(o.save({\n            transaction: t\n        }));\n        paymentInfo.itemTransactions.forEach(it => {\n            if (it.itemId == o.ordernum) {\n                o.paymentTransactionId = it.paymentTransactionId\n                o.paidTotal = it.paidPrice;\n                promises.push(o.save({ transaction: t }))\n            }\n        })\n        return o.isNewRecord ? null : Promise.all(promises);\n    }\n\n    async completeManualPaymentDept(o: Order) {\n       \n        let res = db.getContext().transaction((t: Transaction) => {\n            return this.createManualPaymentDept(o, t)\n        })\n        await res;\n    }\n\n    async createManualPaymentDept(o: Order, t?: Transaction) {\n        await this.fillButcherComissionAccounts(o);\n\n        let butcherDebtAcc = o.butcherComissiomAccounts.find(p => p.code == 'total');\n        let butcherDebt = Helper.asCurrency(butcherDebtAcc.borc - butcherDebtAcc.alacak)\n        let result: AccountingOperation = new AccountingOperation(`${o.ordernum} nolu ${o.butcherName} siparişi kasaptan alacak`);\n        result.accounts.push(new Account(\"kasaplardan-alacaklar\", [o.butcherid, 1, o.ordernum], `${o.ordernum} nolu siparişten doğan borç komisyonu`).inc(butcherDebt))\n        result.accounts.push(new Account(\"kasap-borc-tahakkuk\", [1, o.butcherid, o.ordernum], `${o.ordernum} nolu manuel ödemesi`).inc(Helper.asCurrency(butcherDebt)))\n        return this.saveAccountingOperations([result], t)\n    }\n\n\n    async completeCreditcardPayment(ol: Order[], paymentRequest: PaymentRequest, paymentInfo: PaymentResult) {\n        let res = db.getContext().transaction((t: Transaction) => {\n            return this.makeCreditcardPayment(ol, paymentRequest, paymentInfo, t)\n        })\n        await new Promise((resolve, reject) => {\n            res.then((result) => {\n                resolve(result)\n            }).catch((err) => {\n                reject(err);\n            })\n        })\n    }\n\n    async fillFirstOrderDetails(o: Order) {\n        o.isFirstButcherOrder = await Order.findOne({ where: { userid: o.userId, butcherid: o.butcherid, status: OrderItemStatus.success, ordernum: { [Op.ne]: o.ordernum } } }) == null;\n        o.isFirstOrder = await Order.findOne({ where: { userid: o.userId } }) == null;\n\n    }\n\n\n    getPossiblePuanGain(o: Order, total: number, includeAvailable: boolean = false): PuanResult[] {\n\n        \n        let calculator = new PuanCalculator();\n        let result: PuanResult[] = [];\n\n        let firstOrder: Puan = {\n\n            minPuanForUsage: 0.00,\n            minSales: 0.00,\n            name: 'ilk sipariş indirimi',\n            rate: 0.03\n\n        }\n\n        if (o.butcher.enableCreditCard) {\n            if (o.isFirstButcherOrder && o.orderType != 'kurban') {\n                let firstOrderPuan = calculator.calculateCustomerPuan(firstOrder, total);\n                if (firstOrderPuan > 0.00 || includeAvailable) {\n                    result.push({\n                        type: \"kalitte-by-butcher\",\n                        earned: firstOrderPuan,\n                        id: o.butcherid.toString(),\n                        title: `Kasap Kart™ programı ilk sipariş puanı`,\n                        desc: `${o.ordernum} nolu ${o.butcherName} siparişi kasaptanAl.com Puan`,\n                        based: firstOrder\n                    })\n                }\n            }\n\n            if (o.butcher.enablePuan) {\n                let butcherPuan = o.butcher.getPuanData(o.orderType);\n                let earnedPuanb = calculator.calculateCustomerPuan(butcherPuan, total);\n                if (earnedPuanb > 0.00 || includeAvailable) {\n                    if (earnedPuanb == 0) {\n                        result.push(\n                            {\n                                type: \"butcher\",\n                                earned: earnedPuanb,\n                                id: o.butcherid.toString(),\n                                title: o.butcher.name + ' Kasap Kart™ programı',\n                                desc: `${o.ordernum} nolu ${o.butcherName} sipariş Kasap Puan`,\n                                based: butcherPuan\n                            }\n                        )\n                    } else {\n                        let toKalitteRatio = o.orderType == OrderType.kurban ? 1: 0.5;\n                        let toKalitte = Helper.asCurrency(earnedPuanb * toKalitteRatio);\n                        let toButcher = Helper.asCurrency(earnedPuanb - toKalitte);\n                        if (toButcher > 0.00) {\n                            result.push(\n                                {\n                                    type: \"butcher\",\n                                    earned: toButcher,\n                                    id: o.butcherid.toString(),\n                                    title: o.butcher.name + ' Kasap Kart™ programı',\n                                    desc: `${o.ordernum} nolu ${o.butcherName} sipariş Kasap Puan`,\n                                    based: butcherPuan\n                                }\n                            )\n                        }\n                        if (toKalitte > 0.00) {\n                            result.push(\n                                {\n                                    type: \"kalitte-by-butcher\",\n                                    earned: toKalitte,\n                                    id: o.butcherid.toString(),\n                                    title: `kasaptanAl.com Kasap Kart™ programı`,\n                                    desc: `${o.ordernum} nolu ${o.butcherName} sipariş kasaptanAl.com Puan`,\n                                    based: butcherPuan\n                                }\n                            )\n                        }\n                    }\n                }\n            }\n\n\n\n        }\n\n        // if (o.isFirstOrder) {\n        //     let earnedPuan = calculator.calculateCustomerPuan({\n        //         minPuanForUsage: 0.00,\n        //         minSales: 0.00,\n        //         name:'kalitte ilk sipariş',\n        //         rate: 0.01\n        //     }, total);\n        //     if (earnedPuan > 0.00) {\n        //         result.push(\n        //             {\n        //                 type:\"kalitte\",\n        //                 desc: `${o.ordernum} kasaptanAl.com ilk sipariş kazanılan puan bedeli `,\n        //                 earned: earnedPuan,\n        //                 id: 'kasaptanAl.com',\n        //                 title: 'kasaptanAl.com ilk sipariş hediye puanı'\n        //             }\n        //         )                \n        //     }\n        // } \n\n        return result\n    }\n    \n\n    getComissionAccounts(o: Order, total: number, kasaptanAlShip: number): AccountingOperation {\n        let result: AccountingOperation = new AccountingOperation(`${o.ordernum} nolu ${o.butcherName} kasap komisyon hesabı`);        \n\n        let butcherFee = o.getButcherComission(total);\n        let puanTotal = o.getPuanTotal(total);\n\n        result.accounts.push(new Account(\"kasaplardan-kesilen-komisyonlar\", [100, o.butcherid, o.ordernum], `${o.ordernum} nolu satış kasaptanal.com komisyonu`).inc(butcherFee))\n        if (puanTotal > 0.00) {\n            result.accounts.push(new Account(\"kasaplardan-kesilen-komisyonlar\", [200, o.butcherid, o.ordernum], `${o.ordernum} nolu müşteriye iletilen puan`).inc(puanTotal))\n        }\n        if (kasaptanAlShip > 0.00) {\n            result.accounts.push(new Account(\"banka\", [300, o.ordernum], `${o.ordernum} nolu satış kasaptanal.com müşteriden alınan teslimat bedeli`).inc(kasaptanAlShip))\n\n        }\n        result.accounts.push(new Account(\"gelirler\", [100, o.butcherid], `${o.ordernum} nolu ${o.butcherName} satış geliri`).inc(butcherFee + puanTotal + kasaptanAlShip))\n\n        return result;\n    }\n\n    // getKasaptanAlShipAccounts(o: Order, total: number): AccountingOperation {\n    //     let result: AccountingOperation = new AccountingOperation(`${o.ordernum} nolu tahsil edilen teslimat bedeli`);        \n\n    //     result.accounts.push(new Account(\"banka\", [300, o.ordernum], `${o.ordernum} nolu satış kasaptanal.com müşteriden alınan teslimat bedeli`).inc(butcherFee))\n    //     result.accounts.push(new Account(\"gelirler\", [100, o.ordernum], `${o.ordernum} nolu ${o.butcherName} satış geliri`).inc(butcherFee + puanTotal))\n\n    //     return result;\n    // }    \n\n    getPuanAccounts(o: Order, total: number): AccountingOperation {\n\n        let gains = this.getPossiblePuanGain(o, total);\n        let result: AccountingOperation = new AccountingOperation(`${o.ordernum} nolu ${o.butcherName} siparişi puan kazancı`);\n\n        gains.forEach(pg => {\n            if (pg.earned > 0.00) {\n                if (pg.type == \"butcher\") {\n                    result.accounts.push(new Account(\"kasap-puan-giderleri\", [o.butcherid, o.userId, o.ordernum], pg.title).inc(pg.earned))\n                    result.accounts.push(new Account(\"musteri-kasap-kazanilan-puan\", [o.userId, o.butcherid, o.ordernum], pg.title).inc(pg.earned))\n                }\n                if (pg.type == \"kalitte\") {\n                    result.accounts.push(new Account(\"kalitte-puan-giderleri\", [o.userId, 1, o.ordernum], pg.title).inc(pg.earned))\n                    result.accounts.push(new Account(\"musteri-kalitte-kazanilan-puan\", [o.userId, 1, o.ordernum], pg.title).inc(pg.earned))\n                }\n                if (pg.type == \"kalitte-by-butcher\") {\n                    result.accounts.push(new Account(\"kalitte-puan-giderleri\", [o.userId, 2, o.ordernum], pg.title).inc(pg.earned))\n                    result.accounts.push(new Account(\"musteri-kalitte-kazanilan-puan\", [o.userId, 2, o.ordernum], pg.title).inc(pg.earned))\n                }\n            }\n        })\n\n        return result;\n\n\n    }\n\n    fillPuanAccounts(o: Order, paidPrice: number) {\n        o.butcherPuanAccounts = [];\n        o.kalittePuanAccounts = [];\n        o.kalitteOnlyPuanAccounts = [];\n        o.kalitteByButcherPuanAccounts = [];\n\n        let accounts = this.getPuanAccounts(o, paidPrice).accounts;\n\n        let butcherCode = Account.generateCode(\"musteri-kasap-kazanilan-puan\", [o.userId, o.butcherid, o.ordernum]);\n        let kalitteCode = Account.generateCode(\"musteri-kalitte-kazanilan-puan\", [o.userId, 1, o.ordernum]);\n        let kalitteByButcherCode = Account.generateCode(\"musteri-kalitte-kazanilan-puan\", [o.userId, 2, o.ordernum]);\n\n        accounts.forEach(a => {\n            let acc = AccountModel.fromAccount(a);\n            if (a.code == butcherCode) {\n                o.butcherPuanAccounts.push(acc)\n            } else if (a.code == kalitteCode) {\n                o.kalittePuanAccounts.push(acc);\n            } else if (a.code == kalitteByButcherCode) {\n                o.kalittePuanAccounts.push(acc);\n            }\n        })\n\n        this.arrangeKalittePuans(o);\n\n        AccountModel.addTotals(o.butcherPuanAccounts)\n        AccountModel.addTotals(o.kalittePuanAccounts)\n\n    }\n\n\n\n\n    async completeManuelPayment(o: Order, total: number) {\n        let res = db.getContext().transaction((t: Transaction) => {\n            return this.makeManuelPayment(o, total, t)\n        })\n        await new Promise((resolve, reject) => {\n            res.then((result) => {\n                resolve(result)\n            }).catch((err) => {\n                reject(err);\n            })\n        })\n    }\n\n    // async loadPuan(o: Order, total: number, t?: Transaction): Promise<any> {\n    //     let ops: AccountingOperation[] = [];\n    //     let promises: Promise<any>[] = [];\n    //     let puanAccounts = this.getPuanAccounts(o, total);\n    //     ops.push(puanAccounts);\n    //     promises = promises.concat(this.saveAccountingOperations(ops, t));\n    //     return Promise.all(promises)\n    // }\n    \n\n    // async completeLoadPuan(o: Order, total: number) {\n    //     let res = db.getContext().transaction((t: Transaction) => {\n    //         return this.loadPuan(o, total, t)\n    //     })\n    //     await new Promise((resolve, reject) => {\n    //         res.then((result) => {\n    //             resolve(result)\n    //         }).catch((err) => {\n    //             reject(err);\n    //         })\n    //     })\n    // }\n\n\n   \n\n\n    async updateButcherDebtAfterPayment(o: Order, paymentRequest: PaymentRequest, paymentInfo: PaymentResult, t?: Transaction) {\n        let promises = [];\n\n        for (let i = 0; i < paymentInfo.itemTransactions.length; i++) {\n            let it = paymentInfo.itemTransactions[i];\n            if (it.itemId == o.ordernum) {\n                let req = paymentRequest.basketItems.find(pr => pr.id == o.ordernum);\n                if (req.merchantDebtApplied) {\n                    let result: AccountingOperation = new AccountingOperation(`${o.ordernum} nolu ${o.butcherName} siparişi düşülen borç`);\n                    result.accounts.push(new Account(\"kasaplardan-alacaklar\", [o.butcherid, 5], `${o.ordernum} nolu sipariş düşülen tutar`).dec(req.merchantDebtApplied))\n                    result.accounts.push(new Account(\"kasap-borc-tahakkuk\", [1, o.butcherid, o.ordernum], `${o.ordernum} nolu siparişten düşülen ödemesi`).dec(req.merchantDebtApplied))\n                    promises = promises.concat(this.saveAccountingOperations([result], t))\n                }\n            }\n        }\n        return promises;\n    }\n\n    async makeManuelPayment(o: Order, total: number, t?: Transaction): Promise<any> {\n        let ops: AccountingOperation[] = [];\n        let promises: Promise<any>[] = []\n\n        let paymentId = \"manuel\";\n\n        let op = new AccountingOperation(`${o.ordernum} ödemesi - ${paymentId}`);\n        op.accounts.push(new Account(\"odeme-bekleyen-satislar\", [o.userId, o.ordernum, 600]).dec(total))\n        op.accounts.push(new Account(\"satis-alacaklari\", [o.userId, o.ordernum]).dec(total));\n\n        ops.push(op);\n\n        let butcherShip = this.calculateTeslimatOfButcher(o)\n        let kasaptanAlShip = this.calculateTeslimatOfKasaptanAl(o);\n        let productPrice = this.calculateProduct(o);\n\n        let puanAccounts = this.getPuanAccounts(o, productPrice);\n        this.fillPuanAccounts(o, productPrice);\n        let comissionAccounts = this.getComissionAccounts(o, butcherShip + productPrice, kasaptanAlShip);\n  \n\n        ops.push(puanAccounts);\n        ops.push(comissionAccounts);\n\n        o.paidTotal = total;\n        promises.push(o.save({\n            transaction: t\n        }))\n\n        promises = promises.concat(this.saveAccountingOperations(ops, t));\n        return Promise.all(promises)\n    }\n\n\n    async makeCreditcardPayment(ol: Order[], paymentRequest: PaymentRequest, paymentInfo: PaymentResult, t?: Transaction): Promise<any> {\n\n        let ops: AccountingOperation[] = [];\n        let promises: Promise<any>[] = []\n\n        for (let i = 0; i < ol.length; i++) {\n            let o = ol[i];\n            let op = new AccountingOperation(`${o.ordernum} kredi kartı ödemesi - ${paymentInfo.paymentId}`);\n            if (o.orderSource == OrderSource.butcher) {\n                op.accounts.push(new Account(\"odeme-bekleyen-satislar\", [o.userId, o.ordernum, 1000]).dec(paymentInfo.paidPrice))\n                op.accounts.push(new Account(\"satis-alacaklari\", [o.userId, o.ordernum]).dec(paymentInfo.paidPrice))\n                ops.push(op);\n                promises = promises.concat(this.updateOrderByCreditcardPayment(o, paymentInfo, t));\n            } else {\n                op.accounts.push(new Account(\"odeme-bekleyen-satislar\", [o.userId, o.ordernum, 500]).dec(paymentInfo.paidPrice))\n                op.accounts.push(new Account(\"satis-alacaklari\", [o.userId, o.ordernum]).dec(paymentInfo.paidPrice))\n                ops.push(op);\n                \n                let butcherShip = this.calculateTeslimatOfButcher(o)\n                let kasaptanAlShip = this.calculateTeslimatOfKasaptanAl(o);\n                let productPrice = this.calculateProduct(o);\n\n                let puanAccounts = this.getPuanAccounts(o, productPrice);\n                let comissionAccounts = this.getComissionAccounts(o, butcherShip + productPrice, kasaptanAlShip);\n                ops.push(puanAccounts);\n                ops.push(comissionAccounts);\n                promises = promises.concat(this.updateOrderByCreditcardPayment(o, paymentInfo, t));\n                promises = promises.concat(this.updateButcherDebtAfterPayment(o, paymentRequest, paymentInfo, t));\n            }\n        }\n\n        promises = promises.concat(this.saveAccountingOperations(ops, t));\n\n        for (let i = 0; i < ol.length; i++) {\n            let notifyMobilePhones = (ol[i].butcher.notifyMobilePhones || \"\").split(',');\n            if (config.nodeenv == 'production') {\n                email.send(ol[i].email, \"siparişinizin ödemesi yapıldı\", \"order.paid.ejs\", this.getView(ol[i]));\n            }\n            if (config.nodeenv == 'production') {\n                for (var p = 0; p < notifyMobilePhones.length; p++) {\n                    if (notifyMobilePhones[p].trim()) {\n                        let payUrl = `${this.url}/pay/${ol[i].ordernum}`;\n                        Sms.send(\"90\" + Helper.getPhoneNumber(notifyMobilePhones[p].trim()), `Tebrikler, ${ol[i].name} ${Helper.formattedCurrency(paymentInfo.paidPrice)} online odeme yapti. Bilgi icin ${payUrl} `, false, new SiteLogRoute(this.constructorParams))\n                    }\n                }\n            }\n        }\n        return Promise.all(promises)\n    }\n\n    generateInitialAccounting(o: Order): AccountingOperation {\n        let op = new AccountingOperation(`${o.ordernum} numaralı sipariş`);\n        if (o.orderSource == OrderSource.butcher) {\n            op.accounts.push(new Account(\"odeme-bekleyen-satislar\", [o.userId, o.ordernum, 500], \"Sipariş Bedeli\").inc(o.subTotal));\n            op.accounts.push(new Account(\"satis-alacaklari\", [o.userId, o.ordernum]).inc(o.total))\n        } else {\n            op.accounts.push(new Account(\"odeme-bekleyen-satislar\", [o.userId, o.ordernum, 100], \"Ürün Bedeli\").inc(o.subTotal));\n            if (o.shippingTotal > 0.00) {\n                if (o.dispatcherType == \"butcher\") {\n                    op.accounts.push(new Account(\"odeme-bekleyen-satislar\", [o.userId, o.ordernum, 200], \"Kasap Teslimat Bedeli\").inc(o.shippingTotal));\n                } else op.accounts.push(new Account(\"odeme-bekleyen-satislar\", [o.userId, o.ordernum, 201], \"KasaptanAl.com Teslimat Bedeli\").inc(o.shippingTotal));\n            }\n            if (Math.abs(o.discountTotal) > 0.00) {\n                op.accounts.push(new Account(\"satis-indirimleri\", [o.userId, o.ordernum, 100], \"Uygulanan İndirimler\").inc(Math.abs(o.discountTotal)));\n\n            }\n            op.accounts.push(new Account(\"satis-alacaklari\", [o.userId, o.ordernum]).inc(o.total))\n        }\n\n\n        op.validate()\n\n        return op;\n\n        return;\n\n        // op.accounts.push(new Account(\"kredi-karti-provizyon\", [o.userId, o.ordernum]).inc(total))\n        // op.accounts.push(new Account(\"havuz-hesabi\", [o.userId, o.ordernum]).inc(total))\n\n\n        // let kasapKarOran = 0.10;\n        // let kasapPuanOran = 0.2;\n        // let odemeSirketiKomisyonOran = 0.032;\n        // let kalittePuanOran = 0.00;\n\n\n        // let musteriIadeToplam = Helper.asCurrency(total * 0.05);\n        // let gerceklesenSatisToplam = Helper.asCurrency(total - musteriIadeToplam);\n\n        // let kasapSatisToplam = Helper.asCurrency(gerceklesenSatisToplam * (1.00 - kasapKarOran));\n        // let kasapPuanToplam = Helper.asCurrency(gerceklesenSatisToplam * kasapPuanOran);\n        // let kasapUrunToplam = Helper.asCurrency(kasapSatisToplam - kasapPuanToplam);\n\n        // let kalittePuanToplam = Helper.asCurrency(gerceklesenSatisToplam * kalittePuanOran);\n        // let odemeSirketiKomisyonToplam = Helper.asCurrency(gerceklesenSatisToplam * odemeSirketiKomisyonOran);\n\n        // let netKar = Helper.asCurrency(gerceklesenSatisToplam - kalittePuanToplam - kasapPuanToplam - kasapUrunToplam - odemeSirketiKomisyonToplam);\n\n\n        // op.accounts.push(new Account(\"kredi-karti-provizyon\", [o.userId, o.ordernum]).dec(gerceklesenSatisToplam))\n        // op.accounts.push(new Account(\"havuz-hesabi\", [o.userId, o.ordernum]).dec(total))\n        // op.accounts.push(new Account(\"kredi-karti-provizyon-iade\", [o.userId, o.ordernum]).inc(musteriIadeToplam))\n\n        // op.accounts.push(new Account(\"kredi-karti-odemeleri\", [o.userId, o.ordernum]).inc(gerceklesenSatisToplam))\n        // op.accounts.push(new Account(\"banka\", [o.userId, o.ordernum]).inc(netKar))\n\n        // op.accounts.push(new Account(\"kasap-puan-giderleri\", [o.userId, o.ordernum]).inc(kasapPuanToplam))\n        // op.accounts.push(new Account(\"kasap-urun-giderleri\", [o.userId, o.ordernum]).inc(kasapUrunToplam))\n        // kalittePuanToplam > 0 ? op.accounts.push(new Account(\"kalitte-puan-giderleri\", [o.userId, o.ordernum]).inc(kalittePuanToplam)) : null;\n        // op.accounts.push(new Account(\"odeme-sirketi-giderleri\", [o.userId, o.ordernum]).inc(odemeSirketiKomisyonToplam))\n\n\n\n        // op.validate()\n\n        // return op;\n    }\n\n    async getFromShopcard(card: ShopCard): Promise<Order[]> {\n        let butchers = card.butchers;\n        let groupid = orderid.generate();\n        let l3 = await Area.findByPk(card.address.level3Id);\n        let l2 = l3 ? await Area.findByPk(l3.parentid) : null;\n        let orders = []\n\n        let payment = CreditcardPaymentFactory.getInstance();\n        let log = new SiteLogRoute(this.constructorParams);\n        payment.logger = log;\n\n        for (var bi in butchers) {\n            let order = await Order.fromShopcard(card, <any>bi);\n            order.ordergroupnum = groupid;\n            order.butcherid = parseInt(bi);\n            order.butcher = await Butcher.findByPk(order.butcherid)\n            order.butcherName = butchers[bi].name;\n            order.securityCode = `${butchers[bi].name[0]}-${Helper.getRandomInt(999) + 1000}`;\n            order.userId = this.req.user ? this.req.user.id : 0;\n\n            if (!order.userId) {\n                order.isFirstButcherOrder = true;\n                order.isFirstOrder = true;\n            }\n            order.areaLevel2Id = l2 && l2.id;\n            order.areaLevel2Text = l2 && l2.name;\n            orders.push(order);\n        }\n\n        return orders;\n    }\n\n    async createAsButcherOrder(o: Order): Promise<Order> {\n        o.orderSource = \"butcher\";\n        o.ordernum = orderid.generate();\n\n        let result: Promise<any>[] = [];\n        let res = db.getContext().transaction((t: Transaction) => {\n            result.push(o.save({\n                transaction: t\n            }))\n            let accOperation = this.generateInitialAccounting(o);\n            result.push(this.saveAccountingOperations([accOperation], t))\n            return Promise.all(result)\n        })\n\n        await res;\n\n        return o;\n    }\n\n    async create(card: ShopCard): Promise<Order[]> {\n\n        let result: Promise<any>[] = [];\n\n        let orders = await this.getFromShopcard(card);\n\n        let res = db.getContext().transaction((t: Transaction) => {\n            for (var i = 0; i < orders.length; i++) {\n                let dbOrder = this.createOrder(t, orders[i], card);\n                let accOperation = this.generateInitialAccounting(orders[i]);\n                result.push(dbOrder);\n                result.push(AccountModel.saveOperation(accOperation, {\n                    transaction: t\n                }))\n            }\n            return Promise.all(result)\n        })\n\n        await res;\n        let fres = []\n        for (var oi = 0; oi < orders.length; oi++) {\n            let order = orders[oi];\n            let api = new OrderApi(this.constructorParams);\n            let dbOrder = await api.getOrder(order.ordernum);\n            let view = this.getView(dbOrder);\n            if (config.nodeenv == 'production') {\n                await email.send(dbOrder.email, \"siparişinizi aldık\", \"order.started.ejs\", view);\n                await Sms.send(dbOrder.phone, `KasaptanAl.com siparisinizi aldik, destek tel/whatsapp: 08503054216. Teslimat kodu: ${order.securityCode}`, false, new SiteLogRoute(this.constructorParams))\n\n                let notifyMobilePhones = (order.butcher.notifyMobilePhones || \"\").split(',');\n\n                for (var p = 0; p < notifyMobilePhones.length; p++) {\n                    if (notifyMobilePhones[p].trim()) {\n                        let payUrl = `${this.url}/pay/${order.ordernum}`;\n                        Sms.send(\"90\" + Helper.getPhoneNumber(notifyMobilePhones[p].trim()), `KasaptanAl.com yeni sipariş: Bilgi icin ${payUrl}, teslimat kodu: ${order.securityCode}`, false, new SiteLogRoute(this.constructorParams))\n                    }\n                }\n            }\n\n            fres.push(dbOrder)\n        }\n\n        return fres;\n    }\n\n\n    async getOrderRoute() {\n        let order = await this.getOrder(this.req.params.ordernum);\n\n        if (!order) return this.next();\n        let view = this.getView(order);\n        this.res.send(view);\n    }\n\n    static SetRoutes(router: express.Router) {\n        //router.get(\"/admin/order/:ordernum\", Route.BindRequest(this.prototype.getOrderRoute));\n    }\n}\n\n\n"],"sourceRoot":"../../../src/"}