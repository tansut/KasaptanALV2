{"version":3,"sources":["../src/routes/api/sitelog.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,6CAAwC;AACxC,6CAA6C;AAE7C,qDAA8C;AAC9C,2CAAoC;AAEpC,4BAA4B;AAC5B,mBAAmB;AACnB,IAAI;AAEJ,MAAqB,YAAa,SAAQ,kBAAS;IAGzC,GAAG,CAAC,OAAY;;YAClB,IAAI,OAAO,mCAAO,OAAO,GAAK;gBAC1B,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAA,CAAC,CAAC,IAAI;gBAC7D,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAA,CAAC,CAAC,IAAI;gBAC9C,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa;aAC9E,CAAC,CAAC;YACH,MAAM,iBAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;QACjC,CAAC;KAAA;IAGK,QAAQ;;YACV,yDAAyD;YACzD,sCAAsC;YACtC,MAAM,iBAAO,CAAC,MAAM,CAAC;gBACjB,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAA,CAAC,CAAC,IAAI;gBAC9C,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAA,CAAC,CAAC,IAAI;gBAC7D,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI;gBACtB,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ;gBAC1B,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO;gBAC9B,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK;gBAC1B,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa;aAC9E,CAAC,CAAA;YACF,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE;gBACrB,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,oCAAoC,EAAE;oBAC/D,MAAM,eAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,gBAAgB,EAAE,eAAe,EAAE;wBACrE,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK;qBAC7B,CAAC,CAAA;iBACL;aACJ;YACD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA;QAC5B,CAAC;KAAA;IAED,MAAM,CAAC,SAAS,CAAC,MAAsB;QACnC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtF,CAAC;CACJ;AAzBG;IADC,aAAI,CAAC,SAAS,EAAE;;;;4CAqBhB;AAjCL,+BAsCC","file":"sitelog.js","sourcesContent":["import { Auth } from '../../lib/common';\nimport { ApiRouter } from '../../lib/router';\nimport * as express from \"express\";\nimport SiteLog from '../../db/models/sitelog';\nimport email from '../../lib/email';\n\n// type express.response : {\n//     session: any\n// }\n\nexport default class SiteLogRoute extends ApiRouter {\n\n\n    async log(content: any) {\n        var objectC = {...content, ...{\n            sessionid: this.req[\"session\"] ? this.req[\"session\"].id: null,\n            userid: this.req.user ? this.req.user.id: null,\n            ip: this.req.header(\"x-forwarded-for\") || this.req.connection.remoteAddress\n        }};\n        await SiteLog.create(objectC)\n    }\n\n    @Auth.Anonymous()\n    async logRoute() {\n        // if (this.req[\"session\"].id != this.req.body.sessionid)\n        //     return this.res.sendStatus(400)\n        await SiteLog.create({\n            userid: this.req.user ? this.req.user.id: null,\n            sessionid: this.req[\"session\"] ? this.req[\"session\"].id: null,\n            f1: this.req.body.city,\n            f2: this.req.body.district,\n            logtype: this.req.body.logtype,\n            email: this.req.body.email,\n            ip: this.req.header(\"x-forwarded-for\") || this.req.connection.remoteAddress\n        })\n        if (this.req.body.email) {\n            if (this.req.body.logtype == \"anonymous-user-download-meat-guide\") {\n                await email.send(this.req.body.email, \"iyi et rehberi\", \"meatguide.ejs\", {\n                    email: this.req.body.email\n                })\n            }\n        }\n        this.res.sendStatus(200)\n    }\n\n    static SetRoutes(router: express.Router) {\n        router.post(\"/sitelog/create\", SiteLogRoute.BindRequest(this.prototype.logRoute));\n    }\n}\n\n\n"],"sourceRoot":"../../../src/"}