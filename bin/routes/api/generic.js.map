{"version":3,"sources":["../src/routes/api/generic.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,6CAAwC;AACxC,6CAA6C;AAG7C,MAAqB,KAAM,SAAQ,kBAAS;IAExC,MAAM;QACF,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACnC,OAAO,CAAC,UAAU,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,WAAW;QACP,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,MAAsB;QACnC,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;IACzE,CAAC;CACJ;AAPG;IADC,aAAI,CAAC,SAAS,EAAE;;;;wCAGhB;AAXL,wBAgBC","file":"generic.js","sourcesContent":["import { Auth } from '../../lib/common';\nimport { ApiRouter } from '../../lib/router';\nimport * as express from \"express\";\n\nexport default class Route extends ApiRouter {\n\n    search() {\n        return new Promise((resolve, reject) => {\n            resolve('Oh yeah!');\n        });\n    }\n\n    @Auth.Anonymous()\n    searchRoute() {\n        return this.search().then((data) => this.res.send(data));\n    }\n\n    static SetRoutes(router: express.Router) {\n        router.get(\"/search\", Route.BindRequest(this.prototype.searchRoute));\n    }\n}\n\n\n"],"sourceRoot":"../../../src/"}