{"version":3,"sources":["../src/routes/api/product.ts"],"names":[],"mappings":"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","file":"product.js","sourcesContent":["import { Auth } from '../../lib/common';\nimport { ApiRouter } from '../../lib/router';\nimport * as express from \"express\";\nimport { ProductView } from '../../models/productView';\nimport Product from '../../db/models/product';\nimport Butcher from '../../db/models/butcher';\nimport ButcherProduct from '../../db/models/butcherproduct';\nimport Helper from '../../lib/helper';\nvar MarkdownIt = require('markdown-it')\nimport * as sq from 'sequelize';\n\n\nimport * as _ from 'lodash';\nimport Resource from '../../db/models/resource';\nimport ResourceCategory from '../../db/models/resourcecategory';\nimport Category from '../../db/models/category';\nimport { Op } from 'sequelize';\nimport { ProductLd, IProductLd } from '../../models/ProductLd';\nimport DispatcherApi from './dispatcher';\nimport Review from '../../db/models/review';\n\nexport default class Route extends ApiRouter {\n    markdown = new MarkdownIt();\n\n    async getFoodResources(products4?: Product[], limit?: number, catids?: number[], options = {}) {\n        return this.getResources({\n            list: true,\n            type: ['product-videos', 'product-photos'],\n            tag1: {\n                [Op.like]: '%yemek%',\n            }\n        }, products4, limit, catids, options)\n    }\n\n    async loadReviews(productid: number) {\n        let res: Review[] = await Review.sequelize.query(`\n        SELECT r.* FROM Reviews r, Orders o, OrderItems oi \n        WHERE r.type='order' and oi.status='teslim edildi' and r.ref1=o.id and oi.orderid = o.id and oi.productid=:pid\n        ORDER BY r.ID DESC\n        `\n        ,\n        {\n            replacements: { pid: productid },\n            type: sq.QueryTypes.SELECT,\n            model: Review,\n            mapToModel: true,\n            raw: false\n        }\n        );\n        return res;\n    }\n\n    async getTarifResources(products4?: Product[], limit?: number, catids?: number[], options = {}) {\n        return this.getResources({\n            list: true,\n            type: ['product-videos', 'product-photos'],\n            tag1: {\n                [Op.like]: '%tarif%',\n            }\n        }, products4, limit, catids, options)\n    }\n\n    async getFoodAndTarifResources(products4?: Product[], limit?: number, catids?: number[], options = {}) {\n        return this.getResources({\n            type: ['product-videos', 'product-photos'],\n            list: true,\n            tag1: {\n                [Op.or]: [{\n                    [Op.like]: '%yemek%'\n\n                }, { [Op.like]: '%tarif%' }]\n            }\n        }, products4, limit, catids, options)\n    }\n\n    async getResources(where, products4?: Product[], limit?: number, catids?: number[], options = <any>{}) {\n        if (products4) {\n            let ids = products4.map(p => p.id);\n            where = {\n                ...{                    \n                    [Op.or]: {\n                        ref1: ids,\n                        ref2: ids,\n                        ref3: ids,\n                        ref4: ids,\n                        ref5: ids,\n                        ref6: ids,\n                    }\n                },\n                ...where\n            }\n        }\n        if (catids) where['$categories.category.id$'] = catids;\n        let params = {\n            where: where,\n            raw: options.raw,\n            include: [{\n                model: ResourceCategory,\n                as: 'categories',\n                include: [{\n                    model: Category\n                },\n\n                ]\n            }],\n            order: [[{ model: ResourceCategory, as: 'categories' }, \"displayOrder\", \"desc\"], [\"displayOrder\", \"desc\"], [\"updatedOn\", \"desc\"]]\n        }\n        if (limit) params['limit'] = limit;\n        let allresources = await Resource.findAll(<any>params);\n\n        let products = products4 || await Product.findAll({\n            where: {\n                id: allresources.map(p => p.ref1).concat(allresources.filter(p => p.ref2).map(p => p.ref2)).concat(allresources.filter(p => p.ref3).map(p => p.ref3)).concat(allresources.filter(p => p.ref4).map(p => p.ref4)).concat(allresources.filter(p => p.ref5).map(p => p.ref5)).concat(allresources.filter(p => p.ref6).map(p => p.ref6))\n            }\n        })\n\n        let resources = [];\n\n        allresources.forEach(res => {\n            let product1 = products.find(prod => prod.id == res.ref1);\n            let product2 = res.ref2 ? products.find(prod => prod.id == res.ref2) : null;\n            let product3 = res.ref3 ? products.find(prod => prod.id == res.ref3) : null;\n            let product4 = res.ref4 ? products.find(prod => prod.id == res.ref4) : null;\n            let product5 = res.ref5 ? products.find(prod => prod.id == res.ref5) : null;\n            let product6 = res.ref6 ? products.find(prod => prod.id == res.ref6) : null;\n            if (product1) {\n                res.product = product1;\n                resources.push(res);\n            }\n            if (product2) {\n                res.otherProducts = res.otherProducts || []\n                res.otherProducts.push(product2);\n            }\n            if (product3) {\n                res.otherProducts = res.otherProducts || []\n                res.otherProducts.push(product3);\n            }\n            if (product4) {\n                res.otherProducts = res.otherProducts || []\n                res.otherProducts.push(product4);\n            }\n            if (product5) {\n                res.otherProducts = res.otherProducts || []\n                res.otherProducts.push(product5);\n            }\n            if (product6) {\n                res.otherProducts = res.otherProducts || []\n                res.otherProducts.push(product6);\n            }\n        })\n\n        return resources;\n    }\n\n    static async getResourcesOfCategories(catids: number[]) {\n        return await Resource.findAll({\n            include: [{\n                model: ResourceCategory,\n                as: 'categories',\n                include: [{\n                    model: Category\n                }\n                ]\n            },\n            ], where: {\n                '$categories.category.id$': catids\n            },\n            order: [[{ model: ResourceCategory, as: 'categories' }, \"displayOrder\", \"desc\"], [\"displayorder\", \"desc\"]]\n        });\n    }\n\n\n    async getTarifVideos(products4?: Product[], limit?: number, catids?: number[], options = {}) {\n        return this.getResources({\n            type: 'product-videos',\n            tag1: {\n                [Op.like]: '%tarif%',\n            }\n        }, products4, limit, catids, options)\n    }\n\n\n\n    async getInformationalVideos(limit?) {\n        let resources = await Resource.findAll({\n            where: {\n                type: 'product-videos',\n                tag1: 'bilgi'\n            },\n            limit: limit || 1000,\n            order: [['updatedon', 'DESC']]\n        });\n\n        let products = await Product.findAll({\n            where: {\n                id: resources.map(p => p.ref1)\n            }\n        })\n\n        resources.forEach(p => {\n            p.product = products.find(r => r.id == p.ref1)\n        })\n\n        return resources;\n    }\n\n\n    async getProductLd(product: Product): Promise<IProductLd> {\n        let res = new ProductLd(product)\n        let price = await product.getPriceStats();\n        let units = ['kg', 'unit1', 'unit2', 'unit3'];\n        let usedUnit = null;\n        if (price) {\n            for(let i = 0; i < units.length;i++) {\n                let avgPrice = price[`${units[i]}avg`];\n                if (avgPrice > 0)  {\n                    usedUnit = units[i];\n                    break;\n                }\n            }\n            if (usedUnit) {\n                res.offers = {\n                    '@type': \"AggregateOffer\",\n                    offerCount: price['count'],\n                    highPrice: Number(price[`${usedUnit}max`].toFixed(2)) ,\n                    lowPrice: Number(price[`${usedUnit}min`].toFixed(2)),\n                    priceCurrency: \"TRY\",\n                    availability: \"InStock\"\n                }\n            }\n        }\n\n        return res;\n  }\n\n    @Auth.Anonymous()\n    async getProductLdById(id: number) {\n        let product = await Product.findOne({\n            include: [{\n                all: true \n            }], where: { slug: this.req.params.product }\n        });\n        if (!product) return this.res.sendStatus(404);\n\n        await product.loadResources();\n        return this.getProductLd(product);\n    }\n\n\n    getProductUnits(product: Product) {\n        let result = [];\n        (product.unit1 && product.unit1 != \"\") ? result.push(product.unit1) : null;\n        (product.unit2 && product.unit2 != \"\") ? result.push(product.unit2) : null;\n        (product.unit3 && product.unit3 != \"\") ? result.push(product.unit3) : null;\n        return result;\n    }\n\n    async _getProductViewByProduct(product: Product, butcherproduct: ButcherProduct) {\n    }\n\n    async getProductViewByProduct(product: Product, butcherproduct: ButcherProduct) {\n    }\n\n    getPurchaseOptions(product: Product, butcherProduct?: ButcherProduct) {\n        let purchaseOptions =[];\n        let kgPrice = butcherProduct ? butcherProduct.kgPrice : 0.00;\n        this.getProductUnits(product).forEach((p, i) => {\n            let col = `unit${i + 1}`\n            let add = !butcherProduct ? true: (butcherProduct[`${col}enabled`]);\n            add && purchaseOptions.push({\n                id: i + 1,\n                notePlaceholder: product[`${col}note`],\n                desc: this.markdown.render(product[`${col}desc`] || \"\"),\n                kgRatio: product[`${col}kgRatio`],\n                unitWeight: (butcherProduct && butcherProduct[`${col}weight`]) || product[`${col}weight`],\n                unitPrice: butcherProduct ?\n                     (\n                         Helper.asCurrency(butcherProduct[`${col}price`]) > 0 ?\n                         Helper.asCurrency(butcherProduct[`${col}price`]):\n                         Helper.asCurrency( (butcherProduct[`${col}kgRatio`] || product[`${col}kgRatio`]) * kgPrice)\n                     ):\n                     0.00,\n                unit: p,\n                unitTitle: product[`${col}title`],\n                displayOrder: product[`${col}Order`],\n                min: product[`${col}min`],\n                max: product[`${col}max`],\n                default: product[`${col}def`],\n                perPerson: product[`${col}perPerson`],\n                step: product[`${col}step`],\n                weigthNote: product[`${col}WeigthNote`]\n            })\n        })\n        return _.sortBy(purchaseOptions, [\"displayOrder\"]).reverse()\n    }\n\n    async getProductView(product: Product, butcher?: Butcher, butcherProduct?: ButcherProduct, loadResources: boolean = false) {\n        if (!butcherProduct && butcher && !butcher.products) {\n            butcherProduct = await ButcherProduct.findOne({\n                where: {\n                    productid: product.id,\n                    butcherid: butcher.id,\n                    enabled: true\n                }\n            })\n        }\n        else if (butcher && butcher.products) {\n            butcherProduct = butcher.products.find(c => (c.productid == product.id) && c.enabled);\n        }\n\n\n        let kgPrice = butcherProduct ? butcherProduct.kgPrice : 0;\n        // let defaultUnitCol = `unit${product.defaultUnit}`\n        // let defaultUnitPrice = 0.0;\n        // let defaultUnitText = \"\";\n        //let kgRatio = 0.00;\n        //let defaultUnit = \"\";\n        //if (product.defaultUnit == 0) {\n        //    kgRatio = 1.00;\n        //    defaultUnit = 'kg'\n        //} else {\n            //kgRatio = product[`${defaultUnitCol}kgRatio`]\n            //defaultUnit = product[`${defaultUnitCol}`]\n        //}\n        // defaultUnitPrice = Helper.asCurrency(Helper.asCurrency(kgRatio * kgPrice) * product.defaultAmount);\n        // defaultUnitText = defaultUnit == 'kg' ? (product.defaultAmount < 1 ? `${product.defaultAmount * 1000}gr` : \"kg\") : product[`${defaultUnitCol}`]\n\n        let view: ProductView;\n        view = {\n            id: product.id,\n            butcher: butcherProduct ? {\n                enableCreditCard: butcher.enableCreditCard,\n                userRatingAsPerc: butcher.userRatingAsPerc,\n                shipRatingAsPerc: butcher.shipRatingAsPerc,\n                slug: butcher.slug,\n                badges: butcher.getBadgeList(),\n                name: butcher.name,\n                id: butcher.id           ,\n                puanData: butcher.getPuanData(),\n                earnedPuan: 0.00,\n                productNote: '',     \n                kgPrice: kgPrice\n            } : null,\n            butcherNote: (butcherProduct && butcherProduct.mddesc) ? butcherProduct.mddesc: '',\n            slug: product.slug,\n            name: product.name,\n            kgPrice: kgPrice,\n            productType: product.productType,\n            shortDesc: product.shortdesc,\n            notePlaceholder: product.notePlaceholder,\n            // viewUnitPrice: defaultUnitPrice,\n            // viewUnit: defaultUnitText,\n            // viewUnitDesc: product[`${defaultUnitCol}desc`] || (defaultUnit == 'kg' ? 'kg' : ''),\n            // defaultUnit: product.defaultUnit,\n            // viewUnitAmount: product.defaultAmount,\n            purchaseOptions: [],\n            alternateButchers: []\n        }\n\n        if (loadResources) {\n            view.resources = [];\n            product.resources.forEach(r=>view.resources.push(r.asView()))\n        }\n\n\n        view.purchaseOptions = this.getPurchaseOptions(product, butcherProduct); \n\n        return view;\n    }\n\n    // @Auth.Anonymous()\n    // async searchRoute() {\n    //     let product = await Product.findOne({\n    //         where: {\n    //             slug: this.req.params.slug\n    //         }\n    //     })\n\n    //     let butcher: Butcher = this.req.params.butcher ? await Butcher.findOne(\n    //         {\n    //             include: [{\n    //                 all: true\n    //             }],\n    //             where: {\n    //                 slug: this.req.params.butcher\n    //             }\n    //         }\n    //     ) : null;\n\n    //     let view = this.getProductView(product, butcher)\n    //     this.res.send(view)\n    // }\n\n    static SetRoutes(router: express.Router) {\n        // router.get(\"/product/:slug\", Route.BindRequest(this.prototype.searchRoute));\n        // router.get(\"/product/:slug/:butcher\", Route.BindRequest(this.prototype.searchRoute));\n    }\n}\n\n\n"],"sourceRoot":"../../../src/"}