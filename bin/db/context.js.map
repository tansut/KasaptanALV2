{"version":3,"sources":["../src/db/context.ts"],"names":[],"mappings":";;AAAA,+DAAiD;AACjD,8CAA4C;AAE5C,sCAA+B;AAE/B,wCAAiC;AACjC,wDAAiD;AACjD,gDAAyC;AACzC,wCAAiC;AACjC,8CAAuC;AAEvC,gDAAyC;AACzC,0CAAiD;AACjD,8CAAuC;AACvC,8DAAuD;AACvD,gEAAyD;AACzD,4DAAqD;AACrD,8CAAuC;AACvC,oDAA6C;AAC7C,8CAAuC;AACvC,gDAAyC;AACzC,0DAAmD;AACnD,sEAA+D;AAC/D,4CAAqC;AACrC,8CAAuC;AACvC,wDAAiD;AACjD,sDAA+C;AAI/C,IAAI,UAAqB,CAAC;AAE1B,IAAI,IAAI,GAAG,CAAC,MAAY,EAAE,EAAE;IACxB,UAAU,GAAG,IAAI,gCAAS,CAAC;QACvB,QAAQ,EAAE,gBAAM,CAAC,MAAM;QACvB,OAAO,EAAE,OAAO;QAChB,QAAQ,EAAE,gBAAM,CAAC,MAAM;QACvB,QAAQ,EAAE,gBAAM,CAAC,KAAK;QACtB,IAAI,EAAE,gBAAM,CAAC,MAAM;QACnB,IAAI,EAAE,gBAAM,CAAC,SAAS;QACtB,OAAO,EAAE,KAAK;QACd,cAAc,EAAE,EAAE,cAAc,EAAE,IAAI,EAAE;KAC3C,CAAC,CAAC;IAEH,UAAU,CAAC,SAAS,CAAC,CAAC,qBAAW,EAAE,iBAAO,EAAE,sBAAY,EAAE,gBAAM,EAAE,6BAAmB,EAAE,uBAAa,EAAE,kBAAQ,EAAE,iBAAO,EAAE,iBAAY,EAAE,aAAK,EAAE,iBAAS,EAAE,oBAAU,EAAE,cAAI,EAAE,sBAAY,EAAE,kBAAQ,EAAE,cAAI,EAAE,iBAAO,EAAE,kBAAQ,EAAE,iBAAO,EAAE,yBAAe,EAAE,wBAAc,EAAE,iBAAO,EAAE,0BAAgB,CAAC,CAAC,CAAC;IAElS,OAAO,UAAU,CAAC,IAAI,CAAC;QACnB,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,KAAK;KACjB,CAAC,CAAA;AACN,CAAC,CAAA;AAED,kBAAe,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE,CAAC,UAAU,EAAE,CAAC","file":"context.js","sourcesContent":["import { Sequelize } from 'sequelize-typescript';\nimport ButcherModel from \"./models/butcher\";\n\nimport config from \"../config\";\nimport * as path from 'path';\nimport User from './models/user';\nimport RefreshToken from './models/refreshToken';\nimport Resource from './models/resource';\nimport Area from './models/area';\nimport SiteLog from './models/sitelog';\nimport { where } from 'sequelize/types';\nimport Category from './models/category';\nimport { Order, OrderItem} from './models/order';\nimport Product from './models/product';\nimport ProductCategory from './models/productcategory';\nimport ResourceCategory from './models/resourcecategory';\nimport ButcherProduct from './models/butcherproduct';\nimport Content from './models/content';\nimport Dispatcher from './models/dispatcher';\nimport WebPage from './models/webpage';\nimport Redirect from './models/redirect';\nimport PriceCategory from './models/pricecategory';\nimport ButcherPriceHistory from './models/butcherpricehistory';\nimport Review from './models/review';\nimport Payment from './models/payment';\nimport AccountModel from './models/accountmodel';\nimport Subcategory from './models/subcategory';\n\n\n\nlet dbInstance: Sequelize;\n\nlet init = (params?: any) => {\n    dbInstance = new Sequelize({\n        database: config.dbname,\n        dialect: 'mysql',\n        username: config.dbuser,\n        password: config.dbpwd,\n        port: config.dbport,\n        host: config.dbaddress,\n        logging: false,\n        dialectOptions: { decimalNumbers: true }\n    });\n\n    dbInstance.addModels([Subcategory, Payment, AccountModel, Review, ButcherPriceHistory, PriceCategory, Redirect, WebPage, ButcherModel, Order, OrderItem, Dispatcher, User, RefreshToken, Resource, Area, SiteLog, Category, Product, ProductCategory, ButcherProduct, Content, ResourceCategory]);\n\n    return dbInstance.sync({\n        alter: true,\n        logging: false\n    })\n}\n\nexport default { init: init, getContext: () => dbInstance };"],"sourceRoot":"../../src/"}