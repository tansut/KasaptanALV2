{"version":3,"sources":["../src/db/models/content.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,+DAAmK;AACnK,2CAAmC;AAcnC,IAAM,OAAO,GAAb,MAAM,OAAQ,SAAQ,mBAAkB;IA8CpC,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAU,IAAI,CAAC,YAAY,CAAC,UAAU,CAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA;IAClG,CAAC;IAED,IAAI,WAAW,CAAC,KAAa;QACzB,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACtD,CAAC;CAEJ,CAAA;AAjDG;IAHC,6BAAM,CAAC;QACJ,SAAS,EAAE,IAAI;KAClB,CAAC;;0CACgB;AAKlB;IAHC,6BAAM,CAAC;QACJ,SAAS,EAAE,IAAI;KAClB,CAAC;;gDACsB;AAKxB;IAHC,6BAAM,CAAC;QACJ,SAAS,EAAE,KAAK;KACnB,CAAC;;sCACY;AAKd;IAHC,6BAAM,CAAC;QACJ,SAAS,EAAE,KAAK;KACnB,CAAC;;yCACe;AAKjB;IAHC,6BAAM,CAAC;QACJ,SAAS,EAAE,KAAK;KACnB,CAAC;;qCACW;AAKb;IAHC,6BAAM,CAAC;QACJ,SAAS,EAAE,IAAI;KAClB,CAAC;;6CACmB;AAKrB;IAHC,6BAAM,CAAC;QACJ,SAAS,EAAE,IAAI;KAClB,CAAC;;4CACkB;AAKpB;IAHC,6BAAM,CAAC;QACJ,SAAS,EAAE,IAAI;KAClB,CAAC;;6CACmB;AAGrB;IADC,6BAAM;8BACG,MAAM;yCAAC;AA3Cf,OAAO;IATZ,4BAAK,CAAC;QACH,SAAS,EAAE,UAAU;QACrB,OAAO,EAAE,CAAC;gBACN,IAAI,EAAE,UAAU;gBAChB,MAAM,EAAE,CAAC,MAAM,CAAC;gBAChB,MAAM,EAAE,IAAI;aACf,CAAC;KACL,CAAC;GAEI,OAAO,CAsDZ;AAED,kBAAe,OAAO,CAAC","file":"content.js","sourcesContent":["import { Table, Column, DataType, Model, HasMany, CreatedAt, UpdatedAt, DeletedAt, Unique, Default, AllowNull, ForeignKey, BelongsTo } from 'sequelize-typescript';\nimport BaseModel from \"./basemodel\"\nimport Helper from '../../lib/helper';\nimport ProductCategory from './productcategory';\nimport ButcherProduct from './butcherproduct';\n\n@Table({\n    tableName: \"Contents\",\n    indexes: [{\n        name: \"slug_idx\",\n        fields: [\"slug\"],\n        unique: true\n    }]\n})\n\nclass Content extends BaseModel<Content> {\n\n    @Column({\n        allowNull: true,\n    })\n    pageTitle: string;\n\n    @Column({\n        allowNull: true,\n    })\n    pageDescription: string;\n    \n    @Column({\n        allowNull: false,\n    })\n    title: string;\n\n    @Column({\n        allowNull: false,\n    })\n    category: string;\n\n    @Column({\n        allowNull: false,\n    })\n    slug: string;\n\n    @Column({\n        allowNull: true,\n    })\n    categorySlug: string;\n\n    @Column({\n        allowNull: true,\n    })\n    description: string;\n\n    @Column({\n        allowNull: true,\n    })\n    displayOrder: number;\n\n    @Column\n    markdown: Buffer;\n\n\n    get markDownStr(): string {\n        return this.getDataValue('markdown') ? (<Buffer>this.getDataValue('markdown')).toString() : \"\"\n    }\n\n    set markDownStr(value: string) {\n        this.setDataValue('markdown', Buffer.from(value));\n    }\n\n}\n\nexport default Content;"],"sourceRoot":"../../../src/"}