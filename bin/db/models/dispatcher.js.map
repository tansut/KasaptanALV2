{"version":3,"sources":["../src/db/models/dispatcher.ts"],"names":[],"mappings":"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","file":"dispatcher.js","sourcesContent":["import { Table, Column, DataType, Model, HasMany, CreatedAt, UpdatedAt, DeletedAt, Unique, Default, AllowNull, ForeignKey, BelongsTo } from 'sequelize-typescript';\nimport BaseModel from \"./basemodel\"\nimport Helper from '../../lib/helper';\nimport Area from './area';\nimport Butcher from './butcher';\nimport ButcherProduct from './butcherproduct';\nimport { OrderItem, Order } from './order';\nimport { PreferredAddress } from './user';\n\nexport enum DispatcherSelection {    \n    full = 'tam',\n    listOnly = 'sadece liste'\n}\n\n\nexport type DispatcherType = \"butcher\" | \"butcher/auto\" | \"kasaptanal/motokurye\" | \"kasaptanal/car\"\n\nexport let DispatcherTypeDesc = {\n    \"butcher\": \"Kasap\",\n    \"butcher/auto\": \"Kasap\",\n    \"kasaptanal/motokurye\": \"Soğuk Zincir Kurye Sistemi\",\n    \"kasaptanal/car\": \"Soğuk Zincir Araç Kurye Sistemi\",\n}\n\nexport type ExternalLogisticProviderUsage = \"none\" | \"default\" | \"select\" | \"force\" | \"auto\" | \"disabled\"\n\n@Table({\n    tableName: \"Dispatchers\",\n    indexes: [{\n        name: 'fromareaid_idx',\n        fields: ['fromareaid']\n    }, {\n        name: 'frombutcherid_idx',\n        fields: ['frombutcherid']\n    }, {\n        name: 'toareaid_idx',\n        fields: ['toareaid']\n    }, {\n        name: 'type_idx',\n        fields: ['type', 'typeid']\n    }]\n})\n\n\nclass Dispatcher extends BaseModel<Dispatcher> {\n\n    @ForeignKey(() => Area)\n    fromareaid: number;\n\n    @Column({\n        allowNull: true,\n    })\n    fromarealevel: number;\n\n    @BelongsTo(() => Area, \"fromareaid\")\n    fromarea: Area;\n\n    @ForeignKey(() => Butcher)\n    frombutcherid: number\n\n    @BelongsTo(() => Butcher, \"frombutcherid\")\n    frombutcher: Butcher;\n\n    @ForeignKey(() => Area)\n    toareaid: number;\n\n    @Column({\n        allowNull: true,\n    })\n    toarealevel: number;\n\n    @BelongsTo(() => Area, \"toareaid\")\n    toarea: Area;\n\n    @Column({\n        allowNull: false,\n        defaultValue: 0,\n        type: DataType.DECIMAL(13, 2)\n    })\n    fee: number;\n\n    @Column({\n        allowNull: false,\n        defaultValue: 0,\n        type: DataType.DECIMAL(13, 2)\n    })\n    totalForFree: number;\n\n    @Column({\n        allowNull: false,\n        defaultValue: 0,\n        type: DataType.DECIMAL(13, 2)\n    })\n    min: number;\n\n    @Column({\n        allowNull: false,\n        defaultValue: 'butcher'\n    })\n    type: DispatcherType;\n\n\n    @Column({\n        allowNull: false,\n        defaultValue: \"default\"\n    })\n    logisticProviderUsage: ExternalLogisticProviderUsage;\n\n    @Column({\n        allowNull: false,\n    })\n    name: string;\n\n    @ForeignKey(() => Butcher)\n    butcherid: number\n\n    @BelongsTo(() => Butcher, \"butcherid\")\n    butcher: Butcher;\n\n    @ForeignKey(() => OrderItem)\n    lastorderitemid: number\n\n    @BelongsTo(() => OrderItem, \"lastorderitemid\")\n    lastOrderItem: OrderItem;\n\n    @Column({\n        allowNull: false,\n    })\n    typeid: number;\n\n    address: PreferredAddress;\n\n    @Column({\n        allowNull: true,\n    })\n    note: string;\n\n    @Column({\n        allowNull: false,\n        defaultValue: 'tam'\n    })\n    selection: string;    \n\n    @Column({\n        allowNull: false,\n        defaultValue: true\n    })\n    enabled: boolean;\n\n    @Column({\n        allowNull: false,\n        defaultValue: false\n    })\n    takeOnly: boolean;\n\n    @Column\n    areaTag: string;\n\n    get userNote() {\n        let desc = \"\";\n\n        if (this.takeOnly) {\n            desc = \"*Semtinize sadece gel-al hizmeti verebiliyoruz*\"         \n        } else {\n            if (this.min > 0)\n                desc = `Sipariş toplamı ${Helper.formattedCurrency(this.min)} ve üzeriyse adresinize gönderebiliriz`\n            else desc = 'Adresinize gönderebiliriz'\n        }\n\n        return desc;\n    }\n\n    feeOffer: number;    \n\n    get priceInfo() {\n\n\n        let desc = \"\";\n\n        if (this.takeOnly) {\n            desc = \"Gel-al sadece\"\n            return desc;\n        }\n        \n        if (this.min > 0)\n            desc = `En az sipariş tutarı ${Helper.formattedCurrency(this.min)}`\n\n        if (this.fee <= 0) desc += ((desc ? ', ' : '') + 'Ücretsiz Gönderim');\n        else if (this.fee > 0 && this.totalForFree <= 0)\n            desc += ((desc ? ', ' : '') + `${Helper.formattedCurrency(this.fee)} gönderim ücreti`);\n        else if (this.fee > 0)\n\n            desc += ((desc ? ', ' : '') + `${Helper.formattedCurrency(this.totalForFree)} üzeri ücretsiz gönderim`);\n        return desc\n    }\n\n}\n\nexport default Dispatcher;"],"sourceRoot":"../../../src/"}