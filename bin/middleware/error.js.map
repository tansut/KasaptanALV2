{"version":3,"sources":["../src/middleware/error.ts"],"names":[],"mappings":"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","file":"error.js","sourcesContent":["import { HttpError, AppRequest } from \"../lib/http\"\nimport ErrorRoute from \"../routes/error\";\nimport * as express from \"express\";\nimport * as moment from 'moment';\nimport Middleware from \"./base\";\nimport email from \"../lib/email\";\nimport config from \"../config\";\n\nvar errormw: ErrorMiddleware;\n\nclass ErrorMiddleware extends Middleware {\n\n    logErrors(err, req, res, next) {\n        console.error(err.stack)\n        next(err)\n    }\n\n    clientErrorHandler(err, req, res, next) {\n        if (ErrorMiddleware.isXhr(req)) {\n            let isHttpErr = err instanceof HttpError\n            let httpErr = isHttpErr ? <HttpError>err : null;\n            let msg = httpErr ? httpErr.message : err.name || err.message;\n            if (config.nodeenv == 'production') {\n                email.send('tansut@gmail.com', 'hata/XHR: kasaptanAl.com', \"error.ejs\", {\n                    text: err + '/' + err.sql,\n                    stack: err.stack\n                })\n            }\n\n            res.status((httpErr && httpErr.statusCode) ? httpErr.statusCode : 500).send({ msg: msg })\n        } else {\n            next(err)\n        }\n    }\n\n    errorHandler(err, req, res, next) {\n        let httpErr = err instanceof HttpError ? null : <HttpError>err;\n        res.status((httpErr && httpErr.statusCode) ? httpErr.statusCode : 500);\n        if (config.nodeenv == 'production') {\n            email.send('tansut@gmail.com', 'hata: kasaptanAl.com', \"error.ejs\", {\n                text: err + '/' + err.sql,\n                stack: err.stack\n            })\n        }\n\n        new ErrorRoute({\n            req: req, res: res, next: next\n        }).renderPage(err, `pages/error.ejs`)\n    }\n\n    static isXhr(req) {\n        return req.xhr || (req.headers.accept && req.headers.accept.indexOf('json') > -1);\n    }\n\n    error404Handler(req: AppRequest, res, next) {\n        let redirect = req.__redirects[req.path];\n        if (redirect) {\n            let q = req.originalUrl.replace(req.path, '')\n            return res.redirect(redirect.toUrl + (q), redirect.permanent ? 301 : 302)\n        }\n        if (ErrorMiddleware.isXhr(req))\n            res.status(404).send(\"Sorry can't find that!\")\n        else\n            new ErrorRoute({\n                req: req, res: res, next: next\n            }).renderPage(new Error(), \"pages/error.404.ejs\", 404)\n    }\n\n\n    constructor(app: express.IRouter) {\n        super(app);\n        app.use(this.logErrors)\n        app.use(this.clientErrorHandler)\n        app.use(this.errorHandler)\n        app.use(this.error404Handler)\n\n    }\n}\n\nexport default (app: express.Application) => errormw = new ErrorMiddleware(app);\n\n\n\n// curl - X POST  https://rest.nexmo.com/sms/json \\\n// -d api_key = c20d0a9e \\\n// -d api_secret = rv6URkJ64TTYP7AD \\\n// -d to = 905326274151 \\\n// -d from = \"NEXMO\" \\\n// -d text = \"Hello from Nexmo\""],"sourceRoot":"../../src/"}