{"version":3,"sources":["../src/middleware/auth.ts"],"names":[],"mappings":"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","file":"auth.js","sourcesContent":["import * as express from \"express\";\nimport * as moment from 'moment';\nimport Middleware from \"./base\";\nimport * as http from '../lib/http';\nimport User from '../db/models/user';\nimport UserApi from '../routes/api/user';\nimport * as authCntroller from '../lib/authorizationToken';\n// const RememberMeStrategy = require(\"passport-remember-me\")\n\nvar passport = require('passport')\n    , LocalStrategy = require('passport-local').Strategy;\n\nexport var auth: AuthMiddleware;\n\nclass AuthMiddleware extends Middleware {\n\n    private tryLoadUser(req: http.AppRequest, res: express.Response, next: Function) {\n\n        var authHeader = req.cookies ? req.cookies[\"auth\"] : null;\n        if (!authHeader) {\n            return next();\n        }\n        try {\n            var accessToken = authCntroller.default.decryptAccessToken(authHeader);\n            this.validateAccessToken(accessToken).then((user) => {\n                req.user = <any>user;\n\n                return next();\n            }).catch((err) => {\n                let perr = err instanceof http.PermissionError;\n                if (perr) {\n                    debugger;\n                }\n                next()\n            }\n            );\n        } catch (e) {\n            next();\n        }\n    }\n\n    private validateAccessToken(accessToken: authCntroller.IAccessTokenData) {\n        return new Promise((resolve, reject) => {\n            //accessToken.expiration_time = moment().add('minute', -30).toDate()\n            if (moment(accessToken.expiration_time).utc().isSameOrAfter(moment().utc())) {\n                return User.findByPk(accessToken.userId).then((user) => {\n                    return user ? resolve(user) : reject(new http.NotFoundError(\"invalid user\"));\n                })\n            } else reject(new http.PermissionError(JSON.stringify({ message: 'Token Expired', PermissionErrorType: 'tokenExpire' })));\n        });\n    }\n\n    public force(req: http.AppRequest, res: express.Response, next: Function, roles?: Array<string>) {\n        if (!req.user)\n            next(new http.PermissionError());\n        else next();\n    }\n\n    constructor(app: express.IRouter) {\n        super(app);\n        app.use(passport.initialize());\n        app.use(passport.session());\n        // app.use(passport.authenticate('remember-me'));\n\n        passport.serializeUser(function (user, done) {\n            done(null, user.id);\n        });\n\n        passport.deserializeUser(function (id, done) {\n            User.findByPk(id).then(user => {\n                done(null, user);\n            }).catch(done);\n        });\n\n        passport.use(new LocalStrategy({\n            passReqToCallback: true,\n            usernameField: 'email',\n            passwordField: 'password'\n        },\n            function (req, username, password, done) {\n                User.retrieveByEMailOrPhone(username).then(user => {\n                    if (!user) {\n                        return done(null, false, { message: 'Incorrect user.' });\n                    }\n                    if (!user.verifyPassword(password)) {\n                        return done(null, false, { message: 'Incorrect user.' });\n                    }\n                    return done(null, user, { s: true });\n                });\n            }\n        ));\n\n\n\n        app.post('/api/v1/authenticate',\n            passport.authenticate('local', { failureFlash: true, successRedirect: \"/api/v1/status\", successFlash: true })\n        );\n        //app.use(this.tryLoadUser.bind(this));\n    }\n}\n\n\nexport default (app: express.Application) => auth = new AuthMiddleware(app);\n"],"sourceRoot":"../../src/"}