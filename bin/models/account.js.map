{"version":3,"sources":["../src/models/account.ts"],"names":[],"mappings":"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","file":"account.js","sourcesContent":["import Helper from \"../lib/helper\";\n\nconst orderid = require('order-id')('dkfjsdklfjsdlkg450435034.,')\n\n\nexport type AccountType =  \"active\" | \"passive\"\nexport type ParentAccount =  \"kredi-karti-provizyon\" | \"havuz-hesabi\" | \n\"kredi-karti-provizyon-iade\" | \"kredi-karti-odemeleri\" | \"banka\" | \"musteri-kalitte-kazanilan-puan\" |\n\"kasap-puan-giderleri\" | \"kasap-urun-giderleri\" | \"kalitte-puan-giderleri\" | \"musteri-kasap-kazanilan-puan\" |\n\"odeme-sirketi-giderleri\" | \"odeme-bekleyen-satislar\" | \"satis-alacaklari\" | \"satis-indirimleri\" | \"kasaplardan-alacaklar\"\n| \"kasap-borc-tahakkuk\" | \"gelirler\" | \"kasaplardan-kesilen-komisyonlar\"\n\nexport interface AccountInfo {\n    type: AccountType,\n    name: string;\n    code: string;\n}\n\n\nexport let KnownAccounts: {[key: string]: AccountInfo} = {\n\n    \"kredi-karti-provizyon\": {\n        type: \"passive\",\n        name: \"Müşterilerden çekilen provizyon\",\n        code: \"200\"\n    },\n\n    \"havuz-hesabi\": {\n        type: \"active\",\n        name: \"Havuz hesabı\",\n        code: \"201\"\n    },\n\n    \"kredi-karti-provizyon-iade\": {\n        type: \"active\",\n        name: \"\",\n        code: \"202\"\n    },\n    \n    \"kredi-karti-odemeleri\": {\n        type: \"passive\",\n        name: \"\",\n        code: \"600\"\n    },\n\n    \"banka\": {\n        type: \"active\",\n        name: \"\",\n        code: \"100\"\n    },\n\n    \"kasap-puan-giderleri\": {\n        type: \"active\",\n        name: \"\",\n        code: \"120\"\n    },\n\n    \"musteri-kasap-kazanilan-puan\": {\n        type: \"passive\",\n        name: \"\",\n        code: \"130\"\n    },    \n\n    \"musteri-kalitte-kazanilan-puan\": {\n        type: \"passive\",\n        name: \"\",\n        code: \"132\"\n    },        \n\n    \"kasap-urun-giderleri\": {\n        type: \"active\",\n        name: \"\",\n        code: \"121\"\n    }  ,\n\n    \"kalitte-puan-giderleri\": {\n        type: \"active\",\n        name: \"\",\n        code: \"125\"\n    },\n\n    \"odeme-sirketi-giderleri\": {\n        type: \"active\",\n        name: \"\",\n        code: \"110\"\n    },\n\n    \"odeme-bekleyen-satislar\": {\n        type: \"passive\",\n        name: \"\",\n        code: \"205\"\n    },\n\n    \"satis-alacaklari\": {\n        type: \"active\",\n        name: \"\",\n        code: \"206\"\n    },\n\n    \"kasaplardan-alacaklar\": {\n        type: \"active\",\n        name: \"\",\n        code: \"210\"\n    },    \n\n    \"kasap-borc-tahakkuk\": {\n        type: \"passive\",\n        name: \"\",\n        code: \"605\"\n    },     \n\n    \"satis-indirimleri\": {\n        type: \"active\",\n        name: \"Uygulanan Satış İndirimleri\",\n        code: \"207\"\n    },\n\n    \n\n    \"gelirler\": {\n        type: \"passive\",\n        name: \"Gelirler\",\n        code: \"650\"\n    },\n    \n    \"kasaplardan-kesilen-komisyonlar\": {\n        type: \"active\",\n        name: \"Kasaplardan Kesilen komisyonlar\",\n        code: \"215\"\n    }\n}\n\n\n\nexport class Account {    \n    code: string;\n    info: AccountInfo;\n    borc: number;\n    alacak: number;   \n    opDesc: string; \n    itemDesc: string; \n\n\n    static getType(parent: ParentAccount) {\n        let item = KnownAccounts[parent];\n        if (!item) throw new Error('Invalid account:' + parent);\n        return item;\n    }\n\n    static generateCode(parent: ParentAccount, values: Object[] = null) {\n        let accountCode = Account.getType(parent).code;\n        return `${accountCode}.` + values.join(\".\")\n    }\n\n    inc(val: number) {\n        if (this.info.type == 'active')\n            this.borc += Helper.asCurrency(val);\n        else this.alacak += Helper.asCurrency(val);\n        return this;\n    }\n\n    dec(val: number) {\n        if (this.info.type == 'active')\n            this.alacak += Helper.asCurrency(val);\n        else this.borc += Helper.asCurrency(val);\n        return this;\n    }\n\n    constructor(parent: ParentAccount, subValues: Object[], itemDesc: string='') {\n        this.info = Account.getType(parent);\n        this.code = Account.generateCode(parent, subValues);    \n        this.borc = 0.00;\n        this.alacak = 0.00;    \n        this.itemDesc = itemDesc;\n    }\n}\n\nexport class AccountingOperation {    \n    desc: string;\n    opcode: string;\n    accounts: Account[] = [];\n\n    constructor(desc: string) {\n        this.desc = desc;\n        this.opcode = orderid.generate();\n    }\n\n    summary() {\n        let borc = 0.00, alacak = 0.00;\n        this.accounts.forEach(a => {\n            borc+=a.borc;\n            alacak+=a.alacak;\n        })\n        return [Helper.asCurrency(borc), Helper.asCurrency(alacak)]\n    }\n\n    validate() {\n        let s = this.summary();\n        if (s[0] != s[1]) {\n            throw new Error(\"Invalid accounting operation\");\n        } \n        else return s\n    }\n}"],"sourceRoot":"../../src/"}