{"version":3,"sources":["../src/models/shipment.ts"],"names":[],"mappings":"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","file":"shipment.js","sourcesContent":["import Helper from \"../lib/helper\";\nimport moment = require(\"moment\");\nimport Dispatcher from \"../db/models/dispatcher\";\nimport { GeoLocation } from \"./geo\";\n\nexport let ShipmentHours = {\n    //0: 'Herhangi bir saat olabilir',\n    812: 'Sabah 8-10 arası',\n    1012: 'Sabah 10-12 arası',\n    1214: 'Öğlen 12-2 arası',\n    1416: 'Öğleden sonra 2-4 arası',\n    1618: 'Akşama doğru 4-6 arası',\n    1819: 'Akşam 6-7 arası',\n    1920: 'Akşam 7-8 arası',\n    2021: 'Akşam 8-9 arası',\n}\n\nexport let ShipmentDays = {\n    1: 'Pazartesi',\n    2: 'Salı',\n    3: 'Çarşamba',\n    4: 'Perşembe',\n    5: 'Cuma',\n    6: 'Cumartesi',\n    0: 'Pazar'\n}\n\nexport type ShipmentType = \"callme\" | \"sameday\" | \"tomorrow\" | \"weekend\" | \"plan\";\n\nexport let ShipmentTypeDesc = {\n    \"callme\": \"Telefon ile sizi arayacağız ve teslimat zamanını belirleyeceğiz\",\n    \"sameday\": \"Sipariş ile aynı gün içerisinde.\",\n    \"plan\": \"Planlanan saat aralığında.\"\n}\n\nexport let ShipmentHowToDesc = {\n    \"unset\": \"Henüz belirlenmedi\",\n    \"take\": \"Gel Al\",\n    \"ship\": \"Adrese Gönderim\",\n}\n\nexport type HowToShipType = 'unset' | 'take' | 'ship';\n\nexport interface DispatcherView {\n    id: number,\n    type: string,\n    name: string,\n    fee: number,\n    totalForFree: number\n    min: number;\n    takeOnly: boolean;\n    location: GeoLocation;\n}\n\nexport class Shipment {\n    howTo: HowToShipType = 'unset';\n\n    get howToDesc() {\n        return ShipmentHowToDesc[this.howTo]\n    }\n\n    get desc() {\n        return ShipmentTypeDesc[this.type]\n    }\n\n    type: ShipmentType = \"callme\";    \n    days: string[] = [];\n    hours: number [] = []\n    informMe: boolean = true;\n    daysText: string[] = [];\n    hoursText: string [] = []    \n    dispatcher: DispatcherView = null;\n    nointeraction: boolean = true;\n\n    static  availableTimes(date: Date = Helper.Now()): Object {        \n        var isToday = (Helper.Now().toDateString() === date.toDateString());\n        let currentHour = Helper.Now().getHours();        \n        if (isToday) {\n            let res = {}\n            Object.keys(ShipmentHours).forEach(k=>{\n                if (currentHour < 19) {\n                    if (parseInt(k) > (currentHour * 100 + 100)) res[k] = ShipmentHours[k]\n                }\n            })\n            return res;\n        } else return ShipmentHours;\n    }\n\n    static  availableDays(date: Date = Helper.Now()): Object {        \n        //let tomorrow = new Date(Helper.Now().getTime() + 24 * 60 * 60 * 1000)  \n        let res = {};\n        let nextDay = Helper.Now()\n        for(let i = 0; i < 14; i++) {\n            nextDay = Helper.NextDay(nextDay);\n            let text = i == 0 ? 'Yarın': Helper.formatDate(nextDay)\n            res[nextDay.toDateString()] = text;\n        }\n        return res;\n    }    \n}"],"sourceRoot":"../../src/"}