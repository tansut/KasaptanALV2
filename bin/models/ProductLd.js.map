{"version":3,"sources":["../src/models/ProductLd.ts"],"names":[],"mappings":";;;AAqCA,MAAa,SAAS;IAYlB,YAAY,OAAgB;QAX5B,gBAAU,GAAW,qBAAqB,CAAC;QAC3C,aAAO,GAAW,SAAS,CAAC;QAO5B,sBAAiB,GAAG,IAAI,CAAA;QAIpB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC;QACzC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC;QACxB,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAA,EAAE;YACzB,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE;gBACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,CAAA;aAClC;QACL,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,eAAe,GAAG;YACnB,OAAO,EAAE,iBAAiB;YAC1B,WAAW,EAAE,OAAO,CAAC,WAAW;YAChC,WAAW,EAAE,OAAO,CAAC,WAAW;SACnC,CAAA;QACD,IAAI,CAAC,KAAK,GAAG;YACT,OAAO,EAAE,OAAO;YAChB,IAAI,EAAE,gBAAgB;SACzB,CAAA;IACL,CAAC;CACJ;AAhCD,8BAgCC","file":"ProductLd.js","sourcesContent":["import Product from \"../db/models/product\";\n\nexport interface IOffer {\n    '@type': string;\n    highPrice: number;\n    lowPrice: number;\n    offerCount: number;\n    priceCurrency: string;\n    availability: string;\n}\n\nexport interface IBrand {\n    '@type': string;\n    name: string;\n}\n\nexport interface IProductLd {\n    '@context': string;\n    '@type': string;\n    name: string;\n    image: string[];\n    description: string;\n    sku: string;\n    brand: IBrand;\n    identifier_exists: string;\n    offers?: IOffer\n    aggregateRating: IAggregateRating;\n\n}\n\nexport interface IAggregateRating {\n    '@type': string;\n    ratingValue: number;\n    ratingCount: number;\n    // reviewCount: number;\n}\n\nexport class ProductLd implements IProductLd {\n    '@context': string = 'https://schema.org/';\n    '@type': string = \"Product\";\n    name: string;\n    image: string [];\n    description: string;    \n    sku: string;\n    brand: IBrand;\n    offers?: IOffer;\n    identifier_exists = 'no'\n    aggregateRating: IAggregateRating;\n \n    constructor(product: Product) {\n        this.name = product.name;\n        this.description = product.generatedDesc;\n        this.image = [];\n        this.sku = product.slug;\n        product.resources.forEach(r=> {\n            if (!r.tag1 && r.list) {\n                this.image.push(r.getFileUrl())\n            }\n        })\n        this.aggregateRating = {\n            \"@type\": \"AggregateRating\",\n            ratingCount: product.reviewCount,\n            ratingValue: product.ratingValue\n        }\n        this.brand = {\n            '@type': 'Thing',\n            name: 'kasaptanAl.com'\n        }\n    }\n}"],"sourceRoot":"../../src/"}